setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/7-dg-regio/2-beyond-patents/0-data/2. Clean")
ind = read.csv ("ind.att.csv")
ind = read.csv2 ("ind.att.csv")
head(ind)
ind = unique (ind[, c("two.d", "Label", "Main")])
View(ind)
head(df)
# read data
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/7-dg-regio/2-beyond-patents/2-analysis")
df = read.csv("6-rd.ind-rd-comp.csv")
head(df)
# read data
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/7-dg-regio/2-beyond-patents/2-analysis")
df = read.csv("6-rd.ind-rd-comp.csv")
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/7-dg-regio/2-beyond-patents/0-data/2. Clean")
ind = read.csv2 ("ind.att.csv")
ind = unique (ind[, c("two.d", "Label", "Main")])
df2 = merge (df, ind, by.x = "nace2d", by.y = "two.d", all.x = T)
View(df2)
df3 = data.frame (
e = unique (df2$nace2d),
d = unique (df2$nace2d.name),
f = unique (df2$Main)
)
df3 = unique (df2[, c("nace2d", "nace2d.name", "Main")])
View(df3)
df = merge (df, ind, by.x = "nace2d", by.y = "two.d", all.x = T)
df$KIA = trimws(df$Main)
library(RColorBrewer)
n <- length (unique (df$Main))
n
n <- as.numeric (length (unique (df$Main)))
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
library(DT)
library (stringr)
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/Projects/1-dg-regio-science/1-maps-charts/smart-specialisation-graphs/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# read data
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/7-dg-regio/2-beyond-patents/2-analysis")
df = read.csv("6-rd.ind-rd-comp.csv")
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/7-dg-regio/2-beyond-patents/0-data/2. Clean")
ind = read.csv2 ("ind.att.csv")
ind = unique (ind[, c("two.d", "Label", "Main")])
df = merge (df, ind, by.x = "nace2d", by.y = "two.d", all.x = T)
df$KIA = trimws(df$Main)
library(RColorBrewer)
n <- as.numeric (length (unique (df$Main)))
n <- as.numeric (length (unique (df$Main)))
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
pie(rep(1,n), col=sample(col_vector, n))
col
sample(col_vector, n)
sample(col_vector, n)
?match.mat
set.seed(31)
col=sample(col_vector, n)
col
set.seed(31)
col=sample(col_vector, n)
col
i in (unique (df$nace2d))
for (i in 1:n) {print i}
for (i in c(1:n)) {print i}
for (i in c(1:n)) {
print (i)}
for (i in 1:n) {
print (i)}
df$idcol = factor (df$Main)
head(df)
df$idcol = as.numeric (factor (df$Main))
head(df)
col
col[1]
for (i in 1:n) {
df$color[df$idcol==i] = col[i]
}
head(df)
i = "FR10"
df = subset (df.full, df.full$nuts2 == i)
df.full = df
df = subset (df.full, df.full$nuts2 == i)
df$Region = NULL
# add variables
df$parent = df$KIA
df$id = as.character (df$nace2d.name)
df$id = str_replace_all(df$id, "[^[:alnum:]]", " ")
df$value = df$rca
df$x = df$reldens
df$y = df$complexity
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
r = i
setwd("D:/Dropbox/2-private/1-asg/Projects/1-dg-regio-science/1-maps-charts/smart-specialisation-graphs/industries/_JSON")
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/dg-regio/smart-specialisation-graphs/industries")
setwd("D:/Dropbox/2-private/1-asg/Projects/1-dg-regio-science/1-maps-charts/smart-specialisation-graphs/industries")
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
library(DT)
library (stringr)
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/Projects/1-dg-regio-science/1-maps-charts/smart-specialisation-graphs/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# read data
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/7-dg-regio/2-beyond-patents/2-analysis")
df = read.csv("6-rd.ind-rd-comp.csv")
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/7-dg-regio/2-beyond-patents/0-data/2. Clean")
ind = read.csv2 ("ind.att.csv")
ind = unique (ind[, c("two.d", "Label", "Main")])
df = merge (df, ind, by.x = "nace2d", by.y = "two.d", all.x = T)
df$KIA = trimws(df$Main)
library(RColorBrewer)
n <- as.numeric (length (unique (df$Main)))
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
set.seed(31)
col=sample(col_vector, n)
df$color = "Black"
df$idcol = as.numeric (factor (df$Main))
for (i in 1:n) {
df$color[df$idcol==i] = col[i]
}
df.full = df
##
for (i in unique (df$nuts2)) {
i = "FR10"
df = subset (df.full, df.full$nuts2 == i)
df$Region = NULL
# add variables
df$parent = df$KIA
df$id = as.character (df$nace2d.name)
df$id = str_replace_all(df$id, "[^[:alnum:]]", " ")
df$value = df$rca
#df$parent = df$color
df$x = df$reldens
df$y = df$complexity
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
r = i
setwd("D:/Dropbox/2-private/1-asg/Projects/1-dg-regio-science/1-maps-charts/smart-specialisation-graphs/industries/_JSON")
write_json(df, paste0(r, ".JSON"))
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/1-dg-regio-science/1-maps-charts/smart-specialisation-graphs/industries")
writeLines(all, paste0(r, ".html"))
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/dg-regio/smart-specialisation-graphs/industries")
writeLines(all, paste0(r, ".html"))
}
x = "ab"
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
toupper(substr(x, 1, 1))
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
library(DT)
library (stringr)
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/Projects/1-dg-regio-science/1-maps-charts/smart-specialisation-graphs/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# read data
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/7-dg-regio/2-beyond-patents/2-analysis")
df = read.csv("6-rd.ind-rd-comp.csv")
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/7-dg-regio/2-beyond-patents/0-data/2. Clean")
ind = read.csv2 ("ind.att.csv")
ind = unique (ind[, c("two.d", "Label", "Main")])
df = merge (df, ind, by.x = "nace2d", by.y = "two.d", all.x = T)
df$KIA = trimws(df$Main)
firstup <- function(x) {
x <- tolower(x)
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
df$KIA = firstup (df$KIA)
library(RColorBrewer)
n <- as.numeric (length (unique (df$Main)))
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
set.seed(31)
col=sample(col_vector, n)
df$color = "Black"
df$idcol = as.numeric (factor (df$Main))
for (i in 1:n) {
df$color[df$idcol==i] = col[i]
}
df.full = df
##
for (i in unique (df$nuts2)) {
#i = "FR10"
df = subset (df.full, df.full$nuts2 == i)
df$Region = NULL
# add variables
df$parent = df$KIA
df$id = as.character (df$nace2d.name)
df$id = str_replace_all(df$id, "[^[:alnum:]]", " ")
df$value = df$rca
#df$parent = df$color
df$x = df$reldens
df$y = df$complexity
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
r = i
setwd("D:/Dropbox/2-private/1-asg/Projects/1-dg-regio-science/1-maps-charts/smart-specialisation-graphs/industries/_JSON")
write_json(df, paste0(r, ".JSON"))
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/1-dg-regio-science/1-maps-charts/smart-specialisation-graphs/industries")
writeLines(all, paste0(r, ".html"))
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/dg-regio/smart-specialisation-graphs/industries")
writeLines(all, paste0(r, ".html"))
}
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/7-dg-regio/2-beyond-patents/0-data/2. Clean")
ind = read.csv2 ("ind.att.csv")
head(df)
# read data
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/7-dg-regio/2-beyond-patents/2-analysis")
df = read.csv("6-rd.ind-rd-comp.csv")
head(df)
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
library(DT)
library (stringr)
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/Projects/1-dg-regio-science/1-maps-charts/smart-specialisation-graphs/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# read data
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/7-dg-regio/2-beyond-patents/2-analysis")
df = read.csv("6-rd.ind-rd-comp.csv")
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/7-dg-regio/2-beyond-patents/0-data/2. Clean")
ind = read.csv2 ("ind.att.csv")
ind = unique (ind[, c("two.d", "Label", "Main")])
df = merge (df, ind, by.x = "nace2d", by.y = "two.d", all.x = T)
df$KIA = trimws(df$Main)
library(RColorBrewer)
n <- as.numeric (length (unique (df$Main)))
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
set.seed(31)
col=sample(col_vector, n)
df$color = "Black"
df$idcol = as.numeric (factor (df$Main))
for (i in 1:n) {
df$color[df$idcol==i] = col[i]
}
df.full = df
##
for (i in unique (df$nuts2)) {
#i = "FR10"
df = subset (df.full, df.full$nuts2 == i)
df$Region = NULL
# add variables
df$parent = df$KIA
df$id = as.character (df$nace2d.name)
df$id = str_replace_all(df$id, "[^[:alnum:]]", " ")
firstup <- function(x) {
x <- tolower(x)
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
df$id = firstup (df$id)
df$value = df$rca
#df$parent = df$color
df$x = df$reldens
df$y = df$complexity
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
r = i
setwd("D:/Dropbox/2-private/1-asg/Projects/1-dg-regio-science/1-maps-charts/smart-specialisation-graphs/industries/_JSON")
write_json(df, paste0(r, ".JSON"))
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/1-dg-regio-science/1-maps-charts/smart-specialisation-graphs/industries")
writeLines(all, paste0(r, ".html"))
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/dg-regio/smart-specialisation-graphs/industries")
writeLines(all, paste0(r, ".html"))
}
i = "FR10"
df = subset (df.full, df.full$nuts2 == i)
df$Region = NULL
# add variables
df$parent = df$KIA
df$id = as.character (df$nace2d.name)
df$id = str_replace_all(df$id, "[^[:alnum:]]", " ")
firstup <- function(x) {
x <- tolower(x)
substr(x, 1, 1) <- toupper(substr(x, 1, 1))
x
}
df$id = firstup (df$id)
head(df)
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
library(DT)
library (stringr)
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/Projects/1-dg-regio-science/1-maps-charts/smart-specialisation-graphs/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# read data
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/7-dg-regio/2-beyond-patents/2-analysis")
df = read.csv("6-rd.ind-rd-comp.csv")
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/7-dg-regio/2-beyond-patents/0-data/2. Clean")
ind = read.csv2 ("ind.att.csv")
ind = unique (ind[, c("two.d", "Label", "Main")])
df = merge (df, ind, by.x = "nace2d", by.y = "two.d", all.x = T)
df$KIA = trimws(df$Main)
library(RColorBrewer)
n <- as.numeric (length (unique (df$Main)))
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
set.seed(31)
col=sample(col_vector, n)
df$color = "Black"
df$idcol = as.numeric (factor (df$Main))
for (i in 1:n) {
df$color[df$idcol==i] = col[i]
}
df.full = df
##
for (i in unique (df$nuts2)) {
#i = "FR10"
df = subset (df.full, df.full$nuts2 == i)
df$Region = NULL
# add variables
df$parent = df$KIA
df$id = as.character (df$nace2d.name)
df$id = str_replace_all(df$id, "[^[:alnum:]]", " ")
df$value = df$rca
#df$parent = df$color
df$x = df$reldens
df$y = df$complexity
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
r = i
setwd("D:/Dropbox/2-private/1-asg/Projects/1-dg-regio-science/1-maps-charts/smart-specialisation-graphs/industries/_JSON")
write_json(df, paste0(r, ".JSON"))
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/1-dg-regio-science/1-maps-charts/smart-specialisation-graphs/industries")
writeLines(all, paste0(r, ".html"))
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/dg-regio/smart-specialisation-graphs/industries")
writeLines(all, paste0(r, ".html"))
}
