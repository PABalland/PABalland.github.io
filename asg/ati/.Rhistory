df$color[df$parent=="University"] = "Red"
df$color[df$parent=="Other firms"] = "Blue"
df$color[df$Region=="Nec laboratories america inc."] = "Lightred"
df$color[df$Region=="Intel corporation"] = "Purple"
df$color[df$Region=="International business machines corporation"] = "Green"
df.full = df
df.full = subset (df.full, df.full$Count>4)
df.full$sum = ave(df.full$Count, df.full$Industry, FUN = sum)
df.full$share = round (df.full$Count*100/df.full$sum, digits = 2)
##
for (i in unique (df$Industry)) {
#i = "Drenthe"
df = subset (df.full, df.full$Industry == i)
df$Industry = NULL
# add variables
df$id = df$Region
df$value = df$Count
df$name = df$Region
var = c("parent", "id", "value", "color", "share", "name")
df = unique(df[, var])
df = df[complete.cases(df),]
r=i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/7-kinckso/_treemaps-techs-main-players")
writeLines(all, paste0(r, ".html"))
}
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
dir = "D:/Dropbox/2-private/1-asg/Projects/7-kinckso/"
# load different parts of html
setwd(paste0(dir, "_treemaps-techs/_source"))
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
setwd(paste0(dir, "_analysis"))
pl = read.csv2 ("4-main-players-US.csv")
library(dplyr)
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
pl$state = toupper(substrRight(pl$reg_tl3_label, 2))
pl = subset (pl, pl$prio_year>2013)
pl = subset (pl, pl$prio_year<2018)
pl = pl[, c("app_name", "tech")]
pl$count = 1
pl = get.list (get.matrix (pl))
pl$id = as.numeric(factor (unique (pl$Region)))
df = pl
df$Region = iconv(df$Region, to = 'ASCII//TRANSLIT')
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
df$sum = ave(df$Count, df$Industry, FUN = sum)
df$share = round (df$Count*100/df$sum, digits = 2)
df$Region = as.character (df$Region)
df$color = "green"
df$TARGET <- grepl("University", df$Region)
df$TARGET2 <- grepl("university", df$Region)
df$TARGET3 <- grepl("college", df$Region)
df$TARGET4 <- grepl("College", df$Region)
df$parent = "Other firms"
df$parent[df$TARGET == TRUE] = "University"
df$parent[df$TARGET2 == TRUE] = "University"
df$parent[df$TARGET3 == TRUE] = "University"
df$parent[df$TARGET4 == TRUE] = "University"
df$parent[df$Region=="Massachusetts institute of technology"]="University"
df$parent[df$Region=="President and fellows of harvard college"]="University"
df$parent[df$Region=="Google llc"]="Big Five"
df$parent[df$Region=="Facebook inc."]="Big Five"
df$parent[df$Region=="Apple inc."]="Big Five"
df$parent[df$Region=="Amazon technologies inc."]="Big Five"
df$parent[df$Region=="Microsoft technology licensing llc"]="Big Five"
df$Region[df$Region=="President and fellows of harvard college"]="Harvard"
df$Region[df$Region=="Massachusetts institute of technology"]="MIT"
df$Region[df$Region=="Amazon technologies inc."]="Amazon"
df$Region[df$Region=="Apple inc."]="Apple"
df$Region[df$Region=="Facebook inc."]="Facebook"
df$Region[df$Region=="Google inc."]="Google"
df$Region[df$Region=="The regents of the university of california"]="Univ. of California"
df$Region[df$Region=="The texas a&m university system"]="Texas A&M"
df$color[df$parent=="Big Five"] = "Yellow"
df$color[df$parent=="University"] = "Red"
df$color[df$parent=="Other firms"] = "Blue"
df$color[df$Region=="Nec laboratories america inc."] = "Lightred"
df$color[df$Region=="Intel corporation"] = "Purple"
df$color[df$Region=="International business machines corporation"] = "Green"
df.full = df
df.full = subset (df.full, df.full$Count>4)
df.full$sum = ave(df.full$Count, df.full$Industry, FUN = sum)
df.full$share = round (df.full$Count*100/df.full$sum, digits = 2)
##
for (i in unique (df$Industry)) {
#i = "Drenthe"
df = subset (df.full, df.full$Industry == i)
df$Industry = NULL
# add variables
df$id = df$Region
df$value = df$Count
df$name = df$Region
var = c("parent", "id", "value", "color", "share", "name")
df = unique(df[, var])
df = df[complete.cases(df),]
r=i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/7-kinckso/_treemaps-techs-main-players")
writeLines(all, paste0(r, ".html"))
}
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
dir = "D:/Dropbox/2-private/1-asg/Projects/7-kinckso/"
# load different parts of html
setwd(paste0(dir, "_treemaps-techs/_source"))
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
setwd(paste0(dir, "_analysis"))
pl = read.csv2 ("4-main-players-US.csv")
library(dplyr)
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
pl$state = toupper(substrRight(pl$reg_tl3_label, 2))
pl = subset (pl, pl$prio_year>2013)
pl = subset (pl, pl$prio_year<2018)
pl = pl[, c("app_name", "tech")]
pl$count = 1
pl = get.list (get.matrix (pl))
pl$id = as.numeric(factor (unique (pl$Region)))
df = pl
df$Region = iconv(df$Region, to = 'ASCII//TRANSLIT')
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
df$sum = ave(df$Count, df$Industry, FUN = sum)
df$share = round (df$Count*100/df$sum, digits = 2)
df$Region = as.character (df$Region)
df$color = "green"
df$TARGET <- grepl("University", df$Region)
df$TARGET2 <- grepl("university", df$Region)
df$TARGET3 <- grepl("college", df$Region)
df$TARGET4 <- grepl("College", df$Region)
df$parent = "Other firms"
df$parent[df$TARGET == TRUE] = "University"
df$parent[df$TARGET2 == TRUE] = "University"
df$parent[df$TARGET3 == TRUE] = "University"
df$parent[df$TARGET4 == TRUE] = "University"
df$parent[df$Region=="Massachusetts institute of technology"]="University"
df$parent[df$Region=="President and fellows of harvard college"]="University"
df$parent[df$Region=="Google llc"]="Big Five"
df$parent[df$Region=="Facebook inc."]="Big Five"
df$parent[df$Region=="Apple inc."]="Big Five"
df$parent[df$Region=="Amazon technologies inc."]="Big Five"
df$parent[df$Region=="Microsoft technology licensing llc"]="Big Five"
df$Region[df$Region=="President and fellows of harvard college"]="Harvard"
df$Region[df$Region=="Massachusetts institute of technology"]="MIT"
df$Region[df$Region=="Amazon technologies inc."]="Amazon"
df$Region[df$Region=="Apple inc."]="Apple"
df$Region[df$Region=="Facebook inc."]="Facebook"
df$Region[df$Region=="Google inc."]="Google"
df$Region[df$Region=="The regents of the university of california"]="Univ. of California"
df$Region[df$Region=="The texas a&m university system"]="Texas A&M"
df$color[df$parent=="Big Five"] = "Yellow"
df$color[df$parent=="University"] = "Red"
df$color[df$parent=="Other firms"] = "Blue"
df$color[df$Region=="Nec laboratories america inc."] = "Lightred"
df$color[df$Region=="Intel corporation"] = "Purple"
df$color[df$Region=="International business machines corporation"] = "Green"
df.full = df
#df.full = subset (df.full, df.full$Count>4)
df.full$sum = ave(df.full$Count, df.full$Industry, FUN = sum)
df.full$share = round (df.full$Count*100/df.full$sum, digits = 2)
##
for (i in unique (df$Industry)) {
#i = "Drenthe"
df = subset (df.full, df.full$Industry == i)
df$Industry = NULL
# add variables
df$id = df$Region
df$value = df$Count
df$name = df$Region
var = c("parent", "id", "value", "color", "share", "name")
df = unique(df[, var])
df = df[complete.cases(df),]
r=i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/7-kinckso/_treemaps-techs-main-players")
writeLines(all, paste0(r, ".html"))
}
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
dir = "D:/Dropbox/2-private/1-asg/Projects/7-kinckso/"
# load different parts of html
setwd(paste0(dir, "_treemaps-techs/_source"))
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
setwd(paste0(dir, "_analysis"))
pl = read.csv2 ("4-main-players-US.csv")
library(dplyr)
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
pl$state = toupper(substrRight(pl$reg_tl3_label, 2))
pl = subset (pl, pl$prio_year>2013)
pl = subset (pl, pl$prio_year<2018)
pl = pl[, c("app_name", "tech")]
pl$count = 1
pl = get.list (get.matrix (pl))
pl$id = as.numeric(factor (unique (pl$Region)))
df = pl
df$Region = iconv(df$Region, to = 'ASCII//TRANSLIT')
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
df$sum = ave(df$Count, df$Industry, FUN = sum)
df$share = round (df$Count*100/df$sum, digits = 2)
df$Region = as.character (df$Region)
df$color = "green"
df$TARGET <- grepl("University", df$Region)
df$TARGET2 <- grepl("university", df$Region)
df$TARGET3 <- grepl("college", df$Region)
df$TARGET4 <- grepl("College", df$Region)
df$parent = "Other firms"
df$parent[df$TARGET == TRUE] = "University"
df$parent[df$TARGET2 == TRUE] = "University"
df$parent[df$TARGET3 == TRUE] = "University"
df$parent[df$TARGET4 == TRUE] = "University"
df$parent[df$Region=="Massachusetts institute of technology"]="University"
df$parent[df$Region=="President and fellows of harvard college"]="University"
df$parent[df$Region=="Google llc"]="Big Five"
df$parent[df$Region=="Facebook inc."]="Big Five"
df$parent[df$Region=="Apple inc."]="Big Five"
df$parent[df$Region=="Amazon technologies inc."]="Big Five"
df$parent[df$Region=="Microsoft technology licensing llc"]="Big Five"
df$Region[df$Region=="President and fellows of harvard college"]="Harvard"
df$Region[df$Region=="Massachusetts institute of technology"]="MIT"
df$Region[df$Region=="Amazon technologies inc."]="Amazon"
df$Region[df$Region=="Apple inc."]="Apple"
df$Region[df$Region=="Facebook inc."]="Facebook"
df$Region[df$Region=="Google inc."]="Google"
df$Region[df$Region=="The regents of the university of california"]="Univ. of California"
df$Region[df$Region=="The texas a&m university system"]="Texas A&M"
df$color[df$parent=="Big Five"] = "Yellow"
df$color[df$parent=="University"] = "Red"
df$color[df$parent=="Other firms"] = "Blue"
df$color[df$Region=="Nec laboratories america inc."] = "Lightred"
df$color[df$Region=="Intel corporation"] = "Purple"
df$color[df$Region=="International business machines corporation"] = "Green"
df.full = df
df.full = subset (df.full, df.full$Count>5)
df.full$sum = ave(df.full$Count, df.full$Industry, FUN = sum)
df.full$share = round (df.full$Count*100/df.full$sum, digits = 2)
##
for (i in unique (df$Industry)) {
#i = "Drenthe"
df = subset (df.full, df.full$Industry == i)
df$Industry = NULL
# add variables
df$id = df$Region
df$value = df$Count
df$name = df$Region
var = c("parent", "id", "value", "color", "share", "name")
df = unique(df[, var])
df = df[complete.cases(df),]
r=i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/7-kinckso/_treemaps-techs-main-players")
writeLines(all, paste0(r, ".html"))
}
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
dir = "D:/Dropbox/2-private/1-asg/Projects/7-kinckso/"
dir2 = "D:/Dropbox/2-private/PABalland.github.io/asg/ati"
# load different parts of html
setwd(paste0(dir, "_treemaps-techs/_source"))
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
setwd(paste0(dir, "_analysis"))
df = as.matrix(read.csv2("2-bimodal-2017.csv",
header = T,
check.names = F,
row.names = 1))
df = get.list (df)
df = subset (df, df$Industry=="Artificial intelligence")
df$id = as.numeric(factor (unique (df$Region)))
ctry = c("AT", # AT (Austria) - EU member
"BE", # BE (Belgium)
"BG", # BG (Bulgaria)
"CY", # CY (Cyprus)
"CZ", # CZ (Czech Republic)
"DE", # DE (Germany)
"DK", # DK (Denmark)
"EE", # EE (Estonia)
"ES", # ES (Spain)
"FI", # FI (Finland)
"FR", # FR (France)
"HR", # HR (Croatia)
"HU", # HU (Hungary)
"IE", # IE (Ireland)
"IT", # IT (Italy)
"LT", # LT (Lithuania)
"LU", # LU (Luxembourg)
"LV", # LV (Latvia)
"MT", # MT (Malta)
"NL", # NL (Netherlands)
"PL", # PL (Poland)
"PT", # PT (Portugal)
"RO", # RO (Romania)
"SI", # SI (Slovenia)
"EL", # EL (Greece) - can also be GR
"SE", # SE (Sweden),
"SK") # SK (Slovakia)
#"NO", # NO (Norway)
#"CH", # CH (Switzerland)
#"LI", # LI (Liechtenstein)
#"IS",) # IS (Iceland)
#"UK") # UK (United Kingdom)
df$parent = "Other"
df$parent[df$Region%in%ctry] = "EU27"
df$parent[df$Region=="US"] = "US"
df$parent[df$Region=="CN"] = "CN"
df$parent[df$Region=="KR"] = "KR"
df$parent[df$Region=="JP"] = "JP"
df$parent[df$Region=="UK"] = "UK"
df$parent[df$Region=="CA"] = "CA"
df$parent[df$Region=="IL"] = "IL"
df$parent[df$Region=="IN"] = "IN"
df$parent[df$Region=="SG"] = "SG"
df$Region = iconv(df$Region, to = 'ASCII//TRANSLIT')
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
df$sum = ave(df$Count, df$Industry, FUN = sum)
df$share = round (df$Count*100/df$sum, digits = 2)
df$Region = as.character (df$Region)
df$color = "green"
df$color[df$parent=="US"] = "blue"
df$color[df$parent=="EU27"] = "red"
df$color[df$parent=="CN"] = "purple"
df$color[df$parent=="KR"] = "yellow"
df$color[df$parent=="JP"] = "brown"
df$color[df$parent=="UK"] = "lightred"
df$color[df$parent=="CA"] = "lightblue"
df$color[df$parent=="IL"] = "orange"
df$color[df$parent=="IN"] = "darkgreen"
df$color[df$parent=="SG"] = "darkblue"
df$Region[df$Region=="US"] = "United States"
df$Region[df$Region=="CN"] = "China"
df$Region[df$Region=="KR"] = "South Korea"
df$Region[df$Region=="JP"] = "Japan"
df$Region[df$Region=="UK"] = "United Kingdom"
df$Region[df$Region=="CA"] = "Canada"
df$Region[df$Region=="IL"] = "Israel"
df$Region[df$Region=="IN"] = "India"
df$Region[df$Region=="SG"] = "Singapore"
df$Region[df$Region=="DE"] = "Germany"
df$Region[df$Region=="FR"] = "France"
df$Region[df$Region=="NL"] = "The Netherlands"
df$Region[df$Region=="FI"] = "Finland"
df$Region[df$Region=="BE"] = "Belgium"
df$shareparent = ave (df$Count, df$parent, FUN = sum)
#df$sum = ave(df$Count, df$Industry, FUN = sum)
df$shareparent = round (df$shareparent*100/df$sum, digits = 2)
df.full = df
##
for (i in unique (df$Industry)) {
#i = "Drenthe"
df = subset (df.full, df.full$Industry == i)
df$Industry = NULL
# add variables
df$id = df$Region
df$value = df$Count
df$name = df$Region
var = c("parent", "id", "value", "color", "share", "name", "shareparent")
df = unique(df[, var])
df = df[complete.cases(df),]
r=i
r = "AI"
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "_treemaps-techs"))
writeLines(all, paste0(r, "-2017-.html"))
setwd(paste0(dir2))
writeLines(all, paste0(r, "-2017-.html"))
}
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
dir = "D:/Dropbox/2-private/1-asg/Projects/7-kinckso/"
dir2 = "D:/Dropbox/2-private/PABalland.github.io/asg/ati"
# load different parts of html
setwd(paste0(dir, "_treemaps-techs/_source"))
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
setwd(paste0(dir, "_analysis"))
df = as.matrix(read.csv2("2-bimodal-2017.csv",
header = T,
check.names = F,
row.names = 1))
df = get.list (df)
df = subset (df, df$Industry=="Artificial intelligence")
df$id = as.numeric(factor (unique (df$Region)))
ctry = c("AT", # AT (Austria) - EU member
"BE", # BE (Belgium)
"BG", # BG (Bulgaria)
"CY", # CY (Cyprus)
"CZ", # CZ (Czech Republic)
"DE", # DE (Germany)
"DK", # DK (Denmark)
"EE", # EE (Estonia)
"ES", # ES (Spain)
"FI", # FI (Finland)
"FR", # FR (France)
"HR", # HR (Croatia)
"HU", # HU (Hungary)
"IE", # IE (Ireland)
"IT", # IT (Italy)
"LT", # LT (Lithuania)
"LU", # LU (Luxembourg)
"LV", # LV (Latvia)
"MT", # MT (Malta)
"NL", # NL (Netherlands)
"PL", # PL (Poland)
"PT", # PT (Portugal)
"RO", # RO (Romania)
"SI", # SI (Slovenia)
"EL", # EL (Greece) - can also be GR
"SE", # SE (Sweden),
"SK") # SK (Slovakia)
#"NO", # NO (Norway)
#"CH", # CH (Switzerland)
#"LI", # LI (Liechtenstein)
#"IS",) # IS (Iceland)
#"UK") # UK (United Kingdom)
df$parent = "Other"
df$parent[df$Region%in%ctry] = "EU27"
df$parent[df$Region=="US"] = "US"
df$parent[df$Region=="CN"] = "CN"
df$parent[df$Region=="KR"] = "KR"
df$parent[df$Region=="JP"] = "JP"
df$parent[df$Region=="UK"] = "UK"
df$parent[df$Region=="CA"] = "CA"
df$parent[df$Region=="IL"] = "IL"
df$parent[df$Region=="IN"] = "IN"
df$parent[df$Region=="SG"] = "SG"
df$Region = iconv(df$Region, to = 'ASCII//TRANSLIT')
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
df$sum = ave(df$Count, df$Industry, FUN = sum)
df$share = round (df$Count*100/df$sum, digits = 2)
df$Region = as.character (df$Region)
df$color = "green"
df$color[df$parent=="US"] = "blue"
df$color[df$parent=="EU27"] = "red"
df$color[df$parent=="CN"] = "purple"
df$color[df$parent=="KR"] = "yellow"
df$color[df$parent=="JP"] = "brown"
df$color[df$parent=="UK"] = "lightred"
df$color[df$parent=="CA"] = "lightblue"
df$color[df$parent=="IL"] = "orange"
df$color[df$parent=="IN"] = "darkgreen"
df$color[df$parent=="SG"] = "darkblue"
df$Region[df$Region=="US"] = "United States"
df$Region[df$Region=="CN"] = "China"
df$Region[df$Region=="KR"] = "South Korea"
df$Region[df$Region=="JP"] = "Japan"
df$Region[df$Region=="UK"] = "United Kingdom"
df$Region[df$Region=="CA"] = "Canada"
df$Region[df$Region=="IL"] = "Israel"
df$Region[df$Region=="IN"] = "India"
df$Region[df$Region=="SG"] = "Singapore"
df$Region[df$Region=="DE"] = "Germany"
df$Region[df$Region=="FR"] = "France"
df$Region[df$Region=="NL"] = "The Netherlands"
df$Region[df$Region=="FI"] = "Finland"
df$Region[df$Region=="BE"] = "Belgium"
df$shareparent = ave (df$Count, df$parent, FUN = sum)
#df$sum = ave(df$Count, df$Industry, FUN = sum)
df$shareparent = round (df$shareparent*100/df$sum, digits = 2)
df.full = df
##
for (i in unique (df$Industry)) {
#i = "Drenthe"
df = subset (df.full, df.full$Industry == i)
df$Industry = NULL
# add variables
df$id = df$Region
df$value = df$Count
df$name = df$Region
var = c("parent", "id", "value", "color", "share", "name", "shareparent")
df = unique(df[, var])
df = df[complete.cases(df),]
r=i
r = "AI"
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "_treemaps-techs"))
writeLines(all, paste0(r, "-2017.html"))
setwd(paste0(dir2))
writeLines(all, paste0(r, "-2017.html"))
}
