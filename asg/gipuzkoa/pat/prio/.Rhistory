df2 = subset (df2, df2$geo == "Amsterdam (2759794)")
df2$color <- get_rca_colors(df2$rca)
setwd(paste0(dir, "/complexity/", j, "/", i, "/", data))
df = read.csv("rel-comp-rca-2019-2023.csv")
# TREEMAPS WIPO
i = "wipo"
setwd(paste0(dir, "/complexity/", j, "/", i, "/", data))
df = read.csv("rel-comp-rca-2019-2023.csv")
# build treemap
df2 = subset (df, df$domain %in% wipo_parents$domain)
df2 = subset (df2, df2$geo == "Guipuscoa (ES212)")
df2$color <- get_rca_colors(df2$rca)
df2 = merge (df2, wipo_parents, by = "domain")
setwd(paste0("/Users/pierre-alex/Dropbox/PABalland.github.io/asg/", p, "/pat/wipo"))
write(toJSON(df2, pretty = TRUE), "treemap.json")
df2$id = df2$domain
df2$x = df2$reldens
df2$y = df2$comp
df2$value = df2$rca
df2$color[df2$parent == "Electrical engineering"] = "#365a94"
df2$color[df2$parent == "Instruments"] = "#8cab79"
df2$color[df2$parent == "Chemistry"] = "#800020"
df2$color[df2$parent == "Mechanical engineering"] = "#EEDC82"
df2$color[df2$parent == "Other fields"] = "#e28f26"
setwd(paste0("/Users/pierre-alex/Dropbox/PABalland.github.io/asg/", p, "/pat/wipo"))
write(toJSON(df2, pretty = TRUE), "smart.json")
# SELECTORS
dir <- "/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/REGPAT"
dir2 <- "/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/5-gipuzkoa/load" # IMPORTANT
version <- "REGPAT_202401"
i <- "wipo" # "topic"; "wipo"; "all"; "aiw"; "gipuzkoa"; "amsterdam"
j <- "nuts2" # "city"; "urban"; "nuts2"; "nuts3"; "fua"; "country";
sub <- "wipo" # wipo, section (A); class (A01); subclass (A01B); group A01B33; subgroup (A01B33/00)
#sub <- "subclass" # wipo, section (A); class (A01); subclass (A01B); group A01B33; subgroup (A01B33/00)
geo.filter = "yes" # specific dataset to merge with; subset but also different spatial aggreg
office = "pct"
system = "cpc"
p = "gipuzkoa" # project name
if (i == "wipo") {sub = i}
if (i == "subclass") {sub = i}
# LOAD PACKAGES AND FUNCTIONS
source("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/sparse.co.occurrence.chunked.R")
source("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/count.inv.links.R")
source("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/save.to.directory.R")
library(data.table)
library(EconGeo)
library(pryr)
# Loop through years
y = 2023
for (y in seq(2023, 2019, -1)) {
# 1. READ & PREPARE 'PAT'
# "pat"; "cpc"
setwd(paste0(dir, "/2-transform/tech/", system, "/", office))
pat = fread (paste0(y,".csv"))
pat2 = pat # save for adding sub
# 2. MERGE WITH DOMAIN CROSSWALK
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/tech/", system, "/", i))
domain_cw <- fread("domains.csv")
pat <- merge(pat, domain_cw, by = "cpc")
pat <- unique(pat[, .(pat, domain)]) # only 1 domain per patent
pat3 = pat # save to select domains only
if (sub == "subclass") {
pat2$cpc = substr(pat2$cpc, 0, 4)
pat2 = unique (pat2)
colnames (pat2) = c("pat", "domain")
pat = rbind (pat, pat2)
}
if (sub == "wipo") {
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/tech/", system, "/wipo"))
domain_cw2 <- fread("domains.csv")
pat2 <- merge(pat2, domain_cw2, by = "cpc")
pat2 <- unique(pat2[, .(pat, domain)]) # only 1 domain per patent
colnames (pat2) = c("pat", "domain")
pat = rbind (pat, pat2)
}
# 3. COUNT CO-OCCURENCES BETWEEN DOMAINS
counts <- sparse.co.occurrence.chunked(pat, chunks = 10) # Use sparse matrix
save.to.directory(file.path(dir2, "/domain", i, sub), counts, paste0(y, ".csv"))
# 4. LOAD INVENTOR FILE
setwd(paste0(dir, "/2-transform/inv/", j, "/", office))
inv = fread (paste0(y,".csv"), header = T)
if (geo.filter == "yes") {
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/GEO/_filter/", p))
filter = fread (paste0(j,".csv"))
inv = subset (inv, geo %in% filter$geo_id)
}
inv = merge (inv, pat, by = "pat") # get the domains
# 5. COUNT PER GEO-DOMAIN
geo = inv
geo$geo = paste0(geo$geo_name, " (", geo$geo, ")")
counts = unique(geo)
counts$count = 1
counts$count = ave(counts$count, paste0(counts$geo, counts$domain), FUN = sum)
counts = unique(counts[, c("geo", "domain", "count")])
save.to.directory(file.path(dir2, "/geo", j, i, sub), counts, paste0(y, ".csv"))
# 6. GEO-GEO-DOMAIN-YEAR
# from now remove the non-prio (the sub)
geo = subset (geo, domain %in% unique(domain_cw$domain))
k = "ICT"
counts = NULL
for (k in unique (geo$domain)){
counts2 = subset (geo, domain == k)
counts2 = counts2[, c("pat", "geo")]
if (nrow(counts2) > 1) { # this is when there is no link in a domain
counts2 = count.inv.links(counts2, chunks = 10)
counts2$domain = k
counts = rbind (counts, counts2)
}
}
save.to.directory(file.path(dir2, "/geo", j, j, i), counts, paste0(y, ".csv"))
# 7. APP-DOMAIN
setwd(paste0(dir, "/2-transform/app/", j, "/", office))
counts = fread (paste0(y,".csv"))
counts = merge (counts, pat3, by = "pat", allow.cartesian = T) # get the domains
counts = subset (counts, geo %in% filter$geo_id)
counts = unique(counts)
counts$count = 1
counts$geo = paste0(counts$geo_name, " (", counts$geo, ")")
counts$count = ave(counts$count, paste0(counts$geo, counts$domain, counts$app), FUN = sum)
counts = unique(counts[, c("app", "geo", "domain", "count")])
save.to.directory(file.path(dir2, "/app", i, j), counts, paste0(y, ".csv"))
# 8. INV-DOMAIN
setwd(paste0(dir, "/2-transform/inv/", j, "/", office))
counts = fread (paste0(y,".csv"))
counts = unique (counts)
counts = merge (counts, pat3, by = "pat", allow.cartesian = T) # get the domains
counts = subset (counts, geo %in% filter$geo_id)
counts = unique(counts)
counts$count = 1
counts$geo = paste0(counts$geo_name, " (", counts$geo, ")")
counts$count = ave(counts$count, paste0(counts$geo, counts$domain, counts$inv), FUN = sum)
counts = unique(counts[, c("inv", "geo", "domain", "count")])
save.to.directory(file.path(dir2, "/inv", i, j), counts, paste0(y, ".csv"))
}
library(data.table)
library(jsonlite)
p = "gipuzkoa"
#filter is based on country info and count
geo = fromJSON("https://www.paballand.com/geo/nuts.json")[, c("nuts2_id", "nuts2_name")]
geo$country_id = substr(geo$nuts2_id, 0, 2)
ctry = fromJSON("https://www.paballand.com/geo/country.json")
ctry = subset (ctry, ctry$continent == "Europe")
ctry = subset (ctry, ctry$country_name != "Russia")
geo = subset (geo, geo$country_id %in% ctry$country_id)
geo$geo = geo$nuts2_name
geo$geo_id = geo$nuts2_id
#geo = geo[complete.cases(geo_id),]
setwd(paste0("~/Dropbox/1-asg/1-production/1-data/GEO/_filter/", p))
geo = unique(geo[, c("geo", "geo_id")])
write.csv(geo, "nuts2.csv", row.names = F)
# SELECTORS
dir <- "/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/REGPAT"
dir2 <- "/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/5-gipuzkoa/load" # IMPORTANT
version <- "REGPAT_202401"
i <- "wipo" # "topic"; "wipo"; "all"; "aiw"; "gipuzkoa"; "amsterdam"
j <- "nuts2" # "city"; "urban"; "nuts2"; "nuts3"; "fua"; "country";
sub <- "wipo" # wipo, section (A); class (A01); subclass (A01B); group A01B33; subgroup (A01B33/00)
#sub <- "subclass" # wipo, section (A); class (A01); subclass (A01B); group A01B33; subgroup (A01B33/00)
geo.filter = "yes" # specific dataset to merge with; subset but also different spatial aggreg
office = "pct"
system = "cpc"
p = "gipuzkoa" # project name
if (i == "wipo") {sub = i}
if (i == "subclass") {sub = i}
# LOAD PACKAGES AND FUNCTIONS
source("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/sparse.co.occurrence.chunked.R")
source("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/count.inv.links.R")
source("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/save.to.directory.R")
library(data.table)
library(EconGeo)
library(pryr)
# Loop through years
y = 2023
for (y in seq(2023, 2019, -1)) {
# 1. READ & PREPARE 'PAT'
# "pat"; "cpc"
setwd(paste0(dir, "/2-transform/tech/", system, "/", office))
pat = fread (paste0(y,".csv"))
pat2 = pat # save for adding sub
# 2. MERGE WITH DOMAIN CROSSWALK
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/tech/", system, "/", i))
domain_cw <- fread("domains.csv")
pat <- merge(pat, domain_cw, by = "cpc")
pat <- unique(pat[, .(pat, domain)]) # only 1 domain per patent
pat3 = pat # save to select domains only
if (sub == "subclass") {
pat2$cpc = substr(pat2$cpc, 0, 4)
pat2 = unique (pat2)
colnames (pat2) = c("pat", "domain")
pat = rbind (pat, pat2)
}
if (sub == "wipo") {
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/tech/", system, "/wipo"))
domain_cw2 <- fread("domains.csv")
pat2 <- merge(pat2, domain_cw2, by = "cpc")
pat2 <- unique(pat2[, .(pat, domain)]) # only 1 domain per patent
colnames (pat2) = c("pat", "domain")
pat = rbind (pat, pat2)
}
# 3. COUNT CO-OCCURENCES BETWEEN DOMAINS
counts <- sparse.co.occurrence.chunked(pat, chunks = 10) # Use sparse matrix
save.to.directory(file.path(dir2, "/domain", i, sub), counts, paste0(y, ".csv"))
# 4. LOAD INVENTOR FILE
setwd(paste0(dir, "/2-transform/inv/", j, "/", office))
inv = fread (paste0(y,".csv"), header = T)
if (geo.filter == "yes") {
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/GEO/_filter/", p))
filter = fread (paste0(j,".csv"))
inv = subset (inv, geo %in% filter$geo_id)
}
inv = merge (inv, pat, by = "pat") # get the domains
# 5. COUNT PER GEO-DOMAIN
geo = inv
geo$geo = paste0(geo$geo_name, " (", geo$geo, ")")
counts = unique(geo)
counts$count = 1
counts$count = ave(counts$count, paste0(counts$geo, counts$domain), FUN = sum)
counts = unique(counts[, c("geo", "domain", "count")])
save.to.directory(file.path(dir2, "/geo", j, i, sub), counts, paste0(y, ".csv"))
# 6. GEO-GEO-DOMAIN-YEAR
# from now remove the non-prio (the sub)
geo = subset (geo, domain %in% unique(domain_cw$domain))
k = "ICT"
counts = NULL
for (k in unique (geo$domain)){
counts2 = subset (geo, domain == k)
counts2 = counts2[, c("pat", "geo")]
if (nrow(counts2) > 1) { # this is when there is no link in a domain
counts2 = count.inv.links(counts2, chunks = 10)
counts2$domain = k
counts = rbind (counts, counts2)
}
}
save.to.directory(file.path(dir2, "/geo", j, j, i), counts, paste0(y, ".csv"))
# 7. APP-DOMAIN
setwd(paste0(dir, "/2-transform/app/", j, "/", office))
counts = fread (paste0(y,".csv"))
counts = merge (counts, pat3, by = "pat", allow.cartesian = T) # get the domains
counts = subset (counts, geo %in% filter$geo_id)
counts = unique(counts)
counts$count = 1
counts$geo = paste0(counts$geo_name, " (", counts$geo, ")")
counts$count = ave(counts$count, paste0(counts$geo, counts$domain, counts$app), FUN = sum)
counts = unique(counts[, c("app", "geo", "domain", "count")])
save.to.directory(file.path(dir2, "/app", i, j), counts, paste0(y, ".csv"))
# 8. INV-DOMAIN
setwd(paste0(dir, "/2-transform/inv/", j, "/", office))
counts = fread (paste0(y,".csv"))
counts = unique (counts)
counts = merge (counts, pat3, by = "pat", allow.cartesian = T) # get the domains
counts = subset (counts, geo %in% filter$geo_id)
counts = unique(counts)
counts$count = 1
counts$geo = paste0(counts$geo_name, " (", counts$geo, ")")
counts$count = ave(counts$count, paste0(counts$geo, counts$domain, counts$inv), FUN = sum)
counts = unique(counts[, c("inv", "geo", "domain", "count")])
save.to.directory(file.path(dir2, "/inv", i, j), counts, paste0(y, ".csv"))
}
# SELECTORS
data = "regpat"
#data = "openalex"
dir <- "/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/5-gipuzkoa/load" # IMPORTANT
dir2 <- "/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/5-gipuzkoa"
i <- "gipuzkoa" # "topic"; "wipo"; "all"; "aiw"
j <- "nuts2" # "city"; "urban"; "nuts2"; "nuts3"; "fua"; "country";
office = "pct"
system = "cpc"
sub = "wipo"
#sub = "subclass"
prio = T
start = 2019
nbyears = 5 #
period = seq(start, (start + nbyears - 1)) # change to 2019
#test
setwd(paste0(dir, "/domain/", i))
setwd(paste0(dir, "/domain/", i, "/", sub)) # co-occ
setwd(paste0(dir, "/geo/", j, "/", j, "/", i))
setwd(paste0(dir, "/geo/", j, "/", j, "/", i))
j
# SELECTORS
dir <- "/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/REGPAT"
dir2 <- "/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/5-gipuzkoa/load" # IMPORTANT
version <- "REGPAT_202401"
i <- "gipuzkoa" # "topic"; "wipo"; "all"; "aiw"; "gipuzkoa"; "amsterdam"
j <- "nuts2" # "city"; "urban"; "nuts2"; "nuts3"; "fua"; "country";
sub <- "wipo" # wipo, section (A); class (A01); subclass (A01B); group A01B33; subgroup (A01B33/00)
#sub <- "subclass" # wipo, section (A); class (A01); subclass (A01B); group A01B33; subgroup (A01B33/00)
geo.filter = "yes" # specific dataset to merge with; subset but also different spatial aggreg
office = "pct"
system = "cpc"
p = "gipuzkoa" # project name
if (i == "wipo") {sub = i}
if (i == "subclass") {sub = i}
# LOAD PACKAGES AND FUNCTIONS
source("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/sparse.co.occurrence.chunked.R")
source("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/count.inv.links.R")
source("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/save.to.directory.R")
library(data.table)
library(EconGeo)
library(pryr)
# Loop through years
y = 2023
for (y in seq(2023, 2019, -1)) {
# 1. READ & PREPARE 'PAT'
# "pat"; "cpc"
setwd(paste0(dir, "/2-transform/tech/", system, "/", office))
pat = fread (paste0(y,".csv"))
pat2 = pat # save for adding sub
# 2. MERGE WITH DOMAIN CROSSWALK
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/tech/", system, "/", i))
domain_cw <- fread("domains.csv")
pat <- merge(pat, domain_cw, by = "cpc")
pat <- unique(pat[, .(pat, domain)]) # only 1 domain per patent
pat3 = pat # save to select domains only
if (sub == "subclass") {
pat2$cpc = substr(pat2$cpc, 0, 4)
pat2 = unique (pat2)
colnames (pat2) = c("pat", "domain")
pat = rbind (pat, pat2)
}
if (sub == "wipo") {
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/tech/", system, "/wipo"))
domain_cw2 <- fread("domains.csv")
pat2 <- merge(pat2, domain_cw2, by = "cpc")
pat2 <- unique(pat2[, .(pat, domain)]) # only 1 domain per patent
colnames (pat2) = c("pat", "domain")
pat = rbind (pat, pat2)
}
# 3. COUNT CO-OCCURENCES BETWEEN DOMAINS
counts <- sparse.co.occurrence.chunked(pat, chunks = 10) # Use sparse matrix
save.to.directory(file.path(dir2, "/domain", i, sub), counts, paste0(y, ".csv"))
# 4. LOAD INVENTOR FILE
setwd(paste0(dir, "/2-transform/inv/", j, "/", office))
inv = fread (paste0(y,".csv"), header = T)
if (geo.filter == "yes") {
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/GEO/_filter/", p))
filter = fread (paste0(j,".csv"))
inv = subset (inv, geo %in% filter$geo_id)
}
inv = merge (inv, pat, by = "pat") # get the domains
# 5. COUNT PER GEO-DOMAIN
geo = inv
geo$geo = paste0(geo$geo_name, " (", geo$geo, ")")
counts = unique(geo)
counts$count = 1
counts$count = ave(counts$count, paste0(counts$geo, counts$domain), FUN = sum)
counts = unique(counts[, c("geo", "domain", "count")])
save.to.directory(file.path(dir2, "/geo", j, i, sub), counts, paste0(y, ".csv"))
# 6. GEO-GEO-DOMAIN-YEAR
# from now remove the non-prio (the sub)
geo = subset (geo, domain %in% unique(domain_cw$domain))
k = "ICT"
counts = NULL
for (k in unique (geo$domain)){
counts2 = subset (geo, domain == k)
counts2 = counts2[, c("pat", "geo")]
if (nrow(counts2) > 1) { # this is when there is no link in a domain
counts2 = count.inv.links(counts2, chunks = 10)
counts2$domain = k
counts = rbind (counts, counts2)
}
}
save.to.directory(file.path(dir2, "/geo", j, j, i), counts, paste0(y, ".csv"))
# 7. APP-DOMAIN
setwd(paste0(dir, "/2-transform/app/", j, "/", office))
counts = fread (paste0(y,".csv"))
counts = merge (counts, pat3, by = "pat", allow.cartesian = T) # get the domains
counts = subset (counts, geo %in% filter$geo_id)
counts = unique(counts)
counts$count = 1
counts$geo = paste0(counts$geo_name, " (", counts$geo, ")")
counts$count = ave(counts$count, paste0(counts$geo, counts$domain, counts$app), FUN = sum)
counts = unique(counts[, c("app", "geo", "domain", "count")])
save.to.directory(file.path(dir2, "/app", i, j), counts, paste0(y, ".csv"))
# 8. INV-DOMAIN
setwd(paste0(dir, "/2-transform/inv/", j, "/", office))
counts = fread (paste0(y,".csv"))
counts = unique (counts)
counts = merge (counts, pat3, by = "pat", allow.cartesian = T) # get the domains
counts = subset (counts, geo %in% filter$geo_id)
counts = unique(counts)
counts$count = 1
counts$geo = paste0(counts$geo_name, " (", counts$geo, ")")
counts$count = ave(counts$count, paste0(counts$geo, counts$domain, counts$inv), FUN = sum)
counts = unique(counts[, c("inv", "geo", "domain", "count")])
save.to.directory(file.path(dir2, "/inv", i, j), counts, paste0(y, ".csv"))
}
# SELECTORS
data = "regpat"
#data = "openalex"
dir <- "/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/5-gipuzkoa/load" # IMPORTANT
dir2 <- "/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/5-gipuzkoa"
i <- "gipuzkoa" # "topic"; "wipo"; "all"; "aiw"
j <- "nuts2" # "city"; "urban"; "nuts2"; "nuts3"; "fua"; "country";
office = "pct"
system = "cpc"
sub = "wipo"
#sub = "subclass"
prio = T
start = 2019
nbyears = 5 #
period = seq(start, (start + nbyears - 1)) # change to 2019
#test
setwd(paste0(dir, "/domain/", i))
setwd(paste0(dir, "/domain/", i, "/", sub)) # co-occ
setwd(paste0(dir, "/geo/", j, "/", j, "/", i))
setwd(paste0(dir, "/geo/", j, "/", i))
library(data.table)
library(jsonlite)
source("~/Dropbox/1-asg/1-production/3-projects/6-amsterdam/viz/get_rca_colors.R")
# SELECTORS
data = "regpat"
#data = "openalex"
dir <- "~/Dropbox/1-asg/1-production/3-projects/5-gipuzkoa"
i <- "gipuzkoa" # "topic"; "wipo"; "all"; "aiw"
j <- "nuts2" # "city"; "urban"; "nuts2"; "nuts3"; "fua"; "country";
office = "pct"
system = "cpc"
sub = "wipo"
#sub = "subclass"
p = "gipuzkoa" # project name
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/tech/", system, "/wipo/datalab"))
wipo_parents = unique(fread("cpc-schmoch.csv")[, c("Field_en", "Sector_en")])
colnames(wipo_parents) = c("domain", "parent")
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/tech/", system, "/", p, "/datalab"))
prio_parents <- unique(fread("crosswalk.csv")[, c("priority", "parent")])
colnames(prio_parents) = c("domain", "parent")
prio_parents$domain[prio_parents$parent == "Sustainability & Circularity"] = "Sustainability & Circularity"
prio_parents = unique (prio_parents)
# TREEMAPS PRIO
setwd(paste0(dir, "/complexity/", j, "/", "/", p, "/", data))
df = read.csv("rel-comp-rca-2019-2023.csv")
#df$color <- get_rca_colors(df$rca)
View(df)
j
# merge with nuts2 comp numbers
setwd(paste0(dir, "/complexity/", "nuts2", "/", "/", p, "/", data))
comp = read.csv("rel-comp-rca-2019-2023.csv")
View(comp)
comp = unique(comp[, c("domain", "comp")])
df2 = merge (df2, comp, by.x = "id", by.y = "domain")
View(df2)
df2$y = df2$comp.y
setwd(paste0("/Users/pierre-alex/Dropbox/PABalland.github.io/asg/", p, "/pat/wipo"))
write(toJSON(df2, pretty = TRUE), "treemap.json")
df2$id = df2$domain
df2$x = df2$reldens
df2$y = df2$comp
df2$value = df2$rca
# merge with nuts2 comp numbers
setwd(paste0(dir, "/complexity/", "nuts2", "/", "/", p, "/", data))
comp = read.csv("rel-comp-rca-2019-2023.csv")
comp = unique(comp[, c("domain", "comp")])
df2 = merge (df2, comp, by.x = "id", by.y = "domain")
df2$y = df2$comp.y
df2$color[df2$parent == "Electrical engineering"] = "#365a94"
df2$color[df2$parent == "Instruments"] = "#8cab79"
df2$color[df2$parent == "Chemistry"] = "#800020"
df2$color[df2$parent == "Mechanical engineering"] = "#EEDC82"
df2$color[df2$parent == "Other fields"] = "#e28f26"
setwd(paste0("/Users/pierre-alex/Dropbox/PABalland.github.io/asg/", p, "/pat/wipo"))
write(toJSON(df2, pretty = TRUE), "smart.json")
View(df2)
library(data.table)
library(jsonlite)
source("~/Dropbox/1-asg/1-production/3-projects/6-amsterdam/viz/get_rca_colors.R")
# SELECTORS
data = "regpat"
#data = "openalex"
dir <- "~/Dropbox/1-asg/1-production/3-projects/5-gipuzkoa"
i <- "gipuzkoa" # "topic"; "wipo"; "all"; "aiw"
j <- "nuts3" # "city"; "urban"; "nuts2"; "nuts3"; "fua"; "country";
office = "pct"
system = "cpc"
sub = "wipo"
#sub = "subclass"
p = "gipuzkoa" # project name
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/tech/", system, "/wipo/datalab"))
wipo_parents = unique(fread("cpc-schmoch.csv")[, c("Field_en", "Sector_en")])
colnames(wipo_parents) = c("domain", "parent")
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/tech/", system, "/", p, "/datalab"))
prio_parents <- unique(fread("crosswalk.csv")[, c("priority", "parent")])
colnames(prio_parents) = c("domain", "parent")
prio_parents = unique (prio_parents)
# TREEMAPS PRIO
setwd(paste0(dir, "/complexity/", j, "/", "/", p, "/", data))
df = read.csv("rel-comp-rca-2019-2023.csv")
#df$color <- get_rca_colors(df$rca)
# build treemap
df2 = subset (df, df$domain %in% prio_parents$domain)
df2 = subset (df2, df2$geo == "Guipuscoa (ES212)")
df2$color <- get_rca_colors(df2$rca)
df2 = merge (df2, prio_parents, by = "domain")
setwd(paste0("/Users/pierre-alex/Dropbox/PABalland.github.io/asg/", p, "/pat/prio"))
write(toJSON(df2, pretty = TRUE), "treemap.json")
df2$id = df2$domain
df2$x = df2$reldens
df2$y = df2$comp
df2$value = df2$rca
# merge with nuts2 comp numbers
setwd(paste0(dir, "/complexity/", "nuts2", "/", "/", p, "/", data))
comp = read.csv("rel-comp-rca-2019-2023.csv")
comp = unique(comp[, c("domain", "comp")])
df2 = merge (df2, comp, by.x = "id", by.y = "domain")
df2$y = df2$comp.y
df2$color[df2$parent == "Deep Tech"] = "#365a94"
df2$color[df2$parent == "Sustainability & Circularity"] = "#8cab79"
df2$color[df2$parent == "Life & Health Sciences"] = "#800020"
df2$color[df2$parent == "Social Sciences & Humanities"] = "#e28f26"
setwd(paste0("/Users/pierre-alex/Dropbox/PABalland.github.io/asg/", p, "/pat/prio"))
write(toJSON(df2, pretty = TRUE), "smart.json")
View(df2)
