"Amstelveen (2759798)",
"Naarden (2750521)")
matching_values <- df$geo[grepl("\\(NL", df$geo)]
matching_values2 <- df$geo[grepl("\\(27", df$geo)]
# Filter rows using %in%
filtered_df <- df[df$geo %in% matching_values, ]
df2 = subset (df, df$geo %in% k | df$geo %in% k2 | df$geo %in% matching_values | df$geo %in% matching_values2)
df2$parent = df2$geo
df2$parent[df2$geo %in% k2] = "North Holland"
df2$parent[df2$geo %in% matching_values2] = "North Holland"
df2$parent2[df2$parent == "North Holland"] = "West Netherlands"
df2$parent2[df2$parent == "Utrecht (NL31)"] = "West Netherlands"
df2$parent2[df2$parent == "South Holland (NL33)"] = "West Netherlands"
df2$parent2[df2$parent == "Zuid-Holland (NL33)"] = "West Netherlands"
df2$parent2[df2$parent == "Zeeland (NL34)"] = "West Netherlands"
df2$parent2[df2$parent == "North Brabant (NL41)"] = "South Netherlands"
df2$parent2[df2$parent == "Noord-Brabant (NL41)"] = "South Netherlands"
df2$parent2[df2$parent == "Limburg (NL) (NL42)"] = "South Netherlands"
df2$parent2[df2$parent == "Groningen (NL11)"] = "North Netherlands"
df2$parent2[df2$parent == "Friesland (NL12)"] = "North Netherlands"
df2$parent2[df2$parent == "Friesland (NL) (NL12)"] = "North Netherlands"
df2$parent2[df2$parent == "Drenthe (NL13)"] = "North Netherlands"
df2$parent2[df2$parent == "Overijssel (NL21)"] = "East Netherlands"
df2$parent2[df2$parent == "Gelderland (NL22)"] = "East Netherlands"
df2$parent2[df2$parent == "Flevoland (NL23)"] = "East Netherlands"
df2$color[df2$parent2 == "West Netherlands"] = "#8cab79"
df2$color[df2$parent2 == "South Netherlands"] = "#800020"
df2$color[df2$parent2 == "North Netherlands"] = "#EEDC82"
df2$color[df2$parent2 == "East Netherlands"] = "#e28f26"
df2$color[df2$parent == "North Holland"] = "#365a94"
#df2 = unique (df2[, c("org", "desc", "count", "domain", "parent", "geo", "color", "parent2")])
df2 = df2[, c("domain", "org", "geo" , "count" ,"parent"  ,  "parent2", "color" )]
#df2 <- df2 %>%
# group_by(org, desc, count, parent, geo, color, parent2) %>%
# summarise(domain = paste(domain, collapse = ", "), .groups = "drop")
df2 <- df2 %>%
group_by(org, count, parent, geo, color, parent2) %>%
summarise(domain = paste(domain, collapse = ", "), .groups = "drop")
df2$id = df2$org
df2$value = df2$count
#k = tolower(tools::toTitleCase(gsub("[^a-zA-Z]", "", tolower(k))))
#k <- tryCatch(tolower(tools::toTitleCase(gsub("[^a-zA-Z]", "", tolower(k)))), error = function(e) k)
k <- tryCatch(
tolower(tools::toTitleCase(gsub("[^a-zA-Z0-9 ]", "", iconv(k, from = "UTF-8", to = "ASCII//TRANSLIT", sub = "")))),
error = function(e) k
)
dir.create(paste0(dir, "/3-viz/ecosystems/", j, "/", i, "/", data), recursive = TRUE, showWarnings = FALSE)
setwd(paste0(dir, "/3-viz/ecosystems/", j, "/", i, "/", data))
writeLines(paste (p1, toJSON(df2, pretty = TRUE), p3, collapse="\n"), paste0("nl", ".html"))
# LOAD PARENTS
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/regpat/wipo/datalab"))
wipo_parents = unique(fread("cpc-schmoch.csv")[, c("Field_en", "Sector_en")])
colnames(wipo_parents) = c("domain", "parent3")
setwd(paste0(dir, "/_custom/domain/", data))
prio_parents <- unique(fread("crosswalk.csv")[, c("domain", "parent")])
colnames(prio_parents) = c("domain", "parent3")
parents = get(paste0(i, "_parents"))
df2 = merge (df2, parents, by = "domain")
df2$color[df2$parent3 == "Deep Tech"] = "#365a94"
df2$color[df2$parent3 == "Sustainability & Circularity"] = "#8cab79"
df2$color[df2$parent3 == "Life & Health Sciences"] = "#800020"
df2$color[df2$parent3 == "Social Sciences & Humanities"] = "#e28f26"
df2$color[df2$parent3 == "Electrical engineering"] = "#365a94"
df2$color[df2$parent3 == "Instruments"] = "#8cab79"
df2$color[df2$parent3 == "Chemistry"] = "#800020"
df2$color[df2$parent3 == "Mechanical engineering"] = "#EEDC82"
df2$color[df2$parent3 == "Other fields"] = "#e28f26"
df2 = subset (df2, df2$parent == "North Holland")
df2 = subset (df2, df2$geo == "Amsterdam (2759794) (2759794)" | df2$geo == "Amsterdam (2759794)")
df2$parent2 = df2$parent3
setwd(paste0(dir, "/3-viz/ecosystems/", j, "/", i, "/", data))
writeLines(paste (p1, toJSON(df2, pretty = TRUE), p3, collapse="\n"), paste0("amsterdam", ".html"))
# SELECTORS
data = "regpat"
p = "2-amsterdam" # project/folder name # IMPORTANT
dir <- paste0("~/Dropbox/1-asg/1-production/3-projects/", p) # WHERE DATA LOADS
i <- "prio" # "topic"; "wipo"; "all"; "aiw"
j <- "nuts2_amsterdam" # "city"; "urban"; "nuts2"; "nuts3"; "fua"; "country";
# CODE
library(data.table)
library(jsonlite)
library(stringr)
library(dplyr)
source("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/save.to.directory.R")
source("~/Dropbox/1-asg/1-production/2-code/get_rca_colors.R")
# LOAD PARENTS
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/regpat/wipo/datalab"))
wipo_parents = unique(fread("cpc-schmoch.csv")[, c("Field_en", "Sector_en")])
colnames(wipo_parents) = c("domain", "parent")
setwd(paste0(dir, "/_custom/domain/", data))
prio_parents <- unique(fread("crosswalk.csv")[, c("domain", "parent")])
parents = get(paste0(i, "_parents"))
# ORG-DOMAIN FILES
setwd("~/Dropbox/1-asg/1-production/3-projects/2-amsterdam/3-viz/ecosystems/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
setwd(paste0(dir, "/2-complexity/org/", j, "/", i,  "/", data))
df = read.csv(list.files()[which.max(as.numeric(sub(".*-(\\d{4})\\.csv", "\\1", list.files())))]) # read the latest file
df = merge (df, parents, by = "domain")
df$flag <- ifelse(grepl("\\(.*?\\).*?\\(.*?\\)", df$geo), 1, 0)
k = c("Amsterdam (2759794) (2759794)",
"Amstelveen (2759798) (2759798)",
"Naarden (2750521) (2750521)",
"Limburg (NL) (NL42)",
"Gelderland (NL22)", "South Holland (NL33)", "North Brabant (NL41)",
"Utrecht (NL31)", "Flevoland (NL23)", "Groningen (NL11)")
k2 = c("Amsterdam (2759794) (2759794)",
"Amstelveen (2759798) (2759798)",
"Naarden (2750521) (2750521)",
"Amsterdam (2759794)",
"Amstelveen (2759798)",
"Naarden (2750521)")
matching_values <- df$geo[grepl("\\(NL", df$geo)]
matching_values2 <- df$geo[grepl("\\(27", df$geo)]
# Filter rows using %in%
filtered_df <- df[df$geo %in% matching_values, ]
df2 = subset (df, df$geo %in% k | df$geo %in% k2 | df$geo %in% matching_values | df$geo %in% matching_values2)
df2$parent = df2$geo
df2$parent[df2$geo %in% k2] = "North Holland"
df2$parent[df2$geo %in% matching_values2] = "North Holland"
df2$parent2[df2$parent == "North Holland"] = "West Netherlands"
df2$parent2[df2$parent == "Utrecht (NL31)"] = "West Netherlands"
df2$parent2[df2$parent == "South Holland (NL33)"] = "West Netherlands"
df2$parent2[df2$parent == "Zuid-Holland (NL33)"] = "West Netherlands"
df2$parent2[df2$parent == "Zeeland (NL34)"] = "West Netherlands"
df2$parent2[df2$parent == "North Brabant (NL41)"] = "South Netherlands"
df2$parent2[df2$parent == "Noord-Brabant (NL41)"] = "South Netherlands"
df2$parent2[df2$parent == "Limburg (NL) (NL42)"] = "South Netherlands"
df2$parent2[df2$parent == "Groningen (NL11)"] = "North Netherlands"
df2$parent2[df2$parent == "Friesland (NL12)"] = "North Netherlands"
df2$parent2[df2$parent == "Friesland (NL) (NL12)"] = "North Netherlands"
df2$parent2[df2$parent == "Drenthe (NL13)"] = "North Netherlands"
df2$parent2[df2$parent == "Overijssel (NL21)"] = "East Netherlands"
df2$parent2[df2$parent == "Gelderland (NL22)"] = "East Netherlands"
df2$parent2[df2$parent == "Flevoland (NL23)"] = "East Netherlands"
df2$color[df2$parent2 == "West Netherlands"] = "#8cab79"
df2$color[df2$parent2 == "South Netherlands"] = "#800020"
df2$color[df2$parent2 == "North Netherlands"] = "#EEDC82"
df2$color[df2$parent2 == "East Netherlands"] = "#e28f26"
df2$color[df2$parent == "North Holland"] = "#365a94"
#df2 = unique (df2[, c("org", "desc", "count", "domain", "parent", "geo", "color", "parent2")])
df2 = df2[, c("domain", "org", "geo" , "count" ,"parent"  ,  "parent2", "color" )]
#df2 <- df2 %>%
# group_by(org, desc, count, parent, geo, color, parent2) %>%
# summarise(domain = paste(domain, collapse = ", "), .groups = "drop")
df2 <- df2 %>%
group_by(org, count, parent, geo, color, parent2) %>%
summarise(domain = paste(domain, collapse = ", "), .groups = "drop")
df2$id = df2$org
df2$value = df2$count
#k = tolower(tools::toTitleCase(gsub("[^a-zA-Z]", "", tolower(k))))
#k <- tryCatch(tolower(tools::toTitleCase(gsub("[^a-zA-Z]", "", tolower(k)))), error = function(e) k)
k <- tryCatch(
tolower(tools::toTitleCase(gsub("[^a-zA-Z0-9 ]", "", iconv(k, from = "UTF-8", to = "ASCII//TRANSLIT", sub = "")))),
error = function(e) k
)
dir.create(paste0(dir, "/3-viz/ecosystems/", j, "/", i, "/", data), recursive = TRUE, showWarnings = FALSE)
setwd(paste0(dir, "/3-viz/ecosystems/", j, "/", i, "/", data))
writeLines(paste (p1, toJSON(df2, pretty = TRUE), p3, collapse="\n"), paste0("nl", ".html"))
# LOAD PARENTS
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/regpat/wipo/datalab"))
wipo_parents = unique(fread("cpc-schmoch.csv")[, c("Field_en", "Sector_en")])
colnames(wipo_parents) = c("domain", "parent3")
setwd(paste0(dir, "/_custom/domain/", data))
prio_parents <- unique(fread("crosswalk.csv")[, c("domain", "parent")])
colnames(prio_parents) = c("domain", "parent3")
parents = get(paste0(i, "_parents"))
df2 = merge (df2, parents, by = "domain")
df2$color[df2$parent3 == "Deep Tech"] = "#365a94"
df2$color[df2$parent3 == "Sustainability & Circularity"] = "#8cab79"
df2$color[df2$parent3 == "Life & Health Sciences"] = "#800020"
df2$color[df2$parent3 == "Social Sciences & Humanities"] = "#e28f26"
df2$color[df2$parent3 == "Electrical engineering"] = "#365a94"
df2$color[df2$parent3 == "Instruments"] = "#8cab79"
df2$color[df2$parent3 == "Chemistry"] = "#800020"
df2$color[df2$parent3 == "Mechanical engineering"] = "#EEDC82"
df2$color[df2$parent3 == "Other fields"] = "#e28f26"
df2 = subset (df2, df2$parent == "North Holland")
df2 = subset (df2, df2$geo == "Amsterdam (2759794) (2759794)" | df2$geo == "Amsterdam (2759794)")
df2$parent2 = df2$parent3
setwd(paste0(dir, "/3-viz/ecosystems/", j, "/", i, "/", data))
writeLines(paste (p1, toJSON(df2, pretty = TRUE), p3, collapse="\n"), paste0("amsterdam", ".html"))
# SELECTORS
data = "regpat"
p = "2-amsterdam" # project/folder name # IMPORTANT
dir <- paste0("~/Dropbox/1-asg/1-production/3-projects/", p) # WHERE DATA LOADS
i <- "wipo" # "topic"; "wipo"; "all"; "aiw"
j <- "nuts2_amsterdam" # "city"; "urban"; "nuts2"; "nuts3"; "fua"; "country";
# CODE
library(data.table)
library(jsonlite)
library(stringr)
library(dplyr)
source("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/save.to.directory.R")
source("~/Dropbox/1-asg/1-production/2-code/get_rca_colors.R")
# LOAD PARENTS
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/regpat/wipo/datalab"))
wipo_parents = unique(fread("cpc-schmoch.csv")[, c("Field_en", "Sector_en")])
colnames(wipo_parents) = c("domain", "parent")
setwd(paste0(dir, "/_custom/domain/", data))
prio_parents <- unique(fread("crosswalk.csv")[, c("domain", "parent")])
parents = get(paste0(i, "_parents"))
# ORG-DOMAIN FILES
setwd("~/Dropbox/1-asg/1-production/3-projects/2-amsterdam/3-viz/ecosystems/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
setwd(paste0(dir, "/2-complexity/org/", j, "/", i,  "/", data))
df = read.csv(list.files()[which.max(as.numeric(sub(".*-(\\d{4})\\.csv", "\\1", list.files())))]) # read the latest file
df = merge (df, parents, by = "domain")
df$flag <- ifelse(grepl("\\(.*?\\).*?\\(.*?\\)", df$geo), 1, 0)
k = c("Amsterdam (2759794) (2759794)",
"Amstelveen (2759798) (2759798)",
"Naarden (2750521) (2750521)",
"Limburg (NL) (NL42)",
"Gelderland (NL22)", "South Holland (NL33)", "North Brabant (NL41)",
"Utrecht (NL31)", "Flevoland (NL23)", "Groningen (NL11)")
k2 = c("Amsterdam (2759794) (2759794)",
"Amstelveen (2759798) (2759798)",
"Naarden (2750521) (2750521)",
"Amsterdam (2759794)",
"Amstelveen (2759798)",
"Naarden (2750521)")
matching_values <- df$geo[grepl("\\(NL", df$geo)]
matching_values2 <- df$geo[grepl("\\(27", df$geo)]
# Filter rows using %in%
filtered_df <- df[df$geo %in% matching_values, ]
df2 = subset (df, df$geo %in% k | df$geo %in% k2 | df$geo %in% matching_values | df$geo %in% matching_values2)
df2$parent = df2$geo
df2$parent[df2$geo %in% k2] = "North Holland"
df2$parent[df2$geo %in% matching_values2] = "North Holland"
df2$parent2[df2$parent == "North Holland"] = "West Netherlands"
df2$parent2[df2$parent == "Utrecht (NL31)"] = "West Netherlands"
df2$parent2[df2$parent == "South Holland (NL33)"] = "West Netherlands"
df2$parent2[df2$parent == "Zuid-Holland (NL33)"] = "West Netherlands"
df2$parent2[df2$parent == "Zeeland (NL34)"] = "West Netherlands"
df2$parent2[df2$parent == "North Brabant (NL41)"] = "South Netherlands"
df2$parent2[df2$parent == "Noord-Brabant (NL41)"] = "South Netherlands"
df2$parent2[df2$parent == "Limburg (NL) (NL42)"] = "South Netherlands"
df2$parent2[df2$parent == "Groningen (NL11)"] = "North Netherlands"
df2$parent2[df2$parent == "Friesland (NL12)"] = "North Netherlands"
df2$parent2[df2$parent == "Friesland (NL) (NL12)"] = "North Netherlands"
df2$parent2[df2$parent == "Drenthe (NL13)"] = "North Netherlands"
df2$parent2[df2$parent == "Overijssel (NL21)"] = "East Netherlands"
df2$parent2[df2$parent == "Gelderland (NL22)"] = "East Netherlands"
df2$parent2[df2$parent == "Flevoland (NL23)"] = "East Netherlands"
df2$color[df2$parent2 == "West Netherlands"] = "#8cab79"
df2$color[df2$parent2 == "South Netherlands"] = "#800020"
df2$color[df2$parent2 == "North Netherlands"] = "#EEDC82"
df2$color[df2$parent2 == "East Netherlands"] = "#e28f26"
df2$color[df2$parent == "North Holland"] = "#365a94"
#df2 = unique (df2[, c("org", "desc", "count", "domain", "parent", "geo", "color", "parent2")])
df2 = df2[, c("domain", "org", "geo" , "count" ,"parent"  ,  "parent2", "color" )]
#df2 <- df2 %>%
# group_by(org, desc, count, parent, geo, color, parent2) %>%
# summarise(domain = paste(domain, collapse = ", "), .groups = "drop")
df2 <- df2 %>%
group_by(org, count, parent, geo, color, parent2) %>%
summarise(domain = paste(domain, collapse = ", "), .groups = "drop")
df2$id = df2$org
df2$value = df2$count
#k = tolower(tools::toTitleCase(gsub("[^a-zA-Z]", "", tolower(k))))
#k <- tryCatch(tolower(tools::toTitleCase(gsub("[^a-zA-Z]", "", tolower(k)))), error = function(e) k)
k <- tryCatch(
tolower(tools::toTitleCase(gsub("[^a-zA-Z0-9 ]", "", iconv(k, from = "UTF-8", to = "ASCII//TRANSLIT", sub = "")))),
error = function(e) k
)
dir.create(paste0(dir, "/3-viz/ecosystems/", j, "/", i, "/", data), recursive = TRUE, showWarnings = FALSE)
setwd(paste0(dir, "/3-viz/ecosystems/", j, "/", i, "/", data))
writeLines(paste (p1, toJSON(df2, pretty = TRUE), p3, collapse="\n"), paste0("nl", ".html"))
# LOAD PARENTS
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/regpat/wipo/datalab"))
wipo_parents = unique(fread("cpc-schmoch.csv")[, c("Field_en", "Sector_en")])
colnames(wipo_parents) = c("domain", "parent3")
setwd(paste0(dir, "/_custom/domain/", data))
prio_parents <- unique(fread("crosswalk.csv")[, c("domain", "parent")])
colnames(prio_parents) = c("domain", "parent3")
parents = get(paste0(i, "_parents"))
df2 = merge (df2, parents, by = "domain")
df2$color[df2$parent3 == "Deep Tech"] = "#365a94"
df2$color[df2$parent3 == "Sustainability & Circularity"] = "#8cab79"
df2$color[df2$parent3 == "Life & Health Sciences"] = "#800020"
df2$color[df2$parent3 == "Social Sciences & Humanities"] = "#e28f26"
df2$color[df2$parent3 == "Electrical engineering"] = "#365a94"
df2$color[df2$parent3 == "Instruments"] = "#8cab79"
df2$color[df2$parent3 == "Chemistry"] = "#800020"
df2$color[df2$parent3 == "Mechanical engineering"] = "#EEDC82"
df2$color[df2$parent3 == "Other fields"] = "#e28f26"
df2 = subset (df2, df2$parent == "North Holland")
df2 = subset (df2, df2$geo == "Amsterdam (2759794) (2759794)" | df2$geo == "Amsterdam (2759794)")
df2$parent2 = df2$parent3
setwd(paste0(dir, "/3-viz/ecosystems/", j, "/", i, "/", data))
writeLines(paste (p1, toJSON(df2, pretty = TRUE), p3, collapse="\n"), paste0("amsterdam", ".html"))
# SELECTORS
data = "crunchbase"
p = "2-amsterdam" # project/folder name # IMPORTANT
dir <- paste0("~/Dropbox/1-asg/1-production/3-projects/", p) # WHERE DATA LOADS
i <- "wipo" # "topic"; "wipo"; "all"; "aiw"
j <- "nuts2_amsterdam" # "city"; "urban"; "nuts2"; "nuts3"; "fua"; "country";
# CODE
library(data.table)
library(jsonlite)
library(stringr)
library(dplyr)
source("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/save.to.directory.R")
source("~/Dropbox/1-asg/1-production/2-code/get_rca_colors.R")
# LOAD PARENTS
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/regpat/wipo/datalab"))
wipo_parents = unique(fread("cpc-schmoch.csv")[, c("Field_en", "Sector_en")])
colnames(wipo_parents) = c("domain", "parent")
setwd(paste0(dir, "/_custom/domain/", data))
prio_parents <- unique(fread("crosswalk.csv")[, c("domain", "parent")])
parents = get(paste0(i, "_parents"))
# ORG-DOMAIN FILES
setwd("~/Dropbox/1-asg/1-production/3-projects/2-amsterdam/3-viz/ecosystems/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
setwd(paste0(dir, "/2-complexity/org/", j, "/", i,  "/", data))
df = read.csv(list.files()[which.max(as.numeric(sub(".*-(\\d{4})\\.csv", "\\1", list.files())))]) # read the latest file
df = merge (df, parents, by = "domain")
df$flag <- ifelse(grepl("\\(.*?\\).*?\\(.*?\\)", df$geo), 1, 0)
k = c("Amsterdam (2759794) (2759794)",
"Amstelveen (2759798) (2759798)",
"Naarden (2750521) (2750521)",
"Limburg (NL) (NL42)",
"Gelderland (NL22)", "South Holland (NL33)", "North Brabant (NL41)",
"Utrecht (NL31)", "Flevoland (NL23)", "Groningen (NL11)")
k2 = c("Amsterdam (2759794) (2759794)",
"Amstelveen (2759798) (2759798)",
"Naarden (2750521) (2750521)",
"Amsterdam (2759794)",
"Amstelveen (2759798)",
"Naarden (2750521)")
matching_values <- df$geo[grepl("\\(NL", df$geo)]
matching_values2 <- df$geo[grepl("\\(27", df$geo)]
# Filter rows using %in%
filtered_df <- df[df$geo %in% matching_values, ]
df2 = subset (df, df$geo %in% k | df$geo %in% k2 | df$geo %in% matching_values | df$geo %in% matching_values2)
df2$parent = df2$geo
df2$parent[df2$geo %in% k2] = "North Holland"
df2$parent[df2$geo %in% matching_values2] = "North Holland"
df2$parent2[df2$parent == "North Holland"] = "West Netherlands"
df2$parent2[df2$parent == "Utrecht (NL31)"] = "West Netherlands"
df2$parent2[df2$parent == "South Holland (NL33)"] = "West Netherlands"
df2$parent2[df2$parent == "Zuid-Holland (NL33)"] = "West Netherlands"
df2$parent2[df2$parent == "Zeeland (NL34)"] = "West Netherlands"
df2$parent2[df2$parent == "North Brabant (NL41)"] = "South Netherlands"
df2$parent2[df2$parent == "Noord-Brabant (NL41)"] = "South Netherlands"
df2$parent2[df2$parent == "Limburg (NL) (NL42)"] = "South Netherlands"
df2$parent2[df2$parent == "Groningen (NL11)"] = "North Netherlands"
df2$parent2[df2$parent == "Friesland (NL12)"] = "North Netherlands"
df2$parent2[df2$parent == "Friesland (NL) (NL12)"] = "North Netherlands"
df2$parent2[df2$parent == "Drenthe (NL13)"] = "North Netherlands"
df2$parent2[df2$parent == "Overijssel (NL21)"] = "East Netherlands"
df2$parent2[df2$parent == "Gelderland (NL22)"] = "East Netherlands"
df2$parent2[df2$parent == "Flevoland (NL23)"] = "East Netherlands"
df2$color[df2$parent2 == "West Netherlands"] = "#8cab79"
df2$color[df2$parent2 == "South Netherlands"] = "#800020"
df2$color[df2$parent2 == "North Netherlands"] = "#EEDC82"
df2$color[df2$parent2 == "East Netherlands"] = "#e28f26"
df2$color[df2$parent == "North Holland"] = "#365a94"
#df2 = unique (df2[, c("org", "desc", "count", "domain", "parent", "geo", "color", "parent2")])
df2 = df2[, c("domain", "org", "geo" , "count" ,"parent"  ,  "parent2", "color" )]
#df2 <- df2 %>%
# group_by(org, desc, count, parent, geo, color, parent2) %>%
# summarise(domain = paste(domain, collapse = ", "), .groups = "drop")
df2 <- df2 %>%
group_by(org, count, parent, geo, color, parent2) %>%
summarise(domain = paste(domain, collapse = ", "), .groups = "drop")
df2$id = df2$org
df2$value = df2$count
#k = tolower(tools::toTitleCase(gsub("[^a-zA-Z]", "", tolower(k))))
#k <- tryCatch(tolower(tools::toTitleCase(gsub("[^a-zA-Z]", "", tolower(k)))), error = function(e) k)
k <- tryCatch(
tolower(tools::toTitleCase(gsub("[^a-zA-Z0-9 ]", "", iconv(k, from = "UTF-8", to = "ASCII//TRANSLIT", sub = "")))),
error = function(e) k
)
dir.create(paste0(dir, "/3-viz/ecosystems/", j, "/", i, "/", data), recursive = TRUE, showWarnings = FALSE)
setwd(paste0(dir, "/3-viz/ecosystems/", j, "/", i, "/", data))
writeLines(paste (p1, toJSON(df2, pretty = TRUE), p3, collapse="\n"), paste0("nl", ".html"))
# LOAD PARENTS
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/regpat/wipo/datalab"))
wipo_parents = unique(fread("cpc-schmoch.csv")[, c("Field_en", "Sector_en")])
colnames(wipo_parents) = c("domain", "parent3")
setwd(paste0(dir, "/_custom/domain/", data))
prio_parents <- unique(fread("crosswalk.csv")[, c("domain", "parent")])
colnames(prio_parents) = c("domain", "parent3")
parents = get(paste0(i, "_parents"))
df2 = merge (df2, parents, by = "domain")
df2$color[df2$parent3 == "Deep Tech"] = "#365a94"
df2$color[df2$parent3 == "Sustainability & Circularity"] = "#8cab79"
df2$color[df2$parent3 == "Life & Health Sciences"] = "#800020"
df2$color[df2$parent3 == "Social Sciences & Humanities"] = "#e28f26"
df2$color[df2$parent3 == "Electrical engineering"] = "#365a94"
df2$color[df2$parent3 == "Instruments"] = "#8cab79"
df2$color[df2$parent3 == "Chemistry"] = "#800020"
df2$color[df2$parent3 == "Mechanical engineering"] = "#EEDC82"
df2$color[df2$parent3 == "Other fields"] = "#e28f26"
df2 = subset (df2, df2$parent == "North Holland")
df2 = subset (df2, df2$geo == "Amsterdam (2759794) (2759794)" | df2$geo == "Amsterdam (2759794)")
df2$parent2 = df2$parent3
setwd(paste0(dir, "/3-viz/ecosystems/", j, "/", i, "/", data))
writeLines(paste (p1, toJSON(df2, pretty = TRUE), p3, collapse="\n"), paste0("amsterdam", ".html"))
# SELECTORS
data = "crunchbase"
p = "2-amsterdam" # project/folder name # IMPORTANT
dir <- paste0("~/Dropbox/1-asg/1-production/3-projects/", p) # WHERE DATA LOADS
i <- "prio" # "topic"; "wipo"; "all"; "aiw"
j <- "nuts2_amsterdam" # "city"; "urban"; "nuts2"; "nuts3"; "fua"; "country";
# CODE
library(data.table)
library(jsonlite)
library(stringr)
library(dplyr)
source("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/save.to.directory.R")
source("~/Dropbox/1-asg/1-production/2-code/get_rca_colors.R")
# LOAD PARENTS
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/regpat/wipo/datalab"))
wipo_parents = unique(fread("cpc-schmoch.csv")[, c("Field_en", "Sector_en")])
colnames(wipo_parents) = c("domain", "parent")
setwd(paste0(dir, "/_custom/domain/", data))
prio_parents <- unique(fread("crosswalk.csv")[, c("domain", "parent")])
parents = get(paste0(i, "_parents"))
# ORG-DOMAIN FILES
setwd("~/Dropbox/1-asg/1-production/3-projects/2-amsterdam/3-viz/ecosystems/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
setwd(paste0(dir, "/2-complexity/org/", j, "/", i,  "/", data))
df = read.csv(list.files()[which.max(as.numeric(sub(".*-(\\d{4})\\.csv", "\\1", list.files())))]) # read the latest file
df = merge (df, parents, by = "domain")
df$flag <- ifelse(grepl("\\(.*?\\).*?\\(.*?\\)", df$geo), 1, 0)
k = c("Amsterdam (2759794) (2759794)",
"Amstelveen (2759798) (2759798)",
"Naarden (2750521) (2750521)",
"Limburg (NL) (NL42)",
"Gelderland (NL22)", "South Holland (NL33)", "North Brabant (NL41)",
"Utrecht (NL31)", "Flevoland (NL23)", "Groningen (NL11)")
k2 = c("Amsterdam (2759794) (2759794)",
"Amstelveen (2759798) (2759798)",
"Naarden (2750521) (2750521)",
"Amsterdam (2759794)",
"Amstelveen (2759798)",
"Naarden (2750521)")
matching_values <- df$geo[grepl("\\(NL", df$geo)]
matching_values2 <- df$geo[grepl("\\(27", df$geo)]
# Filter rows using %in%
filtered_df <- df[df$geo %in% matching_values, ]
df2 = subset (df, df$geo %in% k | df$geo %in% k2 | df$geo %in% matching_values | df$geo %in% matching_values2)
df2$parent = df2$geo
df2$parent[df2$geo %in% k2] = "North Holland"
df2$parent[df2$geo %in% matching_values2] = "North Holland"
df2$parent2[df2$parent == "North Holland"] = "West Netherlands"
df2$parent2[df2$parent == "Utrecht (NL31)"] = "West Netherlands"
df2$parent2[df2$parent == "South Holland (NL33)"] = "West Netherlands"
df2$parent2[df2$parent == "Zuid-Holland (NL33)"] = "West Netherlands"
df2$parent2[df2$parent == "Zeeland (NL34)"] = "West Netherlands"
df2$parent2[df2$parent == "North Brabant (NL41)"] = "South Netherlands"
df2$parent2[df2$parent == "Noord-Brabant (NL41)"] = "South Netherlands"
df2$parent2[df2$parent == "Limburg (NL) (NL42)"] = "South Netherlands"
df2$parent2[df2$parent == "Groningen (NL11)"] = "North Netherlands"
df2$parent2[df2$parent == "Friesland (NL12)"] = "North Netherlands"
df2$parent2[df2$parent == "Friesland (NL) (NL12)"] = "North Netherlands"
df2$parent2[df2$parent == "Drenthe (NL13)"] = "North Netherlands"
df2$parent2[df2$parent == "Overijssel (NL21)"] = "East Netherlands"
df2$parent2[df2$parent == "Gelderland (NL22)"] = "East Netherlands"
df2$parent2[df2$parent == "Flevoland (NL23)"] = "East Netherlands"
df2$color[df2$parent2 == "West Netherlands"] = "#8cab79"
df2$color[df2$parent2 == "South Netherlands"] = "#800020"
df2$color[df2$parent2 == "North Netherlands"] = "#EEDC82"
df2$color[df2$parent2 == "East Netherlands"] = "#e28f26"
df2$color[df2$parent == "North Holland"] = "#365a94"
#df2 = unique (df2[, c("org", "desc", "count", "domain", "parent", "geo", "color", "parent2")])
df2 = df2[, c("domain", "org", "geo" , "count" ,"parent"  ,  "parent2", "color" )]
#df2 <- df2 %>%
# group_by(org, desc, count, parent, geo, color, parent2) %>%
# summarise(domain = paste(domain, collapse = ", "), .groups = "drop")
df2 <- df2 %>%
group_by(org, count, parent, geo, color, parent2) %>%
summarise(domain = paste(domain, collapse = ", "), .groups = "drop")
df2$id = df2$org
df2$value = df2$count
#k = tolower(tools::toTitleCase(gsub("[^a-zA-Z]", "", tolower(k))))
#k <- tryCatch(tolower(tools::toTitleCase(gsub("[^a-zA-Z]", "", tolower(k)))), error = function(e) k)
k <- tryCatch(
tolower(tools::toTitleCase(gsub("[^a-zA-Z0-9 ]", "", iconv(k, from = "UTF-8", to = "ASCII//TRANSLIT", sub = "")))),
error = function(e) k
)
dir.create(paste0(dir, "/3-viz/ecosystems/", j, "/", i, "/", data), recursive = TRUE, showWarnings = FALSE)
setwd(paste0(dir, "/3-viz/ecosystems/", j, "/", i, "/", data))
writeLines(paste (p1, toJSON(df2, pretty = TRUE), p3, collapse="\n"), paste0("nl", ".html"))
# LOAD PARENTS
setwd(paste0("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/DOMAIN/regpat/wipo/datalab"))
wipo_parents = unique(fread("cpc-schmoch.csv")[, c("Field_en", "Sector_en")])
colnames(wipo_parents) = c("domain", "parent3")
setwd(paste0(dir, "/_custom/domain/", data))
prio_parents <- unique(fread("crosswalk.csv")[, c("domain", "parent")])
colnames(prio_parents) = c("domain", "parent3")
parents = get(paste0(i, "_parents"))
df2 = merge (df2, parents, by = "domain")
df2$color[df2$parent3 == "Deep Tech"] = "#365a94"
df2$color[df2$parent3 == "Sustainability & Circularity"] = "#8cab79"
df2$color[df2$parent3 == "Life & Health Sciences"] = "#800020"
df2$color[df2$parent3 == "Social Sciences & Humanities"] = "#e28f26"
df2$color[df2$parent3 == "Electrical engineering"] = "#365a94"
df2$color[df2$parent3 == "Instruments"] = "#8cab79"
df2$color[df2$parent3 == "Chemistry"] = "#800020"
df2$color[df2$parent3 == "Mechanical engineering"] = "#EEDC82"
df2$color[df2$parent3 == "Other fields"] = "#e28f26"
df2 = subset (df2, df2$parent == "North Holland")
df2 = subset (df2, df2$geo == "Amsterdam (2759794) (2759794)" | df2$geo == "Amsterdam (2759794)")
df2$parent2 = df2$parent3
setwd(paste0(dir, "/3-viz/ecosystems/", j, "/", i, "/", data))
writeLines(paste (p1, toJSON(df2, pretty = TRUE), p3, collapse="\n"), paste0("amsterdam", ".html"))
