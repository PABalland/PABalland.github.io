s3 = unique (d[, c("KIA",	"S3")])
s3$id = as.numeric(factor (unique (s3$S3)))
df = merge (df, s3, by.x = "Industry", by.y = "S3")
#
# back to higher level
#
df = df[, c("Region", "KIA", "Count")]
df = get.matrix (df)
df = get.list (df)
df$id = as.numeric(factor (unique (df$Region)))
df$parent = substr(df$Region, 0, 2)
df$color[df$parent == "AT"] = "white"
df$color[df$parent == "BE"] = "black"
df$color[df$parent == "BG"] = "white"
df$color[df$parent == "CH"] = "purple"
df$color[df$parent == "CY"] = "white"
df$color[df$parent == "CZ"] = "white"
df$color[df$parent == "DE"] = "yellow"
df$color[df$parent == "DK"] = "white"
df$color[df$parent == "EE"] = "white"
df$color[df$parent == "EL"] = "white"
df$color[df$parent == "ES"] = "pink"
df$color[df$parent == "FI"] = "white"
df$color[df$parent == "FR"] = "blue"
df$color[df$parent == "HR"] = "white"
df$color[df$parent == "HU"] = "white"
df$color[df$parent == "IE"] = "green"
df$color[df$parent == "IS"] = "white"
df$color[df$parent == "IT"] = "lightblue"
df$color[df$parent == "LT"] = "white"
df$color[df$parent == "LU"] = "white"
df$color[df$parent == "LV"] = "white"
df$color[df$parent == "MT"] = "white"
df$color[df$parent == "NL"] = "orange"
df$color[df$parent == "NO"] = "white"
df$color[df$parent == "PL"] = "white"
df$color[df$parent == "PT"] = "white"
df$color[df$parent == "RO"] = "white"
df$color[df$parent == "SE"] = "lightred"
df$color[df$parent == "SI"] = "white"
df$color[df$parent == "SK"] = "white"
df$color[df$parent == "UK"] = "red"
df$Region = iconv(df$Region, to = 'ASCII//TRANSLIT')
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
df$sum = ave(df$Count, df$Industry, FUN = sum)
df$share = round (df$Count*100/df$sum, digits = 2)
df.full = df
##
for (i in unique (df$Industry)) {
#i = "Drenthe"
df = subset (df.full, df.full$Industry == i)
df$Industry = NULL
# add variables
df$id = df$Region
df$value = df$Count
var = c("parent", "id", "value", "color", "share")
df = unique(df[, var])
df = df[complete.cases(df),]
r=i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "3-outputs/treemaps-techs"))
writeLines(all, paste0(r, ".html"))
setwd(paste0(dir2, "/treemaps-techs"))
writeLines(all, paste0(r, ".html"))
}
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
dir = "D:/Dropbox/2-private/1-asg/Projects/3-l'oréal/"
dir2 = "D:/Dropbox/2-private/PABalland.github.io/asg/loreal/"
# load different parts of html
setwd(paste0(dir, "3-outputs/treemaps/_source"))
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
setwd(paste0(dir, "2-analysis"))
df = as.matrix(read.csv2("1-bimodal-pat-p4.csv",
header = T,
check.names = F,
row.names = 1))
df = get.list (df)
# extract s3 fields
# read crosswalk
setwd(paste0(dir, "1-data"))
d = read.csv("0-S3-CPC.csv", sep = ";", check.names = F)
colnames (d) = c("KIA",	"S3",	"CPC",	"Description")
s3 = unique (d[, c("KIA",	"S3")])
s3$id = as.numeric(factor (unique (s3$S3)))
df = merge (df, s3, by.x = "Industry", by.y = "S3")
#
# back to higher level
#
df = df[, c("Region", "KIA", "Count")]
df = get.matrix (df)
df = get.list (df)
df$id = as.numeric(factor (unique (df$Region)))
df$parent = substr(df$Region, 0, 2)
df$color[df$parent == "AT"] = "lightgreen"
df$color[df$parent == "BE"] = "black"
df$color[df$parent == "BG"] = "white"
df$color[df$parent == "CH"] = "purple"
df$color[df$parent == "CY"] = "white"
df$color[df$parent == "CZ"] = "white"
df$color[df$parent == "DE"] = "yellow"
df$color[df$parent == "DK"] = "brown"
df$color[df$parent == "EE"] = "white"
df$color[df$parent == "EL"] = "white"
df$color[df$parent == "ES"] = "pink"
df$color[df$parent == "FI"] = "white"
df$color[df$parent == "FR"] = "blue"
df$color[df$parent == "HR"] = "white"
df$color[df$parent == "HU"] = "white"
df$color[df$parent == "IE"] = "green"
df$color[df$parent == "IS"] = "white"
df$color[df$parent == "IT"] = "lightblue"
df$color[df$parent == "LT"] = "white"
df$color[df$parent == "LU"] = "white"
df$color[df$parent == "LV"] = "white"
df$color[df$parent == "MT"] = "white"
df$color[df$parent == "NL"] = "orange"
df$color[df$parent == "NO"] = "white"
df$color[df$parent == "PL"] = "white"
df$color[df$parent == "PT"] = "white"
df$color[df$parent == "RO"] = "white"
df$color[df$parent == "SE"] = "lightred"
df$color[df$parent == "SI"] = "white"
df$color[df$parent == "SK"] = "white"
df$color[df$parent == "UK"] = "red"
df$Region = iconv(df$Region, to = 'ASCII//TRANSLIT')
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
df$sum = ave(df$Count, df$Industry, FUN = sum)
df$share = round (df$Count*100/df$sum, digits = 2)
df.full = df
##
for (i in unique (df$Industry)) {
#i = "Drenthe"
df = subset (df.full, df.full$Industry == i)
df$Industry = NULL
# add variables
df$id = df$Region
df$value = df$Count
var = c("parent", "id", "value", "color", "share")
df = unique(df[, var])
df = df[complete.cases(df),]
r=i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "3-outputs/treemaps-techs"))
writeLines(all, paste0(r, ".html"))
setwd(paste0(dir2, "/treemaps-techs"))
writeLines(all, paste0(r, ".html"))
}
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
dir = "D:/Dropbox/2-private/1-asg/Projects/3-l'oréal/"
dir2 = "D:/Dropbox/2-private/PABalland.github.io/asg/loreal/"
# load different parts of html
setwd(paste0(dir, "3-outputs/treemaps/_source"))
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
setwd(paste0(dir, "2-analysis"))
df = as.matrix(read.csv2("1-bimodal-pat-p4.csv",
header = T,
check.names = F,
row.names = 1))
df = get.list (df)
# extract s3 fields
# read crosswalk
setwd(paste0(dir, "1-data"))
d = read.csv("0-S3-CPC.csv", sep = ";", check.names = F)
colnames (d) = c("KIA",	"S3",	"CPC",	"Description")
s3 = unique (d[, c("KIA",	"S3")])
s3$id = as.numeric(factor (unique (s3$S3)))
df = merge (df, s3, by.x = "Industry", by.y = "S3")
#
# back to higher level
#
df = df[, c("Region", "KIA", "Count")]
df = get.matrix (df)
df = get.list (df)
df$id = as.numeric(factor (unique (df$Region)))
df$parent = substr(df$Region, 0, 2)
df$color[df$parent == "AT"] = "lightgreen"
df$color[df$parent == "BE"] = "black"
df$color[df$parent == "BG"] = "white"
df$color[df$parent == "CH"] = "purple"
df$color[df$parent == "CY"] = "white"
df$color[df$parent == "CZ"] = "white"
df$color[df$parent == "DE"] = "yellow"
df$color[df$parent == "DK"] = "brown"
df$color[df$parent == "EE"] = "white"
df$color[df$parent == "EL"] = "white"
df$color[df$parent == "ES"] = "pink"
df$color[df$parent == "FI"] = "lightpink"
df$color[df$parent == "FR"] = "blue"
df$color[df$parent == "HR"] = "white"
df$color[df$parent == "HU"] = "white"
df$color[df$parent == "IE"] = "green"
df$color[df$parent == "IS"] = "white"
df$color[df$parent == "IT"] = "lightblue"
df$color[df$parent == "LT"] = "white"
df$color[df$parent == "LU"] = "white"
df$color[df$parent == "LV"] = "white"
df$color[df$parent == "MT"] = "white"
df$color[df$parent == "NL"] = "orange"
df$color[df$parent == "NO"] = "white"
df$color[df$parent == "PL"] = "white"
df$color[df$parent == "PT"] = "white"
df$color[df$parent == "RO"] = "white"
df$color[df$parent == "SE"] = "lightred"
df$color[df$parent == "SI"] = "white"
df$color[df$parent == "SK"] = "white"
df$color[df$parent == "UK"] = "red"
df$Region = iconv(df$Region, to = 'ASCII//TRANSLIT')
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
df$sum = ave(df$Count, df$Industry, FUN = sum)
df$share = round (df$Count*100/df$sum, digits = 2)
df.full = df
##
for (i in unique (df$Industry)) {
#i = "Drenthe"
df = subset (df.full, df.full$Industry == i)
df$Industry = NULL
# add variables
df$id = df$Region
df$value = df$Count
var = c("parent", "id", "value", "color", "share")
df = unique(df[, var])
df = df[complete.cases(df),]
r=i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "3-outputs/treemaps-techs"))
writeLines(all, paste0(r, ".html"))
setwd(paste0(dir2, "/treemaps-techs"))
writeLines(all, paste0(r, ".html"))
}
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
dir = "D:/Dropbox/2-private/1-asg/Projects/3-l'oréal/"
dir2 = "D:/Dropbox/2-private/PABalland.github.io/asg/loreal/"
# load different parts of html
setwd(paste0(dir, "3-outputs/treemaps/_source"))
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
setwd(paste0(dir, "2-analysis"))
df = as.matrix(read.csv2("1-bimodal-pat-p4.csv",
header = T,
check.names = F,
row.names = 1))
df = get.list (df)
# extract s3 fields
# read crosswalk
setwd(paste0(dir, "1-data"))
d = read.csv("0-S3-CPC.csv", sep = ";", check.names = F)
colnames (d) = c("KIA",	"S3",	"CPC",	"Description")
s3 = unique (d[, c("KIA",	"S3")])
s3$id = as.numeric(factor (unique (s3$S3)))
df = merge (df, s3, by.x = "Industry", by.y = "S3")
#
# back to higher level
#
df = df[, c("Region", "KIA", "Count")]
df = get.matrix (df)
df = get.list (df)
df$id = as.numeric(factor (unique (df$Region)))
df$parent = substr(df$Region, 0, 2)
df$color[df$parent == "AT"] = "lightgreen"
df$color[df$parent == "BE"] = "black"
df$color[df$parent == "BG"] = "white"
df$color[df$parent == "CH"] = "purple"
df$color[df$parent == "CY"] = "white"
df$color[df$parent == "CZ"] = "white"
df$color[df$parent == "DE"] = "yellow"
df$color[df$parent == "DK"] = "brown"
df$color[df$parent == "EE"] = "white"
df$color[df$parent == "EL"] = "white"
df$color[df$parent == "ES"] = "pink"
df$color[df$parent == "FI"] = "lightpink"
df$color[df$parent == "FR"] = "blue"
df$color[df$parent == "HR"] = "white"
df$color[df$parent == "HU"] = "white"
df$color[df$parent == "IE"] = "green"
df$color[df$parent == "IS"] = "white"
df$color[df$parent == "IT"] = "lightblue"
df$color[df$parent == "LT"] = "white"
df$color[df$parent == "LU"] = "white"
df$color[df$parent == "LV"] = "white"
df$color[df$parent == "MT"] = "white"
df$color[df$parent == "NL"] = "orange"
df$color[df$parent == "NO"] = "lightorange"
df$color[df$parent == "PL"] = "darkgrey"
df$color[df$parent == "PT"] = "lightpurple"
df$color[df$parent == "RO"] = "lightyellow"
df$color[df$parent == "SE"] = "lightred"
df$color[df$parent == "SI"] = "grey"
df$color[df$parent == "SK"] = "white"
df$color[df$parent == "UK"] = "red"
df$Region = iconv(df$Region, to = 'ASCII//TRANSLIT')
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
df$sum = ave(df$Count, df$Industry, FUN = sum)
df$share = round (df$Count*100/df$sum, digits = 2)
df.full = df
##
for (i in unique (df$Industry)) {
#i = "Drenthe"
df = subset (df.full, df.full$Industry == i)
df$Industry = NULL
# add variables
df$id = df$Region
df$value = df$Count
var = c("parent", "id", "value", "color", "share")
df = unique(df[, var])
df = df[complete.cases(df),]
r=i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "3-outputs/treemaps-techs"))
writeLines(all, paste0(r, ".html"))
setwd(paste0(dir2, "/treemaps-techs"))
writeLines(all, paste0(r, ".html"))
}
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
dir = "D:/Dropbox/2-private/1-asg/Projects/3-l'oréal/"
dir2 = "D:/Dropbox/2-private/PABalland.github.io/asg/loreal/"
# load different parts of html
setwd(paste0(dir, "3-outputs/treemaps/_source"))
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
setwd(paste0(dir, "2-analysis"))
df = as.matrix(read.csv2("1-bimodal-pat-p4.csv",
header = T,
check.names = F,
row.names = 1))
df = get.list (df)
# extract s3 fields
# read crosswalk
setwd(paste0(dir, "1-data"))
d = read.csv("0-S3-CPC.csv", sep = ";", check.names = F)
colnames (d) = c("KIA",	"S3",	"CPC",	"Description")
s3 = unique (d[, c("KIA",	"S3")])
s3$id = as.numeric(factor (unique (s3$S3)))
df = merge (df, s3, by.x = "Industry", by.y = "S3")
#
# back to higher level
#
df = df[, c("Region", "KIA", "Count")]
df = get.matrix (df)
df = get.list (df)
df$id = as.numeric(factor (unique (df$Region)))
df$parent = substr(df$Region, 0, 2)
df$color[df$parent == "AT"] = "lightgreen"
df$color[df$parent == "BE"] = "black"
df$color[df$parent == "BG"] = "white"
df$color[df$parent == "CH"] = "purple"
df$color[df$parent == "CY"] = "white"
df$color[df$parent == "CZ"] = "white"
df$color[df$parent == "DE"] = "yellow"
df$color[df$parent == "DK"] = "brown"
df$color[df$parent == "EE"] = "white"
df$color[df$parent == "EL"] = "white"
df$color[df$parent == "ES"] = "pink"
df$color[df$parent == "FI"] = "lightpink"
df$color[df$parent == "FR"] = "blue"
df$color[df$parent == "HR"] = "white"
df$color[df$parent == "HU"] = "white"
df$color[df$parent == "IE"] = "green"
df$color[df$parent == "IS"] = "firebrick4"
df$color[df$parent == "IT"] = "lightblue"
df$color[df$parent == "LT"] = "white"
df$color[df$parent == "LU"] = "white"
df$color[df$parent == "LV"] = "white"
df$color[df$parent == "MT"] = "lawngreen"
df$color[df$parent == "NL"] = "orange"
df$color[df$parent == "NO"] = "lightorange"
df$color[df$parent == "PL"] = "darkgrey"
df$color[df$parent == "PT"] = "lightpurple"
df$color[df$parent == "RO"] = "red"
df$color[df$parent == "SE"] = "lightred"
df$color[df$parent == "SI"] = "grey"
df$color[df$parent == "SK"] = "white"
df$color[df$parent == "UK"] = "red"
df$Region = iconv(df$Region, to = 'ASCII//TRANSLIT')
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
df$sum = ave(df$Count, df$Industry, FUN = sum)
df$share = round (df$Count*100/df$sum, digits = 2)
df.full = df
##
for (i in unique (df$Industry)) {
#i = "Drenthe"
df = subset (df.full, df.full$Industry == i)
df$Industry = NULL
# add variables
df$id = df$Region
df$value = df$Count
var = c("parent", "id", "value", "color", "share")
df = unique(df[, var])
df = df[complete.cases(df),]
r=i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "3-outputs/treemaps-techs"))
writeLines(all, paste0(r, ".html"))
setwd(paste0(dir2, "/treemaps-techs"))
writeLines(all, paste0(r, ".html"))
}
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
dir = "D:/Dropbox/2-private/1-asg/Projects/3-l'oréal/"
dir2 = "D:/Dropbox/2-private/PABalland.github.io/asg/loreal/"
# load different parts of html
setwd(paste0(dir, "3-outputs/treemaps/_source"))
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
setwd(paste0(dir, "2-analysis"))
df = as.matrix(read.csv2("1-bimodal-pat-p4.csv",
header = T,
check.names = F,
row.names = 1))
df = get.list (df)
# extract s3 fields
# read crosswalk
setwd(paste0(dir, "1-data"))
d = read.csv("0-S3-CPC.csv", sep = ";", check.names = F)
colnames (d) = c("KIA",	"S3",	"CPC",	"Description")
s3 = unique (d[, c("KIA",	"S3")])
s3$id = as.numeric(factor (unique (s3$S3)))
df = merge (df, s3, by.x = "Industry", by.y = "S3")
#
# back to higher level
#
df = df[, c("Region", "KIA", "Count")]
df = get.matrix (df)
df = get.list (df)
df$id = as.numeric(factor (unique (df$Region)))
df$parent = substr(df$Region, 0, 2)
df$color[df$parent == "AT"] = "lightgreen"
df$color[df$parent == "BE"] = "black"
df$color[df$parent == "BG"] = "white"
df$color[df$parent == "CH"] = "purple"
df$color[df$parent == "CY"] = "white"
df$color[df$parent == "CZ"] = "white"
df$color[df$parent == "DE"] = "yellow"
df$color[df$parent == "DK"] = "brown"
df$color[df$parent == "EE"] = "cyan"
df$color[df$parent == "EL"] = "darkred"
df$color[df$parent == "ES"] = "pink"
df$color[df$parent == "FI"] = "lightpink"
df$color[df$parent == "FR"] = "blue"
df$color[df$parent == "HR"] = "honeydew"
df$color[df$parent == "HU"] = "black"
df$color[df$parent == "IE"] = "green"
df$color[df$parent == "IS"] = "firebrick4"
df$color[df$parent == "IT"] = "lightblue"
df$color[df$parent == "LT"] = "deeppink"
df$color[df$parent == "LU"] = "gold"
df$color[df$parent == "LV"] = "magenta"
df$color[df$parent == "MT"] = "lawngreen"
df$color[df$parent == "NL"] = "orange"
df$color[df$parent == "NO"] = "lightorange"
df$color[df$parent == "PL"] = "darkgrey"
df$color[df$parent == "PT"] = "lightpurple"
df$color[df$parent == "RO"] = "red"
df$color[df$parent == "SE"] = "lightred"
df$color[df$parent == "SI"] = "grey"
df$color[df$parent == "SK"] = "white"
df$color[df$parent == "UK"] = "red"
df$Region = iconv(df$Region, to = 'ASCII//TRANSLIT')
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
df$sum = ave(df$Count, df$Industry, FUN = sum)
df$share = round (df$Count*100/df$sum, digits = 2)
df.full = df
##
for (i in unique (df$Industry)) {
#i = "Drenthe"
df = subset (df.full, df.full$Industry == i)
df$Industry = NULL
# add variables
df$id = df$Region
df$value = df$Count
var = c("parent", "id", "value", "color", "share")
df = unique(df[, var])
df = df[complete.cases(df),]
r=i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "3-outputs/treemaps-techs"))
writeLines(all, paste0(r, ".html"))
setwd(paste0(dir2, "/treemaps-techs"))
writeLines(all, paste0(r, ".html"))
}
