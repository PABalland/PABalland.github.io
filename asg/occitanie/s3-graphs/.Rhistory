as.matrix(read.csv2 ("3-reldens-pat-p4.csv", header = T, row.names = 1,
check.names = F)))
# read rca
y = as.matrix(read.csv2 ("1-bimodal-pat-p4.csv", header = T, row.names = 1,
check.names = F))
y = get.list (RCA(y, binary = F))
x = merge (x, y, by  = c("Region", "Industry"))
colnames(x) = c("Region", "Industry", "Rel", "RCA")
y = read.csv2("4-complexity.csv")[, c("ind", "new")]
colnames (y) = c("ind", "comp")
x = merge (x, y, by.x = "Industry", by.y = "ind")
# read crosswalk
setwd(paste0(dir, "1-data"))
d = read.csv("0-S3-CPC-clean.csv", sep = ";", check.names = F)
colnames (d) = c("KIA",	"S3",	"CPC",	"Description")
s3 = unique (d[, c("KIA",	"S3")])
df = merge (x, s3, by.x = "Industry", by.y = "S3")
df$parent = df$KIA
View(df)
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
library(DT)
library (stringr)
dir = "D:/Dropbox/2-private/1-asg/Projects/4-occitanie/"
dir2 = "D:/Dropbox/2-private/PABalland.github.io/asg/occitanie"
# load different parts of html
setwd(paste0(dir, "3-outputs/s3-graphs/_source"))
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
source ("prettyprint.df.R")
###
### FR62/81
###
setwd(paste0(dir, "2-analysis"))
x = get.list(
as.matrix(read.csv2 ("3-reldens-pat-p4.csv", header = T, row.names = 1,
check.names = F)))
# read rca
y = as.matrix(read.csv2 ("1-bimodal-pat-p4.csv", header = T, row.names = 1,
check.names = F))
y = get.list (RCA(y, binary = F))
x = merge (x, y, by  = c("Region", "Industry"))
colnames(x) = c("Region", "Industry", "Rel", "RCA")
y = read.csv2("4-complexity.csv")[, c("ind", "new")]
colnames (y) = c("ind", "comp")
x = merge (x, y, by.x = "Industry", by.y = "ind")
# read crosswalk
setwd(paste0(dir, "1-data"))
d = read.csv("0-S3-CPC-clean.csv", sep = ";", check.names = F)
colnames (d) = c("KIA",	"S3",	"CPC",	"Description")
s3 = unique (d[, c("KIA",	"S3")])
df = merge (x, s3, by.x = "Industry", by.y = "S3")
df$parent = df$KIA
df$color[df$parent == "Productions agricoles et agroalimentaires durables"] = "brown"
df$color[df$parent == "Mer et littoral"] = "lightblue"
df$color[df$parent == "Santé"] = "red"
df$color[df$parent == "Eau"] = "blue"
df$color[df$parent == "Matériaux et procédés pour l’aéronautique et industries de pointe"] = "grey"
df$color[df$parent == "Transition énergétique"] = "green"
df$color[df$parent == "Numérique – systèmes intelligents et chaîne de la donnée"] = "yellow"
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
#df$KIA = trimws(df$Domain.of.Science)
#df = df[rev(order(df$Region)),]
df.full = df
##
for (i in c("FR62", "FR81")) {
#i = "FR62"
df = subset (df.full, df.full$Region == i)
name = df$Region
#df$Region = NULL
# add variables
#df$parent = df$KIA
df$id = as.character (df$Industry)
df$id = str_replace_all(df$id, "[^[:alnum:]]", " ")
df$value = df$RCA
#df$parent = df$color
df$x = df$Rel
df$y = df$comp
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
df$id = factor(df$id)
r = i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "3-outputs/s3-graphs"))
writeLines(all, paste0(r, "-wo-names.html"))
setwd(paste0(dir2, "/s3-graphs"))
writeLines(all, paste0(r, "-wo-names.html"))
}
###
### OCCITANIE
###
setwd(paste0(dir, "2-analysis"))
x = get.list(
as.matrix(read.csv2 ("3-reldens-pat-occitanie-p4.csv", header = T, row.names = 1,
check.names = F)))
# read rca
y = as.matrix(read.csv2 ("1-bimodal-pat-occitanie-p4.csv", header = T, row.names = 1,
check.names = F))
y = get.list (RCA(y, binary = F))
x = merge (x, y, by  = c("Region", "Industry"))
colnames(x) = c("Region", "Industry", "Rel", "RCA")
y = read.csv2("4-complexity.csv")[, c("ind", "new")]
colnames (y) = c("ind", "comp")
x = merge (x, y, by.x = "Industry", by.y = "ind")
# read crosswalk
setwd(paste0(dir, "1-data"))
d = read.csv("0-S3-CPC-clean.csv", sep = ";", check.names = F)
colnames (d) = c("KIA",	"S3",	"CPC",	"Description")
s3 = unique (d[, c("KIA",	"S3")])
df = merge (x, s3, by.x = "Industry", by.y = "S3")
df$parent = df$KIA
df$color[df$parent == "Productions agricoles et agroalimentaires durables"] = "brown"
df$color[df$parent == "Mer et littoral"] = "lightblue"
df$color[df$parent == "Santé"] = "red"
df$color[df$parent == "Eau"] = "blue"
df$color[df$parent == "Matériaux et procédés pour l’aéronautique et industries de pointe"] = "grey"
df$color[df$parent == "Transition énergétique"] = "green"
df$color[df$parent == "Numérique – systèmes intelligents et chaîne de la donnée"] = "yellow"
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
#df$KIA = trimws(df$Domain.of.Science)
#df = df[rev(order(df$Region)),]
df.full = df
##
for (i in c("Occitanie")) {
#i = "FR62"
df = subset (df.full, df.full$Region == i)
name = df$Region
#df$Region = NULL
# add variables
#df$parent = df$KIA
df$id = as.character (df$Industry)
df$id = str_replace_all(df$id, "[^[:alnum:]]", " ")
df$value = df$RCA
#df$parent = df$color
df$x = df$Rel
df$y = df$comp
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
df$id = factor(df$id)
r = i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "3-outputs/s3-graphs"))
writeLines(all, paste0(r, "-wo-names.html"))
setwd(paste0(dir2, "/s3-graphs"))
writeLines(all, paste0(r, "-wo-names.html"))
}
df$id = as.numeric(df$id)
df
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
library(DT)
library (stringr)
dir = "D:/Dropbox/2-private/1-asg/Projects/4-occitanie/"
dir2 = "D:/Dropbox/2-private/PABalland.github.io/asg/occitanie"
# load different parts of html
setwd(paste0(dir, "3-outputs/s3-graphs/_source"))
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
source ("prettyprint.df.R")
###
### FR62/81
###
setwd(paste0(dir, "2-analysis"))
x = get.list(
as.matrix(read.csv2 ("3-reldens-pat-p4.csv", header = T, row.names = 1,
check.names = F)))
# read rca
y = as.matrix(read.csv2 ("1-bimodal-pat-p4.csv", header = T, row.names = 1,
check.names = F))
y = get.list (RCA(y, binary = F))
x = merge (x, y, by  = c("Region", "Industry"))
colnames(x) = c("Region", "Industry", "Rel", "RCA")
y = read.csv2("4-complexity.csv")[, c("ind", "new")]
colnames (y) = c("ind", "comp")
x = merge (x, y, by.x = "Industry", by.y = "ind")
# read crosswalk
setwd(paste0(dir, "1-data"))
d = read.csv("0-S3-CPC-clean.csv", sep = ";", check.names = F)
colnames (d) = c("KIA",	"S3",	"CPC",	"Description")
s3 = unique (d[, c("KIA",	"S3")])
df = merge (x, s3, by.x = "Industry", by.y = "S3")
df$parent = df$KIA
df$color[df$parent == "Productions agricoles et agroalimentaires durables"] = "brown"
df$color[df$parent == "Mer et littoral"] = "lightblue"
df$color[df$parent == "Santé"] = "red"
df$color[df$parent == "Eau"] = "blue"
df$color[df$parent == "Matériaux et procédés pour l’aéronautique et industries de pointe"] = "grey"
df$color[df$parent == "Transition énergétique"] = "green"
df$color[df$parent == "Numérique – systèmes intelligents et chaîne de la donnée"] = "yellow"
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
#df$KIA = trimws(df$Domain.of.Science)
#df = df[rev(order(df$Region)),]
df.full = df
##
for (i in c("FR62", "FR81")) {
#i = "FR62"
df = subset (df.full, df.full$Region == i)
name = df$Region
#df$Region = NULL
# add variables
#df$parent = df$KIA
df$id = as.character (df$Industry)
df$id = str_replace_all(df$id, "[^[:alnum:]]", " ")
df$value = df$RCA
#df$parent = df$color
df$x = df$Rel
df$y = df$comp
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
df$id2 = df$id
df$id = as.numeric(df$id)
r = i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "3-outputs/s3-graphs"))
writeLines(all, paste0(r, "-wo-names.html"))
setwd(paste0(dir2, "/s3-graphs"))
writeLines(all, paste0(r, "-wo-names.html"))
}
###
### OCCITANIE
###
setwd(paste0(dir, "2-analysis"))
x = get.list(
as.matrix(read.csv2 ("3-reldens-pat-occitanie-p4.csv", header = T, row.names = 1,
check.names = F)))
# read rca
y = as.matrix(read.csv2 ("1-bimodal-pat-occitanie-p4.csv", header = T, row.names = 1,
check.names = F))
y = get.list (RCA(y, binary = F))
x = merge (x, y, by  = c("Region", "Industry"))
colnames(x) = c("Region", "Industry", "Rel", "RCA")
y = read.csv2("4-complexity.csv")[, c("ind", "new")]
colnames (y) = c("ind", "comp")
x = merge (x, y, by.x = "Industry", by.y = "ind")
# read crosswalk
setwd(paste0(dir, "1-data"))
d = read.csv("0-S3-CPC-clean.csv", sep = ";", check.names = F)
colnames (d) = c("KIA",	"S3",	"CPC",	"Description")
s3 = unique (d[, c("KIA",	"S3")])
df = merge (x, s3, by.x = "Industry", by.y = "S3")
df$parent = df$KIA
df$color[df$parent == "Productions agricoles et agroalimentaires durables"] = "brown"
df$color[df$parent == "Mer et littoral"] = "lightblue"
df$color[df$parent == "Santé"] = "red"
df$color[df$parent == "Eau"] = "blue"
df$color[df$parent == "Matériaux et procédés pour l’aéronautique et industries de pointe"] = "grey"
df$color[df$parent == "Transition énergétique"] = "green"
df$color[df$parent == "Numérique – systèmes intelligents et chaîne de la donnée"] = "yellow"
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
#df$KIA = trimws(df$Domain.of.Science)
#df = df[rev(order(df$Region)),]
df.full = df
##
for (i in c("Occitanie")) {
#i = "FR62"
df = subset (df.full, df.full$Region == i)
name = df$Region
#df$Region = NULL
# add variables
#df$parent = df$KIA
df$id = as.character (df$Industry)
df$id = str_replace_all(df$id, "[^[:alnum:]]", " ")
df$value = df$RCA
#df$parent = df$color
df$x = df$Rel
df$y = df$comp
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
df$id2 = df$id
df$id = as.numeric(df$id)
r = i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "3-outputs/s3-graphs"))
writeLines(all, paste0(r, "-wo-names.html"))
setwd(paste0(dir2, "/s3-graphs"))
writeLines(all, paste0(r, "-wo-names.html"))
}
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
library(DT)
library (stringr)
dir = "D:/Dropbox/2-private/1-asg/Projects/4-occitanie/"
dir2 = "D:/Dropbox/2-private/PABalland.github.io/asg/occitanie"
# load different parts of html
setwd(paste0(dir, "3-outputs/s3-graphs/_source"))
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
source ("prettyprint.df.R")
###
### FR62/81
###
setwd(paste0(dir, "2-analysis"))
x = get.list(
as.matrix(read.csv2 ("3-reldens-pat-p4.csv", header = T, row.names = 1,
check.names = F)))
# read rca
y = as.matrix(read.csv2 ("1-bimodal-pat-p4.csv", header = T, row.names = 1,
check.names = F))
y = get.list (RCA(y, binary = F))
x = merge (x, y, by  = c("Region", "Industry"))
colnames(x) = c("Region", "Industry", "Rel", "RCA")
y = read.csv2("4-complexity.csv")[, c("ind", "new")]
colnames (y) = c("ind", "comp")
x = merge (x, y, by.x = "Industry", by.y = "ind")
# read crosswalk
setwd(paste0(dir, "1-data"))
d = read.csv("0-S3-CPC-clean.csv", sep = ";", check.names = F)
colnames (d) = c("KIA",	"S3",	"CPC",	"Description")
s3 = unique (d[, c("KIA",	"S3")])
df = merge (x, s3, by.x = "Industry", by.y = "S3")
df$parent = df$KIA
df$color[df$parent == "Productions agricoles et agroalimentaires durables"] = "brown"
df$color[df$parent == "Mer et littoral"] = "lightblue"
df$color[df$parent == "Santé"] = "red"
df$color[df$parent == "Eau"] = "blue"
df$color[df$parent == "Matériaux et procédés pour l’aéronautique et industries de pointe"] = "grey"
df$color[df$parent == "Transition énergétique"] = "green"
df$color[df$parent == "Numérique – systèmes intelligents et chaîne de la donnée"] = "yellow"
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
#df$KIA = trimws(df$Domain.of.Science)
#df = df[rev(order(df$Region)),]
df.full = df
##
i="FR62"
df = subset (df.full, df.full$Region == i)
name = df$Region
#df$Region = NULL
# add variables
#df$parent = df$KIA
df$id = as.character (df$Industry)
df$id = str_replace_all(df$id, "[^[:alnum:]]", " ")
df$value = df$RCA
#df$parent = df$color
df$x = df$Rel
df$y = df$comp
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
df$id2 = df$id
df$id = as.numeric(df$id)
df$id = as.numeric(as.character(df$id))
df$id=df$id2
df$id = as.numeric(as.character(df$id))
head(df)
df$id=df$id2
df$id = as.numeric(factor(df$id))
View(df)
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
library(DT)
library (stringr)
dir = "D:/Dropbox/2-private/1-asg/Projects/4-occitanie/"
dir2 = "D:/Dropbox/2-private/PABalland.github.io/asg/occitanie"
# load different parts of html
setwd(paste0(dir, "3-outputs/s3-graphs/_source"))
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
source ("prettyprint.df.R")
###
### FR62/81
###
setwd(paste0(dir, "2-analysis"))
x = get.list(
as.matrix(read.csv2 ("3-reldens-pat-p4.csv", header = T, row.names = 1,
check.names = F)))
# read rca
y = as.matrix(read.csv2 ("1-bimodal-pat-p4.csv", header = T, row.names = 1,
check.names = F))
y = get.list (RCA(y, binary = F))
x = merge (x, y, by  = c("Region", "Industry"))
colnames(x) = c("Region", "Industry", "Rel", "RCA")
y = read.csv2("4-complexity.csv")[, c("ind", "new")]
colnames (y) = c("ind", "comp")
x = merge (x, y, by.x = "Industry", by.y = "ind")
# read crosswalk
setwd(paste0(dir, "1-data"))
d = read.csv("0-S3-CPC-clean.csv", sep = ";", check.names = F)
colnames (d) = c("KIA",	"S3",	"CPC",	"Description")
s3 = unique (d[, c("KIA",	"S3")])
df = merge (x, s3, by.x = "Industry", by.y = "S3")
df$parent = df$KIA
df$color[df$parent == "Productions agricoles et agroalimentaires durables"] = "brown"
df$color[df$parent == "Mer et littoral"] = "lightblue"
df$color[df$parent == "Santé"] = "red"
df$color[df$parent == "Eau"] = "blue"
df$color[df$parent == "Matériaux et procédés pour l’aéronautique et industries de pointe"] = "grey"
df$color[df$parent == "Transition énergétique"] = "green"
df$color[df$parent == "Numérique – systèmes intelligents et chaîne de la donnée"] = "yellow"
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
#df$KIA = trimws(df$Domain.of.Science)
#df = df[rev(order(df$Region)),]
df.full = df
##
for (i in c("FR62", "FR81")) {
#i = "FR62"
df = subset (df.full, df.full$Region == i)
name = df$Region
#df$Region = NULL
# add variables
#df$parent = df$KIA
df$id = as.character (df$Industry)
df$id = str_replace_all(df$id, "[^[:alnum:]]", " ")
df$value = df$RCA
#df$parent = df$color
df$x = df$Rel
df$y = df$comp
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
df$id2 = df$id
df$id = as.numeric(factor(df$id))
r = i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "3-outputs/s3-graphs"))
writeLines(all, paste0(r, "-wo-names.html"))
setwd(paste0(dir2, "/s3-graphs"))
writeLines(all, paste0(r, "-wo-names.html"))
}
###
### OCCITANIE
###
setwd(paste0(dir, "2-analysis"))
x = get.list(
as.matrix(read.csv2 ("3-reldens-pat-occitanie-p4.csv", header = T, row.names = 1,
check.names = F)))
# read rca
y = as.matrix(read.csv2 ("1-bimodal-pat-occitanie-p4.csv", header = T, row.names = 1,
check.names = F))
y = get.list (RCA(y, binary = F))
x = merge (x, y, by  = c("Region", "Industry"))
colnames(x) = c("Region", "Industry", "Rel", "RCA")
y = read.csv2("4-complexity.csv")[, c("ind", "new")]
colnames (y) = c("ind", "comp")
x = merge (x, y, by.x = "Industry", by.y = "ind")
# read crosswalk
setwd(paste0(dir, "1-data"))
d = read.csv("0-S3-CPC-clean.csv", sep = ";", check.names = F)
colnames (d) = c("KIA",	"S3",	"CPC",	"Description")
s3 = unique (d[, c("KIA",	"S3")])
df = merge (x, s3, by.x = "Industry", by.y = "S3")
df$parent = df$KIA
df$color[df$parent == "Productions agricoles et agroalimentaires durables"] = "brown"
df$color[df$parent == "Mer et littoral"] = "lightblue"
df$color[df$parent == "Santé"] = "red"
df$color[df$parent == "Eau"] = "blue"
df$color[df$parent == "Matériaux et procédés pour l’aéronautique et industries de pointe"] = "grey"
df$color[df$parent == "Transition énergétique"] = "green"
df$color[df$parent == "Numérique – systèmes intelligents et chaîne de la donnée"] = "yellow"
df$Industry = iconv(df$Industry, to = 'ASCII//TRANSLIT')
df$parent = iconv(df$parent, to = 'ASCII//TRANSLIT')
#df$KIA = trimws(df$Domain.of.Science)
#df = df[rev(order(df$Region)),]
df.full = df
##
for (i in c("Occitanie")) {
#i = "FR62"
df = subset (df.full, df.full$Region == i)
name = df$Region
#df$Region = NULL
# add variables
#df$parent = df$KIA
df$id = as.character (df$Industry)
df$id = str_replace_all(df$id, "[^[:alnum:]]", " ")
df$value = df$RCA
#df$parent = df$color
df$x = df$Rel
df$y = df$comp
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
df$id2 = df$id
df$id = as.numeric(factor(df$id))
r = i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "3-outputs/s3-graphs"))
writeLines(all, paste0(r, "-wo-names.html"))
setwd(paste0(dir2, "/s3-graphs"))
writeLines(all, paste0(r, "-wo-names.html"))
}
library(webshot)
URL <- "http://rstudio.github.io/leaflet/"
# Might need a longer delay for all assets to display
webshot(URL, delay = 0.5)
install.packages("webshot")
library(webshot)
URL <- "http://rstudio.github.io/leaflet/"
# Might need a longer delay for all assets to display
webshot(URL, delay = 0.5)
