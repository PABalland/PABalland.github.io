df = merge (df, bim, by = "Industry")
df2 = subset (df, df$Region == "RestNL")[, c("Industry", "growth")]
colnames(df2)[2] <- "RestNL.growth"
df = merge (df, df2, by = c("Industry"))
df$difgrowth = df$growth-df$RestNL.growth
# CTR
setwd("D:/Dropbox/2-private/1-asg/Projects/2-rea/3-outputs")
pdf(file = "comp-growth-2010-2019.pdf",   # The directory you want to save the file in
width = 10, # The width of the plot in inches
height = 7) # The height of the plot in inches
plot (subset (df, df$Region=="CTR")$Complexity,
subset (df, df$Region=="CTR")$growth,
main="Complexity and growth (CTR - 2010-2019)",
xlab="Complexity",
ylab="Employment growth",
col = "blue")
text (subset (df, df$Region=="CTR")$Complexity,
subset (df, df$Region=="CTR")$growth,
subset (df, df$Region=="CTR")$Industry, cex = 0.5,
col = "blue")
# DTZ
plot (subset (df, df$Region=="DTZ")$Complexity,
subset (df, df$Region=="DTZ")$growth,
main="Complexity and growth (DTZ - 2010-2019)",
xlab="Complexity",
ylab="Employment growth",
col = "red")
text (subset (df, df$Region=="DTZ")$Complexity,
subset (df, df$Region=="DTZ")$growth,
subset (df, df$Region=="DTZ")$Industry, cex = 0.5,
col = "red")
# MidWest
plot (subset (df, df$Region=="MidWest")$Complexity,
subset (df, df$Region=="MidWest")$growth,
main="Complexity and growth (MidWest - 2010-2019)",
xlab="Complexity",
ylab="Employment growth",
col = "orange")
text (subset (df, df$Region=="MidWest")$Complexity,
subset (df, df$Region=="MidWest")$growth,
subset (df, df$Region=="MidWest")$Industry, cex = 0.5,
col = "orange")
setwd("D:/Dropbox/2-private/1-asg/Projects/2-rea/3-outputs")
write.csv2(df2, "5-complexity-growth-top.csv", row.names = F)
dtdata1 <- datatable (df2, filter = 'top')
DT::saveWidget(dtdata1, paste0("5-complexity-growth-top.html"))
dev.off()
options(stringsAsFactors=FALSE)
library (EconGeo)
library(DT)
rescale <- function(x) {
((x) - min(x, na.rm = TRUE))/(max(x, na.rm = TRUE) -
min(x, na.rm = TRUE)) * 100}
# define threshold
th = 1
setwd("D:/Dropbox/2-private/1-asg/Projects/2-rea/2-analysis")
### RELDENS TOP
# load data
d = "1-region-topsector-employment-"
d2 = "5-complexity-top"
df = NULL
# load data 2010
bim = as.matrix (read.csv2(paste0(d, "2010", ".csv"),
header = T, row.names = 1, check.names = F))
bim = get.list(bim)
colnames(bim)[3] <- "2010"
# load data 2019
bim2 = as.matrix (read.csv2(paste0(d, "2019", ".csv"),
header = T, row.names = 1, check.names = F))
bim2 = get.list(bim2)
colnames(bim2)[3] <- "2019"
df = merge (bim, bim2, by = c("Region", "Industry"))
df$growth = round (100*(df$`2019`-df$`2010`)/df$`2010`, digits = 2)
df = subset (df, df$`2010`>50)
df = subset (df, df$`2019`>50)
# comp
# load data 2010
bim = read.csv2(paste0(d2, ".csv"))
bim = subset (bim, bim$period=="2010")
bim$period = "NULL"
df = merge (df, bim, by = "Industry")
df2 = subset (df, df$Region == "RestNL")[, c("Industry", "growth")]
colnames(df2)[2] <- "RestNL.growth"
df = merge (df, df2, by = c("Industry"))
df$difgrowth = df$growth-df$RestNL.growth
# CTR
setwd("D:/Dropbox/2-private/1-asg/Projects/2-rea/3-outputs")
pdf(file = "comp-growth-2010-2019-no-lab.pdf",   # The directory you want to save the file in
width = 10, # The width of the plot in inches
height = 7) # The height of the plot in inches
plot (subset (df, df$Region=="CTR")$Complexity,
subset (df, df$Region=="CTR")$growth,
main="Complexity and growth (CTR - 2010-2019)",
xlab="Complexity",
ylab="Employment growth",
col = "blue")
# DTZ
plot (subset (df, df$Region=="DTZ")$Complexity,
subset (df, df$Region=="DTZ")$growth,
main="Complexity and growth (DTZ - 2010-2019)",
xlab="Complexity",
ylab="Employment growth",
col = "red")
# MidWest
plot (subset (df, df$Region=="MidWest")$Complexity,
subset (df, df$Region=="MidWest")$growth,
main="Complexity and growth (MidWest - 2010-2019)",
xlab="Complexity",
ylab="Employment growth",
col = "orange")
setwd("D:/Dropbox/2-private/1-asg/Projects/2-rea/3-outputs")
write.csv2(df, "5-complexity-growth-top.csv", row.names = F)
dtdata1 <- datatable (df, filter = 'top')
DT::saveWidget(dtdata1, paste0("5-complexity-growth-top.html"))
dev.off()
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/3-zuid-NL/3-outputs/3-s3/tech/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
# now for 2d but could also do 5 digits
setwd("D:/Dropbox/2-private/1-asg/Projects/2-rea/2-analysis")
df = read.csv2("7-data-model-top-p2017.csv")
head(df)
# read relatedness density 2019
d2 = "4-reldens-reg-top-"
bim = as.matrix (read.csv2(paste0(d2, "2019", ".csv"),
header = T, row.names = 1, check.names = F))
df2 = get.list (bim)
View(df2)
comp = read.csv2("5-complexity-top")
comp = read.csv2("5-complexity-top.csv")
View(comp)
comp = subset (comp, comp$period=="2019")
View(comp)
View(comp)
df2 = merge (df2, comp, by = "Industry", all = T)
View(df2)
foo <- data.frame(do.call('rbind', strsplit(as.character(df2$Industry),' | ',fixed=TRUE)))
df2$top = foo$X1
View(df2)
View(df)
# RCA
bim = as.matrix (read.csv2("2-region-topsector-rca-2019.csv",
header = T, row.names = 1, check.names = F))
bim = get.list (bim)
View(bim)
View(df2)
View(df)
colnames (bim)
colnames (bim)= c("Region", "Industry", "rca")
View(bim)
# read relatedness density 2019
rd = as.matrix (read.csv2(paste0("4-reldens-reg-top-", "2019", ".csv"),
header = T, row.names = 1, check.names = F))
rd = get.list (rd)
colnames (rd)= c("Region", "Industry", "reldens")
# RCA
rca = as.matrix (read.csv2("2-region-topsector-rca-2019.csv",
header = T, row.names = 1, check.names = F))
rca = get.list (rca)
colnames (rca)= c("Region", "Industry", "rca")
df2 = merge (rd, rca, by = c("Region", "Industry"))
View(df2)
# complexity
comp = read.csv2("5-complexity-top.csv")
comp = subset (comp, comp$period=="2019")
df2 = merge (df2, comp, by = "Industry", all = T)
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/3-zuid-NL/3-outputs/3-s3/tech/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
# now for 2d but could also do 5 digits
setwd("D:/Dropbox/2-private/1-asg/Projects/2-rea/2-analysis")
df = read.csv2("7-data-model-top-p2017.csv")
foo <- data.frame(do.call('rbind', strsplit(as.character(df$Industry),' | ',fixed=TRUE)))
df$top = foo$X1
# read relatedness density 2019
rd = as.matrix (read.csv2(paste0("4-reldens-reg-top-", "2019", ".csv"),
header = T, row.names = 1, check.names = F))
rd = get.list (rd)
colnames (rd)= c("Region", "Industry", "reldens")
# RCA
rca = as.matrix (read.csv2("2-region-topsector-rca-2019.csv",
header = T, row.names = 1, check.names = F))
rca = get.list (rca)
colnames (rca)= c("Region", "Industry", "rca")
df2 = merge (rd, rca, by = c("Region", "Industry"))
# complexity
comp = read.csv2("5-complexity-top.csv")
comp = subset (comp, comp$period=="2019")
df2 = merge (df2, comp, by = "Industry", all = T)
foo <- data.frame(do.call('rbind', strsplit(as.character(df2$Industry),' | ',fixed=TRUE)))
df2$top = foo$X1
df = df2
# add color
df$color[df$top == "Agri&food"] = "Blue"
df$color[df$top == "Chemie"] = "Red"
df$color[df$top == "Creatieve industrie"] = "Green"
df$color[df$top == "Energie"] = "Yellow"
df$color[df$top == "High tech systemen en materialen"] = "Orange"
df$color[df$top == "Life sciences & health"] = "Black"
df$color[df$top == "Logistiek"] = "Purple"
df$color[df$top == "Tuinbouw en uitgangsmaterialen sectoraal"] = "Brown"
df$color[df$top == "Water"] = "Darkred"
df$Main[df$rca>=1] = "RCA>1"
df$Main[df$rca<1] = "RCA<1"
df.full = df
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/3-zuid-NL/3-outputs/3-s3/tech/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
# now for 2d but could also do 5 digits
setwd("D:/Dropbox/2-private/1-asg/Projects/2-rea/2-analysis")
df = read.csv2("7-data-model-top-p2017.csv")
foo <- data.frame(do.call('rbind', strsplit(as.character(df$Industry),' | ',fixed=TRUE)))
df$top = foo$X1
# read relatedness density 2019
rd = as.matrix (read.csv2(paste0("4-reldens-reg-top-", "2019", ".csv"),
header = T, row.names = 1, check.names = F))
rd = get.list (rd)
colnames (rd)= c("Region", "Industry", "reldens")
# RCA
rca = as.matrix (read.csv2("2-region-topsector-rca-2019.csv",
header = T, row.names = 1, check.names = F))
rca = get.list (rca)
colnames (rca)= c("Region", "Industry", "rca")
df2 = merge (rd, rca, by = c("Region", "Industry"))
# complexity
comp = read.csv2("5-complexity-top.csv")
comp = subset (comp, comp$period=="2019")
df2 = merge (df2, comp, by = "Industry", all = T)
foo <- data.frame(do.call('rbind', strsplit(as.character(df2$Industry),' | ',fixed=TRUE)))
df2$top = foo$X1
df = df2
# add color
df$color[df$top == "Agri&food"] = "Blue"
df$color[df$top == "Chemie"] = "Red"
df$color[df$top == "Creatieve industrie"] = "Green"
df$color[df$top == "Energie"] = "Yellow"
df$color[df$top == "High tech systemen en materialen"] = "Orange"
df$color[df$top == "Life sciences & health"] = "Black"
df$color[df$top == "Logistiek"] = "Purple"
df$color[df$top == "Tuinbouw en uitgangsmaterialen sectoraal"] = "Brown"
df$color[df$top == "Water"] = "Darkred"
df$Main[df$rca>=1] = "RCA>1"
df$Main[df$rca<1] = "RCA<1"
df.full = df
##
for (i in unique (df$Region)) {
df = subset (df.full, df.full$Region == i)
# add variables
df$parent = df$top
df$id = df$Industry
df$value = df$rca
df$x = df$reldens
df$y = df$complexity
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
r = i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/2-rea/3-outputs")
writeLines(all, paste0("3-s3-top-nc-", r, ".html"))
setwd("D:/Dropbox/2-private/PABalland.github.io/asg/rea/s3-top")
writeLines(all, paste0(r, ".html"))
}
i
df = subset (df.full, df.full$Region == i)
# add variables
df$parent = df$top
df$id = df$Industry
df$value = df$rca
df$x = df$reldens
df$y = df$complexity
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
head(df)
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/3-zuid-NL/3-outputs/3-s3/tech/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
# now for 2d but could also do 5 digits
setwd("D:/Dropbox/2-private/1-asg/Projects/2-rea/2-analysis")
df = read.csv2("7-data-model-top-p2017.csv")
foo <- data.frame(do.call('rbind', strsplit(as.character(df$Industry),' | ',fixed=TRUE)))
df$top = foo$X1
# read relatedness density 2019
rd = as.matrix (read.csv2(paste0("4-reldens-reg-top-", "2019", ".csv"),
header = T, row.names = 1, check.names = F))
rd = get.list (rd)
colnames (rd)= c("Region", "Industry", "reldens")
# RCA
rca = as.matrix (read.csv2("2-region-topsector-rca-2019.csv",
header = T, row.names = 1, check.names = F))
rca = get.list (rca)
colnames (rca)= c("Region", "Industry", "rca")
df2 = merge (rd, rca, by = c("Region", "Industry"))
# complexity
comp = read.csv2("5-complexity-top.csv")
comp = subset (comp, comp$period=="2019")
df2 = merge (df2, comp, by = "Industry", all = T)
foo <- data.frame(do.call('rbind', strsplit(as.character(df2$Industry),' | ',fixed=TRUE)))
df2$top = foo$X1
df = df2
# add color
df$color[df$top == "Agri&food"] = "Blue"
df$color[df$top == "Chemie"] = "Red"
df$color[df$top == "Creatieve industrie"] = "Green"
df$color[df$top == "Energie"] = "Yellow"
df$color[df$top == "High tech systemen en materialen"] = "Orange"
df$color[df$top == "Life sciences & health"] = "Black"
df$color[df$top == "Logistiek"] = "Purple"
df$color[df$top == "Tuinbouw en uitgangsmaterialen sectoraal"] = "Brown"
df$color[df$top == "Water"] = "Darkred"
df$Main[df$rca>=1] = "RCA>1"
df$Main[df$rca<1] = "RCA<1"
df.full = df
##
for (i in unique (df$Region)) {
df = subset (df.full, df.full$Region == i)
# add variables
df$parent = df$top
df$id = df$Industry
df$value = df$rca
df$x = df$reldens
df$y = df$Complexity
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
r = i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/2-rea/3-outputs")
writeLines(all, paste0("3-s3-top-nc-", r, ".html"))
setwd("D:/Dropbox/2-private/PABalland.github.io/asg/rea/s3-top")
writeLines(all, paste0(r, ".html"))
}
# read relatedness density 2019
rd = as.matrix (read.csv2(paste0("4-reldens-reg-3D-", "2019", ".csv"),
header = T, row.names = 1, check.names = F))
rd = get.list (rd)
colnames (rd)= c("Region", "Industry", "reldens")
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/3-zuid-NL/3-outputs/3-s3/tech/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
# now for 2d but could also do 5 digits
setwd("D:/Dropbox/2-private/1-asg/Projects/2-rea/2-analysis")
df = read.csv2("7-data-model-p2017.csv")
df$complexity.old = df$complexity
comp = read.csv2("5-complexity-3d.csv")
comp = subset (comp, period == "2017")[, c("Industry", "Complexity")]
df= merge (df, comp, by = "Industry")
df$complexity = df$Complexity
# read relatedness density 2019
rd = as.matrix (read.csv2(paste0("4-reldens-reg-3D-", "2019", ".csv"),
header = T, row.names = 1, check.names = F))
rd = get.list (rd)
colnames (rd)= c("Region", "Industry", "reldens")
# RCA
rca = as.matrix (read.csv2("2-region-industry-rca-2019.csv",
header = T, row.names = 1, check.names = F))
rca = get.list (rca)
colnames (rca)= c("Region", "Industry", "rca")
df2 = merge (rd, rca, by = c("Region", "Industry"))
# complexity
comp = read.csv2("5-complexity-3d.csv")
comp = subset (comp, comp$period=="2019")
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/3-zuid-NL/3-outputs/3-s3/tech/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
# now for 2d but could also do 5 digits
setwd("D:/Dropbox/2-private/1-asg/Projects/2-rea/2-analysis")
df = read.csv2("7-data-model-p2017.csv")
df$complexity.old = df$complexity
comp = read.csv2("5-complexity-3d.csv")
comp = subset (comp, period == "2017")[, c("Industry", "Complexity")]
df= merge (df, comp, by = "Industry")
df$complexity = df$Complexity
# read relatedness density 2019
rd = as.matrix (read.csv2(paste0("4-reldens-reg-3D-", "2019", ".csv"),
header = T, row.names = 1, check.names = F))
rd = get.list (rd)
colnames (rd)= c("Region", "Industry", "reldens")
# RCA
rca = as.matrix (read.csv2("2-region-industry-rca-2019.csv",
header = T, row.names = 1, check.names = F))
rca = get.list (rca)
colnames (rca)= c("Region", "Industry", "rca")
df2 = merge (rd, rca, by = c("Region", "Industry"))
# complexity
comp = read.csv2("5-complexity-3d.csv")
comp = subset (comp, comp$period=="2019")
df2 = merge (df2, comp, by = "Industry", all = T)
foo <- data.frame(do.call('rbind', strsplit(as.character(df2$Industry),' | ',fixed=TRUE)))
df2$top = foo$X1
df = df2
View(df)
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/Projects/_completed/3-zuid-NL/3-outputs/3-s3/tech/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
# now for 2d but could also do 5 digits
setwd("D:/Dropbox/2-private/1-asg/Projects/2-rea/2-analysis")
df = read.csv2("7-data-model-p2017.csv")
df$complexity.old = df$complexity
comp = read.csv2("5-complexity-3d.csv")
comp = subset (comp, period == "2017")[, c("Industry", "Complexity")]
df= merge (df, comp, by = "Industry")
df$complexity = df$Complexity
# read relatedness density 2019
rd = as.matrix (read.csv2(paste0("4-reldens-reg-3D-", "2019", ".csv"),
header = T, row.names = 1, check.names = F))
rd = get.list (rd)
colnames (rd)= c("Region", "Industry", "reldens")
# RCA
rca = as.matrix (read.csv2("2-region-industry-rca-2019.csv",
header = T, row.names = 1, check.names = F))
rca = get.list (rca)
colnames (rca)= c("Region", "Industry", "rca")
df2 = merge (rd, rca, by = c("Region", "Industry"))
# complexity
comp = read.csv2("5-complexity-3d.csv")
comp = subset (comp, comp$period=="2019")
df2 = merge (df2, comp, by = "Industry", all = T)
foo <- data.frame(do.call('rbind', strsplit(as.character(df2$Industry),' | ',fixed=TRUE)))
df2$top = foo$X1
df = df2
# add color
# add color
df$color[df$rca>=1] = "Darkred"
df$color[df$rca<1]  = "Darkblue"
df$Main[df$rca>=1] = "RCA>1"
df$Main[df$rca<1] = "RCA<1"
df.full = df
##
for (i in unique (df$Region)) {
df = subset (df.full, df.full$Region == i)
# add variables
df$parent = df$Main
df$id = df$Industry
df$value = df$rca
df$x = df$reldens
df$y = df$Complexity
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
r = i
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/2-rea/3-outputs")
writeLines(all, paste0("3-s3-ind-", r, ".html"))
setwd("D:/Dropbox/2-private/PABalland.github.io/asg/rea/s3")
writeLines(all, paste0(r, ".html"))
}
i = "BTC"
# order amount, symbols, etc
symbol = paste0(i, "USDT")
price = as.numeric(jsonlite::fromJSON(content(
GET(paste0("https://api.binance.com/api/v3/ticker/price?symbol=", symbol)), "text"
))$price)
# load httr
library(httr)
i = "BTC"
# order amount, symbols, etc
symbol = paste0(i, "USDT")
price = as.numeric(jsonlite::fromJSON(content(
GET(paste0("https://api.binance.com/api/v3/ticker/price?symbol=", symbol)), "text"
))$price)
price
price = as.numeric(jsonlite::fromJSON(content(
GET(paste0("https://api.binance.com/api/v3/ticker/price?symbol=", symbol)), "text"
))$price)
price
