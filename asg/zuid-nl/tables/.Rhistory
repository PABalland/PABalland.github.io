df$parent = df$Main
df$id = df$Technology
df$value = df$RCA
df$x = df$Relatedness.Density
df$y = df$Complexity
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
r = NULL
r[i=="Zeeland"] = "zeeland"
r[i=="North Brabant"] = "north-brabant"
r[i=="Limburg"] = "limburg"
r[i=="NL4"] = "zuid-nl"
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/3-s3/tech/_JSON")
write_json(df, paste0(r, "-rca.JSON"))
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/3-s3/tech")
writeLines(all, paste0(r, ".html"))
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/s3/tech")
writeLines(all, paste0(r, ".html"))
}
### FOR TECH NUTS1
# Read bimodal
# now for 2d but could also do 5 digits
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/2-analysis")
df = read.csv2("tech-7-data-final-2d-and-4d-p5-nuts1.csv")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/0-data/1-clean")
ind.att = read.csv ("tech-att.csv", header = T, check.names = F)
ind.att = unique(ind.att[, c("label.1d", "lab.2d")])
df = merge (df, ind.att, by.x = "Technology", by.y = "lab.2d")
# add color
n <- length (unique (df$label.1d))
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
color.names = c("Red", "Blue", "Green", "Yellow", "Orange")
color = data.frame (num = 1:n,
color = color.names)
df$num = as.numeric (factor (df$label.1d))
df.full = merge (df, color, by = "num")
df.full$color[df.full$RCA>=1] = "Darkred"
df.full$color[df.full$RCA<1] = "Darkblue"
df.full$Main[df.full$RCA>=1] = "RCA>1"
df.full$Main[df.full$RCA<1] = "RCA<1"
##
i = "NL4"
df = subset (df.full, df.full$Region == i)
df$Region = NULL
# add variables
df$parent = df$Main
df$id = df$Technology
df$value = df$RCA
df$x = df$Relatedness.Density
df$y = df$Complexity
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
r = NULL
r[i=="Zeeland"] = "zeeland"
r[i=="North Brabant"] = "north-brabant"
r[i=="Limburg"] = "limburg"
r[i=="NL4"] = "zuid-nl"
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/3-s3/tech/_JSON")
write_json(df, paste0(r, "-rca.JSON"))
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/3-s3/tech")
writeLines(all, paste0(r, ".html"))
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/s3/tech")
writeLines(all, paste0(r, ".html"))
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/3-s3/ind/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# Read bimodal
# now for 2d but could also do 5 digits
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/2-analysis")
df = read.csv2("ind-7-data-final-2d-and-5d-2018.csv")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/0-data/1-clean")
ind.att = read.csv2 ("ind.att.csv", header = T, check.names = F)
ind.att = unique(ind.att[, c("Main", "Label")])
df = merge (df, ind.att, by.x = "Industry", by.y = "Label", all = T)
# add color
n <- length (unique (df$Main))
color = data.frame (num = 1:n,
color = "white")
df$num = as.numeric (factor (df$Main))
df.full = merge (df, color, by = "num", all = T)
df.full$color[df.full$RCA>=1] = "Darkred"
df.full$color[df.full$RCA<1] = "Darkblue"
df.full$Main[df.full$RCA>=1] = "RCA>1"
df.full$Main[df.full$RCA<1] = "RCA<1"
##
for (i in c("Noord-Brabant", "Limburg", "Zeeland")) {
#i = "Drenthe"
df = subset (df.full, df.full$Province == i)
df$Region = NULL
# add variables
df$parent = df$Main
df$id = df$Industry
df$value = df$RCA
df$x = df$Relatedness.Density
df$y = df$Complexity
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
r = NULL
r[i=="Zeeland"] = "zeeland"
r[i=="Noord-Brabant"] = "north-brabant"
r[i=="Limburg"] = "limburg"
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/3-s3/ind/_JSON")
write_json(df, paste0(r, "-rca.JSON"))
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/3-s3/ind")
writeLines(all, paste0(r, ".html"))
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/s3/ind")
writeLines(all, paste0(r, ".html"))
}
### FOR INDUSTRIES NUTS1
# Read bimodal
# now for 2d but could also do 5 digits
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/2-analysis")
df = read.csv2("ind-7-data-final-2d-and-5d-nuts1-2018.csv")
df = merge (df, ind.att, by.x = "Industry", by.y = "Label")
# add color
n <- length (unique (df$Main))
# add color
n <- length (unique (df$Main))
color = data.frame (num = 1:n,
color = "white")
df$num = as.numeric (factor (df$Main))
df.full = merge (df, color, by = "num", all = T)
df.full$color[df.full$RCA>=1] = "Darkred"
df.full$color[df.full$RCA<1] = "Darkblue"
df.full$Main[df.full$RCA>=1] = "RCA>1"
df.full$Main[df.full$RCA<1] = "RCA<1"
##
i = "NL4"
df = subset (df.full, df.full$Province == i)
df$Region = NULL
# add variables
df$parent = df$Main
df$id = df$Industry
df$value = df$RCA
df$x = df$Relatedness.Density
df$y = df$Complexity
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
r = NULL
r[i=="NL4"] = "zuid-nl"
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/3-s3/ind/_JSON")
write_json(df, paste0(r, "-rca.JSON"))
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/3-s3/ind")
writeLines(all, paste0(r, ".html"))
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/s3/ind")
writeLines(all, paste0(r, ".html"))
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
library(DT)
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/3-s3/kia/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
### HTML for tech identified
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/0-data/1-clean")
df = read.csv2 ("0-desc-S3-zuid-NL-techs.csv")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/3-s3/kia")
dtdata1 <- datatable (df, filter = 'top')
DT::saveWidget(dtdata1, paste0("kia-desc.html"))
### FOR TECHS
# Read bimodal
# now for 2d but could also do 5 digits
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/2-analysis")
df = read.csv2("tech-8-data-final-s3-p5.csv")
FF = 100/ max (df$RCA, na.rm = T)
KIA = c("Digitale technologie",
"Fotonica",
"Geavanceerde materialen",
"Chemische technologie",
"Nanotech en -electronica",
"Life Sciences/biotech")
for (i in KIA) {
df$KIA[grep(i, df$KIA)] = i}
df$color = "Red"
df$color[df$KIA=="Digitale technologie"] = "Blue"
df$color[df$KIA=="Fotonica"] = "Red"
df$color[df$KIA=="Geavanceerde materialen"] = "Darkred"
df$color[df$KIA=="Chemische technologie"] = "Yellow"
df$color[df$KIA=="Nanotech en -electronica"] = "Orange"
df$color[df$KIA=="Life Sciences/biotech"] = "Green"
df.full = df
##
for (i in c("Zeeland", "North Brabant", "Limburg")) {
df = subset (df.full, df.full$Region == i)
df$Region = NULL
# add variables
df$parent = df$KIA
df$id = df$S3
df$value = df$RCA
#df$parent = df$color
df$x = df$Relatedness.Density
df$y = df$Complexity
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
r = NULL
r[i=="Zeeland"] = "zeeland"
r[i=="North Brabant"] = "north-brabant"
r[i=="Limburg"] = "limburg"
r[i=="NL4"] = "zuid-nl"
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/3-s3/kia/_JSON")
write_json(df, paste0(r, ".JSON"))
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/3-s3/kia")
writeLines(all, paste0(r, ".html"))
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/s3/kia")
writeLines(all, paste0(r, ".html"))
}
### FOR TECH NUTS1
# Read bimodal
# now for 2d but could also do 5 digits
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/2-analysis")
df = read.csv2("tech-8-data-final-s3-nuts-1-p5.csv")
for (i in KIA) {
df$KIA[grep(i, df$KIA)] = i}
df$color = "Red"
df$color[df$KIA=="Digitale technologie"] = "Blue"
df$color[df$KIA=="Fotonica"] = "Red"
df$color[df$KIA=="Geavanceerde materialen"] = "Darkred"
df$color[df$KIA=="Chemische technologie"] = "Yellow"
df$color[df$KIA=="Nanotech en -electronica"] = "Orange"
df$color[df$KIA=="Life Sciences/biotech"] = "Green"
df.full = df
##
i = "NL4"
df.full$Province = as.character (df.full$Province)
df = subset (df.full, df.full$Province == i)
df$Province = NULL
# add variables
df$parent = df$KIA
df$id = df$S3
df$value = df$RCA
df$x = df$Relatedness.Density
df$y = df$Complexity
#df$parent = df$color
var = c("parent", "id", "value", "color", "x", "y")
df = unique(df[, var])
df = df[complete.cases(df),]
r = NULL
r[i=="Zeeland"] = "zeeland"
r[i=="North Brabant"] = "north-brabant"
r[i=="Limburg"] = "limburg"
r[i=="NL4"] = "zuid-nl"
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/3-s3/kia/_JSON")
write_json(df, paste0(r, ".JSON"))
p2 = toJSON(df)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/3-s3/kia")
writeLines(all, paste0(r, ".html"))
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/s3/kia")
writeLines(all, paste0(r, ".html"))
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/complementarity-maps")
library(jsonlite)
library (EconGeo)
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/4-complementarity-maps/_source")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
setwd("D:/Dropbox/2-private/1-asg/d3-maps")
nuts.d3 = read.csv2("unique-nuts2-d3maps.csv")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/2-analysis")
options(stringsAsFactors=FALSE)
x = get.list(
as.matrix(read.csv2 ("tech-4-reldens-4d.p5.csv", header = T, row.names = 1,
check.names = F)))
x$Region = as.character (x$Region)
tech = c("Precisielandbouw",
"Bio-landbouw",
"Zaadveredeling",
"Super-labfoods",
"Hernieuwbare energie - Composieten",
"Robotisering Chirurgie-opafstand",
"Medtech/beeldvorming",
"Nano-medicine",
"Carbon Capture",
"Robotics - Robots",
"Robotics - Autonomous robots",
"Recyclage",
"3D-printing/additive productie",
"Waste water treatment",
"GMO",
"Biosensors",
"Electrolizers voor Power2Molecule",
"Hernieuwbare energie - Windturbines",
"Klimaatbeheersing",
"Advanced maintenance (CMMS)",
"Digitale veiligheid",
"Personalised/precision medicine",
"Artificial intelligence",
"Energiebesparing hardware/datacenters - Photonic memory",
"Energieopslag - Photovoltaic",
"Elektrische mobiliteit - Battery technologies",
"Elektrische mobiliteit - EV charging systems",
"Smart grids")
# use make.names() function because complementarity are writeen
# with ... instead of spaces
tech = make.names(tech, unique=TRUE)
x$Industry = make.names(x$Industry, unique=TRUE)
x = x[x$Industry %in% tech,]
xs = x
comp = read.csv2 ("tech-5-reg-tech-reg-complementarity.p5.csv",
check.names=FALSE)
comp = comp[comp$Industry %in% tech,]
comp$Region[comp$Region=="UKI1"] = "UKI3"
comp$Region[comp$Region=="UKI2"] = "UKI5"
comp$region.that.adds[comp$region.that.adds=="UKI1"] = "UKI3"
comp$region.that.adds[comp$region.that.adds=="UKI2"] = "UKI5"
comp2 = subset (comp, comp$Region == "UKI3")
comp2$Region[comp2$Region=="UKI3"] = "UKI4"
comp = rbind (comp, comp2)
comp2 = subset (comp, comp$Region == "UKI5")
comp2$Region[comp2$Region=="UKI5"] = "UKI6"
comp = rbind (comp, comp2)
comp2 = subset (comp, comp$Region == "UKI5")
comp2$Region[comp2$Region=="UKI5"] = "UKI7"
comp = rbind (comp, comp2)
##
comp2 = subset (comp, comp$region.that.adds == "UKI3")
comp$region.that.adds[comp$region.that.adds=="UKI3"] = "UKI4"
comp = rbind (comp, comp2)
comp2 = subset (comp, comp$region.that.adds == "UKI5")
comp$region.that.adds[comp$region.that.adds=="UKI5"] = "UKI6"
comp = rbind (comp, comp2)
comp2 = subset (comp, comp$region.that.adds == "UKI5")
comp$region.that.adds[comp$region.that.adds=="UKI5"] = "UKI7"
comp = rbind (comp, comp2)
comp2 = subset (comp, comp$Region == "IS01")
comp2$Region[comp2$Region=="IS01"] = "IS00"
comp = rbind (comp, comp2)
comp2 = subset (comp, comp$region.that.adds == "IS01")
comp$region.that.adds[comp$region.that.adds=="IS01"] = "IS00"
comp = rbind (comp, comp2)
cs = comp
cs = merge (cs, nuts.d3, by.x = "region.that.adds", by.y = "nuts2")
for (r in c ("NL41", "NL42", "NL34")) {
xs = subset (cs, cs$Region == r)
for (i in unique (tech)) {
#i =  make.names("Energieopslag - Photovoltaic", unique=TRUE)
c = subset (xs, xs$Industry == i)
c = unique (c[, c("region.that.adds", "RD.added")])
colnames (c) = c("id", "population")
c = c[complete.cases(c),]
r[r=="NL34"] = "zeeland"
r[r=="NL41"] = "north-brabant"
r[r=="NL42"] = "limburg"
i = gsub("...", "-", i, fixed = TRUE)
i = gsub(".", "-", i, fixed = TRUE)
i = gsub("--", "-", i, fixed = TRUE)
i = gsub("X3D", "3d", i, fixed = TRUE)
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/4-complementarity-maps/_JSON")
write_json(c, paste0(r, "-", tolower(i), ".JSON"))
p2 = toJSON(c)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/4-complementarity-maps")
writeLines(all, paste0(r, "-", tolower(i), ".html"))
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/complementarity-maps")
writeLines(all, paste0(r, "-", tolower(i), ".html"))
}
}
### nuts1
setwd("D:/Dropbox/2-private/1-asg/d3-maps")
nuts.d3 = read.csv2("unique-nuts2-d3maps.csv")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/2-analysis")
options(stringsAsFactors=FALSE)
x = get.list(
as.matrix(read.csv2 ("tech-4-reldens-nuts1-4d.p5.csv", header = T, row.names = 1,
check.names = F)))
x$Region = as.character (x$Region)
x = x[x$Industry %in% tech,]
xs = x
comp = read.csv2 ("tech-5-reg-tech-reg-complementarity-nuts1.p5.csv",
check.names = F)
comp = comp[comp$Industry %in% tech,]
comp$Region[comp$Region=="UKI1"] = "UKI3"
comp$Region[comp$Region=="UKI2"] = "UKI5"
comp$region.that.adds[comp$region.that.adds=="UKI1"] = "UKI3"
comp$region.that.adds[comp$region.that.adds=="UKI2"] = "UKI5"
comp2 = subset (comp, comp$Region == "UKI3")
comp2$Region[comp2$Region=="UKI3"] = "UKI4"
comp = rbind (comp, comp2)
comp2 = subset (comp, comp$Region == "UKI5")
comp2$Region[comp2$Region=="UKI5"] = "UKI6"
comp = rbind (comp, comp2)
comp2 = subset (comp, comp$Region == "UKI5")
comp2$Region[comp2$Region=="UKI5"] = "UKI7"
comp = rbind (comp, comp2)
##
comp2 = subset (comp, comp$region.that.adds == "UKI3")
comp$region.that.adds[comp$region.that.adds=="UKI3"] = "UKI4"
comp = rbind (comp, comp2)
comp2 = subset (comp, comp$region.that.adds == "UKI5")
comp$region.that.adds[comp$region.that.adds=="UKI5"] = "UKI6"
comp = rbind (comp, comp2)
comp2 = subset (comp, comp$region.that.adds == "UKI5")
comp$region.that.adds[comp$region.that.adds=="UKI5"] = "UKI7"
comp = rbind (comp, comp2)
comp2 = subset (comp, comp$Region == "IS01")
comp2$Region[comp2$Region=="IS01"] = "IS00"
comp = rbind (comp, comp2)
comp2 = subset (comp, comp$region.that.adds == "IS01")
comp$region.that.adds[comp$region.that.adds=="IS01"] = "IS00"
comp = rbind (comp, comp2)
cs = comp
cs = merge (cs, nuts.d3, by.x = "region.that.adds", by.y = "nuts2")
cs = subset (cs, Region == "NL41" | Region == "NL4")
c = subset (c, cs$region.that.adds != "NL42")
c = subset (c, cs$region.that.adds != "NL34")
c$Region[c$Region=="NL41"] = "NL4"
for (i in unique (tech)) {
c = subset (cs, cs$Industry == i)
c = unique (c[, c("region.that.adds", "RD.added")])
colnames (c) = c("id", "population")
c = c[complete.cases(c),]
r = "zuid-nl"
i = gsub("...", "-", i, fixed = TRUE)
i = gsub(".", "-", i, fixed = TRUE)
i = gsub("--", "-", i, fixed = TRUE)
i = gsub("X3D", "3d", i, fixed = TRUE)
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/4-complementarity-maps/_JSON")
write_json(c, paste0(r, "-", tolower(i), ".JSON"))
p2 = toJSON(c)
all = paste (p1, p2, p3, collapse="\n")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/4-complementarity-maps")
writeLines(all, paste0(r, "-", tolower(i), ".html"))
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/complementarity-maps")
writeLines(all, paste0(r, "-", tolower(i), ".html"))
}
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/tables")
options(stringsAsFactors=FALSE)
library(jsonlite)
library(EconGeo)
library(RColorBrewer)
library (DT)
# TECH
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/2-analysis")
df = read.csv2("tech-7-data-final-2d-p5.csv")
dtdata1 <- datatable (df, filter = 'top')
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/5-tables")
DT::saveWidget(dtdata1, "nuts2-tech-p5.html")
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/tables")
DT::saveWidget(dtdata1, "nuts2-tech-p5.html")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/2-analysis")
df = read.csv2("tech-7-data-final-2d-p4.csv")
dtdata1 <- datatable (df, filter = 'top')
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/5-tables")
DT::saveWidget(dtdata1, "nuts2-tech-p4.html")
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/tables")
DT::saveWidget(dtdata1, "nuts2-tech-p4.html")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/2-analysis")
df = read.csv2("tech-7-data-final-2d-and-4d-p5-nuts1.csv")
dtdata1 <- datatable (df, filter = 'top')
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/5-tables")
DT::saveWidget(dtdata1, "nuts1-tech-p5.html")
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/tables")
DT::saveWidget(dtdata1, "nuts1-tech-p5.html")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/2-analysis")
df = read.csv2("tech-7-data-final-2d-and-4d-p4-nuts1.csv")
dtdata1 <- datatable (df, filter = 'top')
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/5-tables")
DT::saveWidget(dtdata1, "nuts1-tech-p4.html")
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/tables")
DT::saveWidget(dtdata1, "nuts1-tech-p4.html")
### INDUSTRIES
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/2-analysis")
df = read.csv2("ind-7-data-final-2d-and-5d-2018.csv")
dtdata1 <- datatable (df, filter = 'top')
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/5-tables")
DT::saveWidget(dtdata1, "nuts2-ind-2018.html")
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/tables")
DT::saveWidget(dtdata1, "nuts2-ind-2018.html")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/2-analysis")
df = read.csv2("ind-7-data-final-2d-and-5d-2014.csv")
dtdata1 <- datatable (df, filter = 'top')
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/5-tables")
DT::saveWidget(dtdata1, "nuts2-ind-2014.html")
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/tables")
DT::saveWidget(dtdata1, "nuts2-ind-2014.html")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/2-analysis")
df = read.csv2("ind-7-data-final-2d-and-5d-nuts1-2018.csv")
dtdata1 <- datatable (df, filter = 'top')
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/5-tables")
DT::saveWidget(dtdata1, "nuts1-ind-2018.html")
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/tables")
DT::saveWidget(dtdata1, "nuts1-ind-2018.html")
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/2-analysis")
df = read.csv2("ind-7-data-final-2d-and-5d-nuts1-2014.csv")
dtdata1 <- datatable (df, filter = 'top')
setwd("D:/Dropbox/2-private/1-asg/Projects/3-zuid-NL/3-outputs/5-tables")
DT::saveWidget(dtdata1, "nuts1-ind-2014.html")
setwd("D:/Dropbox/2-private/1-asg/sites/PABalland.github.io/asg/zuid-nl/tables")
DT::saveWidget(dtdata1, "nuts1-ind-2014.html")
