df$color[df$ctry == "US"] = "red"
df$color[df$ctry == "JP"] = "yellow"
df$color[df$ctry == "DE"] = "green"
df$color[df$ctry == "FR"] = "blue"
df$color[df$ctry == "KR"] = "lightgreen"
df$color[df$ctry == "UK"] = "lightred"
df$color[df$ctry == "SE"] = "lightorange"
df$color[df$ctry == "CA"] = "lightgrey"
df$color[df$ctry == "NL"] = "black"
df$color[df$ctry == "IL"] = "grey"
df2 = df[, c("id", "x", "y", "label", "color")]
p2 = toJSON(df2)
i = iconv(i, to = 'ASCII//TRANSLIT')
i = gsub(" ", "-", i, fixed = TRUE)
i = gsub("/", "-", i, fixed = TRUE)
i = gsub(",", "-", i, fixed = TRUE)
i = gsub("(", "-", i, fixed = TRUE)
i = gsub(")", "", i, fixed = TRUE)
i = gsub("--", "-", i, fixed = TRUE)
i = gsub("-.", ".", i, fixed = TRUE)
i = tolower (i)
# line chart
all = paste (p1, p2, p3.l, collapse="\n")
setwd(paste0(dir, "/3-outputs/velocity"))
writeLines(all, paste0("velocity-", i, ".html"))
#setwd(paste0(web))
#writeLines(all, paste0("velocity-", i, ".html"))
# stacked area
all = paste (p1, p2, p3.s, collapse="\n")
setwd(paste0(dir, "/3-outputs/velocity"))
writeLines(all, paste0("stacked-", i, ".html"))
#setwd(paste0(web))
#writeLines(all, paste0("stacked-", i, ".html"))
# stacked area (%)
df2$sumyear = ave(df2$y, df2$x, FUN = sum)
df2$y = (100*df2$y)/df2$sumyear
df2 = df2[, c("id", "x", "y", "label", "color")]
p2 = toJSON(df2)
all = paste (p1, p2, p3.s, collapse="\n")
setwd(paste0(dir, "/3-outputs/velocity"))
writeLines(all, paste0("stacked-pc-", i, ".html"))
setwd(paste0(web, "/velocity")) # save only this one online
writeLines(all, paste0(i, ".html"))
write.csv2(df2, paste0(i, ".csv"), row.names = F)
}
df2 = df2[order(df2$y),]
head(df2)
df2 = df2[-order(df2$y),]
head(df2)
df2 = df[, c("id", "x", "y", "label", "color")]
df2 = df2[order(-df2$y),]
head(df2)
i
df = subset (dfs, dfs$priority == i)
df$id = df$ctry
df$x = df$year
df$y = df$count
df$label = paste0(df$id, " : ", df$count, " patents in ", df$year)
df$label = df$id
df$color = "lightblue"
df$color[df$ctry == "CN"] = "orange"
df$color[df$ctry == "US"] = "red"
df$color[df$ctry == "JP"] = "yellow"
df$color[df$ctry == "DE"] = "green"
df$color[df$ctry == "FR"] = "blue"
df$color[df$ctry == "KR"] = "lightgreen"
df$color[df$ctry == "UK"] = "lightred"
df$color[df$ctry == "SE"] = "lightorange"
df$color[df$ctry == "CA"] = "lightgrey"
df$color[df$ctry == "NL"] = "black"
df$color[df$ctry == "IL"] = "grey"
df2 = df[, c("id", "x", "y", "label", "color")]
df2 = df2[order(-df2$y),]
p2 = toJSON(df2)
i = iconv(i, to = 'ASCII//TRANSLIT')
i = gsub(" ", "-", i, fixed = TRUE)
i = gsub("/", "-", i, fixed = TRUE)
i = gsub(",", "-", i, fixed = TRUE)
i = gsub("(", "-", i, fixed = TRUE)
i = gsub(")", "", i, fixed = TRUE)
i = gsub("--", "-", i, fixed = TRUE)
i = gsub("-.", ".", i, fixed = TRUE)
i = tolower (i)
# line chart
all = paste (p1, p2, p3.l, collapse="\n")
setwd(paste0(dir, "/3-outputs/velocity"))
writeLines(all, paste0("velocity-", i, ".html"))
#setwd(paste0(web))
#writeLines(all, paste0("velocity-", i, ".html"))
# stacked area
all = paste (p1, p2, p3.s, collapse="\n")
setwd(paste0(dir, "/3-outputs/velocity"))
writeLines(all, paste0("stacked-", i, ".html"))
#setwd(paste0(web))
#writeLines(all, paste0("stacked-", i, ".html"))
# stacked area (%)
df2$sumyear = ave(df2$y, df2$x, FUN = sum)
df2$y = (100*df2$y)/df2$sumyear
df2 = df2[, c("id", "x", "y", "label", "color")]
p2 = toJSON(df2)
all = paste (p1, p2, p3.s, collapse="\n")
setwd(paste0(dir, "/3-outputs/velocity"))
writeLines(all, paste0("stacked-pc-", i, ".html"))
setwd(paste0(web, "/velocity")) # save only this one online
writeLines(all, paste0(i, ".html"))
write.csv2(df2, paste0(i, ".csv"), row.names = F)
head(df2)
options(stringsAsFactors=FALSE)
library (jsonlite)
library (EconGeo)
library (RColorBrewer)
library (data.table)
library (dplyr)
dir  = "D:/Dropbox/2-private/1-asg/1-production/2-continental" # for analysis
dir.regpat = "D:/Dropbox/2-private/1-asg/1-production/_DATA/PATENTS/REGPAT" # for latest regpat version
web = "D:/Dropbox/2-private/PABalland.github.io/asg/continental"
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/1-production/_SOURCE/line-plot")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3.l = paste(readLines("part-3.html"), collapse="\n") # load line plot
setwd("D:/Dropbox/2-private/1-asg/1-production/_SOURCE/stacked")
p3.s = paste(readLines("part-3.html"), collapse="\n") # load stacked area
# read priorities
setwd(paste0(dir, "/1-data"))
df = fread ("pctnb-prio.csv", sep = ",", header = T)
# read inv info
setwd(dir.regpat)
inv = fread ("pctnb-inv-reg.csv", sep = ",", header = T)
inv$ctry = substr(inv$reg_code, 0, 2)
inv = inv[, c("pct_nbr", "ctry")]
inv = inv %>% distinct ()
df = inner_join(df, inv, by = "pct_nbr")
df$year = as.numeric(substr(df$pct_nbr, 3, 6))
df = subset (df, df$year >= 2004) # select period
df$freq = 1
df$ID = paste0(df$year, df$ctry, df$priority)
df$count = ave(df$freq, df$ID, FUN = sum)
df = df[, c("priority", "year", "ctry", "count")]
df = df %>% distinct()
dfs = df
for (i in unique (dfs$priority)) {
#i = "Head-up displays"
df = subset (dfs, dfs$priority == i)
df$id = df$ctry
df$x = df$year
df$y = df$count
df$label = paste0(df$id, " : ", df$count, " patents in ", df$year)
df$label = df$id
df$color = "lightblue"
df$color[df$ctry == "CN"] = "orange"
df$color[df$ctry == "US"] = "red"
df$color[df$ctry == "JP"] = "yellow"
df$color[df$ctry == "DE"] = "green"
df$color[df$ctry == "FR"] = "blue"
df$color[df$ctry == "KR"] = "lightgreen"
df$color[df$ctry == "UK"] = "lightred"
df$color[df$ctry == "SE"] = "lightorange"
df$color[df$ctry == "CA"] = "lightgrey"
df$color[df$ctry == "NL"] = "black"
df$color[df$ctry == "IL"] = "grey"
df2 = df[, c("id", "x", "y", "label", "color")]
df2 = df2[order(-df2$y),]
p2 = toJSON(df2)
i = iconv(i, to = 'ASCII//TRANSLIT')
i = gsub(" ", "-", i, fixed = TRUE)
i = gsub("/", "-", i, fixed = TRUE)
i = gsub(",", "-", i, fixed = TRUE)
i = gsub("(", "-", i, fixed = TRUE)
i = gsub(")", "", i, fixed = TRUE)
i = gsub("--", "-", i, fixed = TRUE)
i = gsub("-.", ".", i, fixed = TRUE)
i = tolower (i)
# line chart
all = paste (p1, p2, p3.l, collapse="\n")
setwd(paste0(dir, "/3-outputs/velocity"))
writeLines(all, paste0("velocity-", i, ".html"))
#setwd(paste0(web))
#writeLines(all, paste0("velocity-", i, ".html"))
# stacked area
all = paste (p1, p2, p3.s, collapse="\n")
setwd(paste0(dir, "/3-outputs/velocity"))
writeLines(all, paste0("stacked-", i, ".html"))
#setwd(paste0(web))
#writeLines(all, paste0("stacked-", i, ".html"))
# stacked area (%)
df2$sumyear = ave(df2$y, df2$x, FUN = sum)
df2$y = (100*df2$y)/df2$sumyear
df2 = df2[, c("id", "x", "y", "label", "color")]
p2 = toJSON(df2)
all = paste (p1, p2, p3.s, collapse="\n")
setwd(paste0(dir, "/3-outputs/velocity"))
writeLines(all, paste0("stacked-pc-", i, ".html"))
setwd(paste0(web, "/velocity")) # save only this one online
writeLines(all, paste0(i, ".html"))
write.csv2(df2, paste0(i, ".csv"), row.names = F)
}
options(stringsAsFactors=FALSE)
library (jsonlite)
library (EconGeo)
library (RColorBrewer)
library (data.table)
library (dplyr)
dir  = "D:/Dropbox/2-private/1-asg/1-production/2-continental" # for analysis
dir.regpat = "D:/Dropbox/2-private/1-asg/1-production/_DATA/PATENTS/REGPAT" # for latest regpat version
web = "D:/Dropbox/2-private/PABalland.github.io/asg/continental"
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/1-production/_SOURCE/line-plot")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3.l = paste(readLines("part-3.html"), collapse="\n") # load line plot
setwd("D:/Dropbox/2-private/1-asg/1-production/_SOURCE/stacked")
p3.s = paste(readLines("part-3.html"), collapse="\n") # load stacked area
# read priorities
setwd(paste0(dir, "/1-data"))
df = fread ("pctnb-prio.csv", sep = ",", header = T)
# read inv info
setwd(dir.regpat)
inv = fread ("pctnb-inv-reg.csv", sep = ",", header = T)
inv$ctry = substr(inv$reg_code, 0, 2)
inv = inv[, c("pct_nbr", "ctry")]
inv = inv %>% distinct ()
df = inner_join(df, inv, by = "pct_nbr")
df$year = as.numeric(substr(df$pct_nbr, 3, 6))
df = subset (df, df$year >= 2004) # select period
df$freq = 1
df$ID = paste0(df$year, df$ctry, df$priority)
df$count = ave(df$freq, df$ID, FUN = sum)
df = df[, c("priority", "year", "ctry", "count")]
df = df %>% distinct()
dfs = df
for (i in unique (dfs$priority)) {
#i = "Head-up displays"
df = subset (dfs, dfs$priority == i)
df$id = df$ctry
df$x = df$year
df$y = df$count
df$label = paste0(df$id, " : ", df$count, " patents in ", df$year)
df$label = df$id
df$color = "lightblue"
df$color[df$ctry == "CN"] = "orange"
df$color[df$ctry == "US"] = "red"
df$color[df$ctry == "JP"] = "yellow"
df$color[df$ctry == "DE"] = "green"
df$color[df$ctry == "FR"] = "blue"
df$color[df$ctry == "KR"] = "lightgreen"
df$color[df$ctry == "UK"] = "lightred"
df$color[df$ctry == "SE"] = "lightorange"
df$color[df$ctry == "CA"] = "lightgrey"
df$color[df$ctry == "NL"] = "black"
df$color[df$ctry == "IL"] = "grey"
df2 = df[, c("id", "x", "y", "label", "color")]
df2 = df2[order(-df2$y),]
p2 = toJSON(df2)
i = iconv(i, to = 'ASCII//TRANSLIT')
i = gsub(" ", "-", i, fixed = TRUE)
i = gsub("/", "-", i, fixed = TRUE)
i = gsub(",", "-", i, fixed = TRUE)
i = gsub("(", "-", i, fixed = TRUE)
i = gsub(")", "", i, fixed = TRUE)
i = gsub("--", "-", i, fixed = TRUE)
i = gsub("-.", ".", i, fixed = TRUE)
i = tolower (i)
# line chart
all = paste (p1, p2, p3.l, collapse="\n")
setwd(paste0(dir, "/3-outputs/velocity"))
writeLines(all, paste0("velocity-", i, ".html"))
#setwd(paste0(web))
#writeLines(all, paste0("velocity-", i, ".html"))
# stacked area
all = paste (p1, p2, p3.s, collapse="\n")
setwd(paste0(dir, "/3-outputs/velocity"))
writeLines(all, paste0("stacked-", i, ".html"))
#setwd(paste0(web))
#writeLines(all, paste0("stacked-", i, ".html"))
# stacked area (%)
df2$sumyear = ave(df2$y, df2$x, FUN = sum)
df2$count = df2$y
df2$y = (100*df2$y)/df2$sumyear
df2 = df2[, c("id", "x", "y", "label", "color", "count")]
p2 = toJSON(df2)
all = paste (p1, p2, p3.s, collapse="\n")
setwd(paste0(dir, "/3-outputs/velocity"))
writeLines(all, paste0("stacked-pc-", i, ".html"))
setwd(paste0(web, "/velocity")) # save only this one online
writeLines(all, paste0(i, ".html"))
write.csv2(df2, paste0(i, ".csv"), row.names = F)
}
options(stringsAsFactors=FALSE)
library (jsonlite)
library (EconGeo)
library (RColorBrewer)
library (data.table)
library (dplyr)
dir  = "D:/Dropbox/2-private/1-asg/1-production/2-continental" # for analysis
dir.regpat = "D:/Dropbox/2-private/1-asg/1-production/_DATA/PATENTS/REGPAT" # for latest regpat version
web = "D:/Dropbox/2-private/PABalland.github.io/asg/continental"
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/1-production/_SOURCE/line-plot")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3.l = paste(readLines("part-3.html"), collapse="\n") # load line plot
setwd("D:/Dropbox/2-private/1-asg/1-production/_SOURCE/stacked")
p3.s = paste(readLines("part-3.html"), collapse="\n") # load stacked area
# read priorities
setwd(paste0(dir, "/1-data"))
df = fread ("pctnb-prio.csv", sep = ",", header = T)
df$year = as.numeric(substr(df$pct_nbr, 3, 6))
df = subset (df, df$year >= 2004) # select period
df$freq = 1
df$ID = paste0(df$priority, df$year)
df$count = ave(df$freq, df$ID, FUN = sum)
df = df[, c("priority", "year", "count")]
df = df %>% distinct()
df$id = df$priority
df$x = df$year
df$y = df$count
df$label = paste0(df$id, " : ", df$count, " patents in ", df$year)
df$label = df$id
df$color = "blue"
df2 = df[, c("id", "x", "y", "label", "color")]
p2 = toJSON(df2)
# line chart
all = paste (p1, p2, p3.l, collapse="\n")
setwd(paste0(dir, "/3-outputs/velocity"))
writeLines(all, "velocity.html")
setwd(paste0(web, "/velocity")) # save only this one online
writeLines(all, "all.html")
write.csv2(df2, "all.csv", row.names = F)
# stacked area
all = paste (p1, p2, p3.s, collapse="\n")
setwd(paste0(dir, "/3-outputs/velocity"))
writeLines(all, "stacked.html")
#setwd(paste0(web))
#writeLines(all, "stacked.html")
# stacked area (%)
df2$sumyear = ave(df2$y, df2$x, FUN = sum)
df2$y = (100*df2$y)/df2$sumyear
df2 = df2[, c("id", "x", "y", "label", "color")]
p2 = toJSON(df2)
all = paste (p1, p2, p3.s, collapse="\n")
setwd(paste0(dir, "/3-outputs/velocity"))
writeLines(all, "stacked-pc.html")
#setwd(paste0(web))
#writeLines(all, "stacked-pc.html")
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/1-production/_SOURCE/treemaps")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3-patents-applicants.html"), collapse="\n") #after json data
setwd(paste0(dir, "/3-outputs/treemaps/applicants"))
options(stringsAsFactors=FALSE)
library (jsonlite)
library (EconGeo)
library (RColorBrewer)
library (data.table)
library (dplyr)
dir  = "D:/Dropbox/2-private/1-asg/1-production/2-continental" # for analysis
dir.regpat = "D:/Dropbox/2-private/1-asg/1-production/_DATA/PATENTS/REGPAT" # for latest regpat version
web = "D:/Dropbox/2-private/PABalland.github.io/asg/continental"
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/1-production/_SOURCE/treemaps")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3-patents-applicants.html"), collapse="\n") #after json data
# read priorities
setwd(paste0(dir, "/1-data"))
df = fread ("pctnb-prio.csv", sep = ",", header = T)
# read app info
setwd(dir.regpat)
app = fread ("pctnb-app-reg.csv", sep = ",", header = T)
app$ctry = substr(app$reg_code, 0, 2)
app = app %>% distinct ()
df = inner_join(df, app, by = "pct_nbr")
df$year = as.numeric(substr(df$pct_nbr, 3, 6))
df = subset (df, df$year >= 2017) # select period
df$year = NULL
df$freq = 1
df$ID = paste0(df$priority, df$app_name)
df$count = ave(df$freq, df$ID, FUN = sum)
df = df[, c("priority", "app_name", "count", "ctry")]
df = df %>% distinct ()
df$region = df$priority
df$sum = ave(df$count, df$priority, FUN = sum)
df$share = round (df$count*100/df$sum, digits = 2)
df$count.all = ave(df$count, df$app_name, FUN = sum)
df$sum.all = sum(df$count)
df$shareall = round (df$count.all*100/df$sum.all, digits = 2)
for (i in unique (df$region)) {
#i = "Head-up displays"
sub = subset (df, df$region == i)
sub$id = sub$app_name
sub$value = sub$count
sub$color = "lightblue"
sub$color[sub$ctry == "CN"] = "orange"
sub$color[sub$ctry == "US"] = "red"
sub$color[sub$ctry == "JP"] = "yellow"
sub$color[sub$ctry == "DE"] = "green"
sub$color[sub$ctry == "FR"] = "blue"
sub$color[sub$ctry == "KR"] = "lightgreen"
sub$color[sub$ctry == "UK"] = "lightred"
sub$color[sub$ctry == "SE"] = "lightorange"
sub$color[sub$ctry == "CA"] = "lightgrey"
sub$color[sub$ctry == "NL"] = "black"
sub$color[sub$ctry == "IL"] = "grey"
sub$parent = sub$ctry
sub$rca = 0
sub = unique(sub[,  c("parent", "id", "value", "color", "share", "rca", "shareall", "ctry")])
sub = sub[complete.cases(sub),]
p2 = toJSON(sub)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "/3-outputs/treemaps/applicants"))
i = iconv(i, to = 'ASCII//TRANSLIT')
i = gsub(" ", "-", i, fixed = TRUE)
i = gsub("/", "-", i, fixed = TRUE)
i = gsub(",", "-", i, fixed = TRUE)
i = gsub("(", "-", i, fixed = TRUE)
i = gsub(")", "", i, fixed = TRUE)
i = gsub("--", "-", i, fixed = TRUE)
i = gsub("-.", ".", i, fixed = TRUE)
i = tolower (i)
writeLines(all, paste0(i, ".html"))
setwd(paste0(web, "/treemaps/applicants"))
writeLines(all, paste0(i, ".html"))
}
df = df[, c("priority", "app_name", "count")]
setwd(paste0(web, "/treemaps/applicants"))
write.csv2(df, "applicants.csv", row.names = F)
#df = subset (df, df$count>1)
#setwd(paste0(dir, "/3-outputs/treemaps/assignees"))
#dtdata1 <- datatable (df, filter = 'top')
#DT::saveWidget(dtdata1, "inventors.html")
#setwd(paste0(web, "/treemaps/assignees"))
#DT::saveWidget(dtdata1, "inventors.html")
options(stringsAsFactors=FALSE)
library (jsonlite)
library (EconGeo)
library (RColorBrewer)
library (data.table)
library (dplyr)
dir  = "D:/Dropbox/2-private/1-asg/1-production/2-continental" # for analysis
dir.regpat = "D:/Dropbox/2-private/1-asg/1-production/_DATA/PATENTS/REGPAT" # for latest regpat version
web = "D:/Dropbox/2-private/PABalland.github.io/asg/continental"
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/1-production/_SOURCE/treemaps")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3-patents-applicants.html"), collapse="\n") #after json data
# read priorities
setwd(paste0(dir, "/1-data"))
df = fread ("pctnb-prio.csv", sep = ",", header = T)
# read app info
setwd(dir.regpat)
app = fread ("pctnb-app-reg.csv", sep = ",", header = T)
app$ctry = substr(app$reg_code, 0, 2)
app = app %>% distinct ()
df = inner_join(df, app, by = "pct_nbr")
df$year = as.numeric(substr(df$pct_nbr, 3, 6))
df = subset (df, df$year >= 2017) # select period
df$year = NULL
df$freq = 1
df$ID = paste0(df$priority, df$app_name)
df$count = ave(df$freq, df$ID, FUN = sum)
df = df[, c("priority", "app_name", "count", "ctry")]
df = df %>% distinct ()
df$region = df$priority
df$sum = ave(df$count, df$priority, FUN = sum)
df$share = round (df$count*100/df$sum, digits = 2)
df$count.all = ave(df$count, df$app_name, FUN = sum)
df$sum.all = sum(df$count)
df$shareall = round (df$count.all*100/df$sum.all, digits = 2)
for (i in unique (df$region)) {
#i = "Head-up displays"
sub = subset (df, df$region == i)
sub$id = sub$app_name
sub$value = sub$count
sub$color = "lightblue"
sub$color[sub$ctry == "CN"] = "orange"
sub$color[sub$ctry == "US"] = "red"
sub$color[sub$ctry == "JP"] = "yellow"
sub$color[sub$ctry == "DE"] = "green"
sub$color[sub$ctry == "FR"] = "blue"
sub$color[sub$ctry == "KR"] = "lightgreen"
sub$color[sub$ctry == "UK"] = "lightred"
sub$color[sub$ctry == "SE"] = "lightorange"
sub$color[sub$ctry == "CA"] = "lightgrey"
sub$color[sub$ctry == "NL"] = "black"
sub$color[sub$ctry == "IL"] = "grey"
sub$parent = sub$ctry
sub$rca = 0
sub = unique(sub[,  c("parent", "id", "value", "color", "share", "rca", "shareall", "ctry")])
sub = sub[complete.cases(sub),]
p2 = toJSON(sub)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "/3-outputs/treemaps/applicants"))
i = iconv(i, to = 'ASCII//TRANSLIT')
i = gsub(" ", "-", i, fixed = TRUE)
i = gsub("/", "-", i, fixed = TRUE)
i = gsub(",", "-", i, fixed = TRUE)
i = gsub("(", "-", i, fixed = TRUE)
i = gsub(")", "", i, fixed = TRUE)
i = gsub("--", "-", i, fixed = TRUE)
i = gsub("-.", ".", i, fixed = TRUE)
i = tolower (i)
writeLines(all, paste0(i, ".html"))
setwd(paste0(web, "/treemaps/applicants"))
writeLines(all, paste0(i, ".html"))
}
head(df)
df = df[, c("priority", "app_name", "count", "shareall", "ctry")]
df = df[, c("priority", "app_name", "count", "shareall", "ctry")]
setwd(paste0(web, "/treemaps/applicants"))
write.csv2(df, "applicants.csv", row.names = F)
test = subset (df, df$ctry=="JP")
View(df)
View(test)
test = subset (test, test$priority=="Optical Components")
sum(test$count)
