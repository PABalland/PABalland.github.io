df$freq = 1
df$ID = paste0(df$priority, df$app_name)
df$count = ave(df$freq, df$ID, FUN = sum)
df = df[, c("priority", "app_name", "count", "ctry")]
df = df %>% distinct ()
df$region = df$priority
df$sum = ave(df$count, df$priority, FUN = sum)
df$share = round (df$count*100/df$sum, digits = 2)
df$count.all = ave(df$count, df$app_name, FUN = sum)
df$sum.all = sum(df$count)
df$shareall = round (df$count.all*100/df$sum.all, digits = 2)
for (i in unique (df$region)) {
#i = "Head-up displays"
sub = subset (df, df$region == i)
sub$id = sub$app_name
sub$value = sub$count
sub$color = "lightblue"
sub$color[sub$ctry == "CN"] = "orange"
sub$color[sub$ctry == "US"] = "red"
sub$color[sub$ctry == "JP"] = "yellow"
sub$color[sub$ctry == "DE"] = "green"
sub$color[sub$ctry == "FR"] = "blue"
sub$color[sub$ctry == "KR"] = "lightgreen"
sub$color[sub$ctry == "UK"] = "lightred"
sub$color[sub$ctry == "SE"] = "lightorange"
sub$color[sub$ctry == "CA"] = "lightgrey"
sub$color[sub$ctry == "NL"] = "black"
sub$color[sub$ctry == "IL"] = "grey"
sub$parent = sub$ctry
sub$rca = 0
sub = unique(sub[,  c("parent", "id", "value", "color", "share", "rca", "shareall", "ctry")])
sub = sub[complete.cases(sub),]
p2 = toJSON(sub)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "/3-outputs/treemaps/applicants"))
i = iconv(i, to = 'ASCII//TRANSLIT')
i = gsub(" ", "-", i, fixed = TRUE)
i = gsub("/", "-", i, fixed = TRUE)
i = gsub(",", "-", i, fixed = TRUE)
i = gsub("(", "-", i, fixed = TRUE)
i = gsub(")", "", i, fixed = TRUE)
i = gsub("--", "-", i, fixed = TRUE)
i = gsub("-.", ".", i, fixed = TRUE)
i = tolower (i)
writeLines(all, paste0(i, ".html"))
setwd(paste0(web, "/treemaps/applicants"))
writeLines(all, paste0(i, ".html"))
dfcsv = df[, c("priority", "app_name", "count", "shareall", "ctry")]
dfcsv = dfcsv[, c("priority", "app_name", "count", "shareall", "ctry")]
write.csv2(sub, paste0(i, ".csv"), row.names = F)
}
#df = df[, c("priority", "app_name", "count", "shareall", "ctry")]
#setwd(paste0(web, "/treemaps/applicants"))
#write.csv2(df, "applicants.csv", row.names = F)
#df = subset (df, df$count>1)
#setwd(paste0(dir, "/3-outputs/treemaps/assignees"))
#dtdata1 <- datatable (df, filter = 'top')
#DT::saveWidget(dtdata1, "inventors.html")
#setwd(paste0(web, "/treemaps/assignees"))
#DT::saveWidget(dtdata1, "inventors.html")
options(stringsAsFactors=FALSE)
library (jsonlite)
library (EconGeo)
library (RColorBrewer)
library (data.table)
library (dplyr)
dir  = "D:/Dropbox/2-private/1-asg/1-production/2-continental" # for analysis
dir.regpat = "D:/Dropbox/2-private/1-asg/1-production/_DATA/PATENTS/REGPAT" # for latest regpat version
web = "D:/Dropbox/2-private/PABalland.github.io/asg/continental"
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/1-production/_SOURCE/treemaps")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3-patents-applicants.html"), collapse="\n") #after json data
# read priorities
setwd(paste0(dir, "/1-data"))
df = fread ("pctnb-prio.csv", sep = ",", header = T)
# read app info
setwd(dir.regpat)
app = fread ("pctnb-app-reg.csv", sep = ",", header = T)
app$ctry = substr(app$reg_code, 0, 2)
app = app %>% distinct ()
df = inner_join(df, app, by = "pct_nbr")
df$year = as.numeric(substr(df$pct_nbr, 3, 6))
df = subset (df, df$year >= 2017) # select period
df$year = NULL
df$freq = 1
df$ID = paste0(df$priority, df$app_name)
df$count = ave(df$freq, df$ID, FUN = sum)
df = df[, c("priority", "app_name", "count", "ctry")]
df = df %>% distinct ()
df$region = df$priority
df$sum = ave(df$count, df$priority, FUN = sum)
df$share = round (df$count*100/df$sum, digits = 2)
df$count.all = ave(df$count, df$app_name, FUN = sum)
df$sum.all = sum(df$count)
df$shareall = round (df$count.all*100/df$sum.all, digits = 2)
for (i in unique (df$region)) {
#i = "Head-up displays"
sub = subset (df, df$region == i)
sub$id = sub$app_name
sub$value = sub$count
sub$color = "lightblue"
sub$color[sub$ctry == "CN"] = "orange"
sub$color[sub$ctry == "US"] = "red"
sub$color[sub$ctry == "JP"] = "yellow"
sub$color[sub$ctry == "DE"] = "green"
sub$color[sub$ctry == "FR"] = "blue"
sub$color[sub$ctry == "KR"] = "lightgreen"
sub$color[sub$ctry == "UK"] = "lightred"
sub$color[sub$ctry == "SE"] = "lightorange"
sub$color[sub$ctry == "CA"] = "lightgrey"
sub$color[sub$ctry == "NL"] = "black"
sub$color[sub$ctry == "IL"] = "grey"
sub$parent = sub$ctry
sub$rca = 0
sub = unique(sub[,  c("parent", "id", "value", "color", "share", "rca", "shareall", "ctry")])
sub = sub[complete.cases(sub),]
p2 = toJSON(sub)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "/3-outputs/treemaps/applicants"))
i = iconv(i, to = 'ASCII//TRANSLIT')
i = gsub(" ", "-", i, fixed = TRUE)
i = gsub("/", "-", i, fixed = TRUE)
i = gsub(",", "-", i, fixed = TRUE)
i = gsub("(", "-", i, fixed = TRUE)
i = gsub(")", "", i, fixed = TRUE)
i = gsub("--", "-", i, fixed = TRUE)
i = gsub("-.", ".", i, fixed = TRUE)
i = tolower (i)
writeLines(all, paste0(i, ".html"))
setwd(paste0(web, "/treemaps/applicants"))
writeLines(all, paste0(i, ".html"))
sub = sub[, c("id",	"value", "share", "ctry")]
sub = sub[order(-sub$value), ]
sub = sub[order(sub$ctry), ]
write.csv2(sub, paste0(i, ".csv"), row.names = F)
}
#df = df[, c("priority", "app_name", "count", "shareall", "ctry")]
#setwd(paste0(web, "/treemaps/applicants"))
#write.csv2(df, "applicants.csv", row.names = F)
#df = subset (df, df$count>1)
#setwd(paste0(dir, "/3-outputs/treemaps/assignees"))
#dtdata1 <- datatable (df, filter = 'top')
#DT::saveWidget(dtdata1, "inventors.html")
#setwd(paste0(web, "/treemaps/assignees"))
#DT::saveWidget(dtdata1, "inventors.html")
options(stringsAsFactors=FALSE)
library (jsonlite)
library (EconGeo)
library (RColorBrewer)
library (data.table)
library (dplyr)
dir  = "D:/Dropbox/2-private/1-asg/1-production/2-continental" # for analysis
dir.regpat = "D:/Dropbox/2-private/1-asg/1-production/_DATA/PATENTS/REGPAT" # for latest regpat version
web = "D:/Dropbox/2-private/PABalland.github.io/asg/continental"
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/1-production/_SOURCE/treemaps")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3-patents-applicants.html"), collapse="\n") #after json data
# read priorities
setwd(paste0(dir, "/1-data"))
df = fread ("pctnb-prio.csv", sep = ",", header = T)
# read app info
setwd(dir.regpat)
app = fread ("pctnb-app-reg.csv", sep = ",", header = T)
app$ctry = substr(app$reg_code, 0, 2)
app = app %>% distinct ()
df = inner_join(df, app, by = "pct_nbr")
df$year = as.numeric(substr(df$pct_nbr, 3, 6))
df = subset (df, df$year >= 2017) # select period
df$year = NULL
df$freq = 1
df$ID = paste0(df$priority, df$app_name)
df$count = ave(df$freq, df$ID, FUN = sum)
df = df[, c("priority", "app_name", "count", "ctry")]
df = df %>% distinct ()
df$region = df$priority
df$sum = ave(df$count, df$priority, FUN = sum)
df$share = round (df$count*100/df$sum, digits = 2)
df$count.all = ave(df$count, df$app_name, FUN = sum)
df$sum.all = sum(df$count)
df$shareall = round (df$count.all*100/df$sum.all, digits = 2)
for (i in unique (df$region)) {
#i = "Head-up displays"
sub = subset (df, df$region == i)
sub$id = sub$app_name
sub$value = sub$count
sub$color = "lightblue"
sub$color[sub$ctry == "CN"] = "orange"
sub$color[sub$ctry == "US"] = "red"
sub$color[sub$ctry == "JP"] = "yellow"
sub$color[sub$ctry == "DE"] = "green"
sub$color[sub$ctry == "FR"] = "blue"
sub$color[sub$ctry == "KR"] = "lightgreen"
sub$color[sub$ctry == "UK"] = "lightred"
sub$color[sub$ctry == "SE"] = "lightorange"
sub$color[sub$ctry == "CA"] = "lightgrey"
sub$color[sub$ctry == "NL"] = "black"
sub$color[sub$ctry == "IL"] = "grey"
sub$parent = sub$ctry
sub$rca = 0
sub = unique(sub[,  c("parent", "id", "value", "color", "share", "rca", "shareall", "ctry")])
sub = sub[complete.cases(sub),]
p2 = toJSON(sub)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "/3-outputs/treemaps/applicants"))
i = iconv(i, to = 'ASCII//TRANSLIT')
i = gsub(" ", "-", i, fixed = TRUE)
i = gsub("/", "-", i, fixed = TRUE)
i = gsub(",", "-", i, fixed = TRUE)
i = gsub("(", "-", i, fixed = TRUE)
i = gsub(")", "", i, fixed = TRUE)
i = gsub("--", "-", i, fixed = TRUE)
i = gsub("-.", ".", i, fixed = TRUE)
i = tolower (i)
writeLines(all, paste0(i, ".html"))
setwd(paste0(web, "/treemaps/applicants"))
writeLines(all, paste0(i, ".html"))
sub = sub[, c("id",	"value", "share", "ctry")]
sub = sub[order(-sub$value), ]
write.csv2(sub, paste0(i, ".csv"), row.names = F)
}
#df = df[, c("priority", "app_name", "count", "shareall", "ctry")]
#setwd(paste0(web, "/treemaps/applicants"))
#write.csv2(df, "applicants.csv", row.names = F)
#df = subset (df, df$count>1)
#setwd(paste0(dir, "/3-outputs/treemaps/assignees"))
#dtdata1 <- datatable (df, filter = 'top')
#DT::saveWidget(dtdata1, "inventors.html")
#setwd(paste0(web, "/treemaps/assignees"))
#DT::saveWidget(dtdata1, "inventors.html")
options(stringsAsFactors=FALSE)
library (jsonlite)
library (EconGeo)
library (RColorBrewer)
library (data.table)
library (dplyr)
library (DT)
dir  = "D:/Dropbox/2-private/1-asg/1-production/2-continental" # for analysis
dir.regpat = "D:/Dropbox/2-private/1-asg/1-production/_DATA/PATENTS/REGPAT" # for latest regpat version
web = "D:/Dropbox/2-private/PABalland.github.io/asg/continental"
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/1-production/_SOURCE/treemaps")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3-patents-assignee.html"), collapse="\n") #after json data
# read priorities
setwd(paste0(dir, "/1-data"))
df = fread ("pctnb-prio.csv", sep = ",", header = T)
# read inv info
setwd(dir.regpat)
inv = fread ("pctnb-inv-reg.csv", sep = ",", header = T)
inv$ctry = substr(inv$reg_code, 0, 2)
inv = inv %>% distinct ()
df = inner_join(df, inv, by = "pct_nbr")
df$year = as.numeric(substr(df$pct_nbr, 3, 6))
df = subset (df, df$year >= 2017) # select period
df$year = NULL
df$freq = 1
df$ID = paste0(df$priority, df$inv_name)
df$count = ave(df$freq, df$ID, FUN = sum)
df = df[, c("priority", "inv_name", "count", "ctry")]
df = df %>% distinct ()
df$region = df$priority
df$sum = ave(df$count, df$priority, FUN = sum)
df$share = round (df$count*100/df$sum, digits = 2)
df$count.all = ave(df$count, df$inv_name, FUN = sum)
df$sum.all = sum(df$count)
df$shareall = round (df$count.all*100/df$sum.all, digits = 2)
for (i in unique (df$region)) {
#i = "Head-up displays"
sub = subset (df, df$region == i)
sub$id = sub$inv_name
sub$value = sub$count
sub$color = "lightblue"
sub$color[sub$ctry == "CN"] = "orange"
sub$color[sub$ctry == "US"] = "red"
sub$color[sub$ctry == "JP"] = "yellow"
sub$color[sub$ctry == "DE"] = "green"
sub$color[sub$ctry == "FR"] = "blue"
sub$color[sub$ctry == "KR"] = "lightgreen"
sub$color[sub$ctry == "UK"] = "lightred"
sub$color[sub$ctry == "SE"] = "lightorange"
sub$color[sub$ctry == "CA"] = "lightgrey"
sub$color[sub$ctry == "NL"] = "black"
sub$color[sub$ctry == "IL"] = "grey"
sub$parent = sub$ctry
sub$rca = 0
sub = unique(sub[,  c("parent", "id", "value", "color", "share", "rca", "shareall", "ctry")])
sub = sub[complete.cases(sub),]
p2 = toJSON(sub)
all = paste (p1, p2, p3, collapse="\n")
i = iconv(i, to = 'ASCII//TRANSLIT')
i = gsub(" ", "-", i, fixed = TRUE)
i = gsub("/", "-", i, fixed = TRUE)
i = gsub(",", "-", i, fixed = TRUE)
i = gsub("(", "-", i, fixed = TRUE)
i = gsub(")", "", i, fixed = TRUE)
i = gsub("--", "-", i, fixed = TRUE)
i = gsub("-.", ".", i, fixed = TRUE)
i = tolower (i)
setwd(paste0(dir, "/3-outputs/treemaps/inventors"))
writeLines(all, paste0(i, ".html"))
setwd(paste0(web, "/treemaps/inventors"))
writeLines(all, paste0(i, ".html"))
sub = sub[, c("id",	"value", "share", "ctry")]
sub = sub[order(-sub$value), ]
write.csv2(sub, paste0(i, ".csv"), row.names = F)
}
#df = df[, c("priority", "inv_name", "count")]
#write.csv2(df, "inventors.csv", row.names = F)
#df = subset (df, df$count>1)
#setwd(paste0(dir, "/3-outputs/treemaps/inventors"))
#dtdata1 <- datatable (df, filter = 'top')
#DT::saveWidget(dtdata1, "inventors.html")
#setwd(paste0(web, "/treemaps/inventors"))
#DT::saveWidget(dtdata1, "inventors.html")
options(stringsAsFactors=FALSE)
library (jsonlite)
library (EconGeo)
library (RColorBrewer)
library (data.table)
library (dplyr)
dir  = "D:/Dropbox/2-private/1-asg/1-production/2-continental" # for analysis
dir.regpat = "D:/Dropbox/2-private/1-asg/1-production/_DATA/PATENTS/REGPAT" # for latest regpat version
web = "D:/Dropbox/2-private/PABalland.github.io/asg/continental"
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/1-production/_SOURCE/maps/metro/europe")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# read geography of prio
setwd(paste0(dir, "/2-analysis"))
df = read.csv2 ("reg-tech-metro-4d.csv", sep = ";", header = T)
View(df)
### PARAMETERS
# spatial level (fua, nuts1, nuts2, nuts3, country)
# tech level (2-digit; 4-digit)
# time (year; period)
options(stringsAsFactors=FALSE)
dir  = "D:/Dropbox/2-private/1-asg/1-production/2-continental" # for analysis
dir.regpat = "D:/Dropbox/2-private/1-asg/1-production/_DATA/PATENTS/REGPAT" # for latest regpat version
library (EconGeo)
library (dplyr)
library (data.table)
setwd("D:/Dropbox/2-private/1-asg/1-production/_SOURCE")
source ("fast.co.occurrence.R")
source ("rescale.R")
# read priorities
setwd(paste0(dir, "/1-data"))
prio = fread ("pctnb-prio.csv", sep = ",", header = T)
colnames (prio) = c("pct_nbr", "tech")
# read cpcs
setwd(dir.regpat)
cpc = fread ("pctnb-cpc.csv", sep = ",", header = T)
cpc$cpc = substr(cpc$cpc, 0, 4)
cpc = cpc %>% distinct()
colnames (cpc) = c("pct_nbr", "tech")
# combine
df = rbind (cpc, prio)
df$year = as.numeric(substr(df$pct_nbr, 3, 6))
df = subset (df, df$year >= 2017) # select period
df$year = NULL
# add region info
setwd(dir.regpat)
reg = fread ("pctnb-inv-reg.csv", sep = ",", header = T)
reg$inv_name = NULL
reg = reg %>% distinct()
# define regional level
reg.att = read.csv2 ("reg-att.csv")[, c("reg_code", "metro_name")] %>% distinct()
reg = inner_join(reg, reg.att, by = "reg_code") # merge to get priority years
reg$reg_code = NULL
reg = reg %>% distinct()
reg <- reg[complete.cases(reg), ]
# merge back
df = inner_join (df, reg, by = "pct_nbr")
# pat counts reg-techs
df$ID = paste0(df$tech, df$metro_name)
df$freq = 1
df$count = ave (df$freq, df$ID, FUN = sum)
df = df[, c("metro_name", "tech", "count")] %>% distinct()
df = get.matrix(df)
df = get.list (df)
colnames (df) = c("metro_name", "tech", "count")
# compute rca
rca = get.matrix (df)
rca = RCA (rca)
rca = get.list (rca)
colnames (rca) = c("metro_name", "tech", "rca")
df = merge (df, rca, by = c("metro_name", "tech"))
# reldens
setwd(paste0(dir, "/2-analysis"))
rel = read.csv2("tech-tech-4d.csv")
bim = get.matrix (df[, c("metro_name", "tech", "count")])
rel = get.matrix (rel[, c("source", "target", "rel")])
rel2 = matrix(0, nrow = ncol(bim), ncol = ncol(bim))
colnames (rel2) = colnames (bim)
rownames (rel2) = colnames (bim)
rel = match.mat (fill = rel, dim = rel2)
rel[is.na(rel)] <- 0
## traditional relatedness density
rcab = RCA(bim, binary = T)
reldens = relatedness.density (rcab, rel)
reldens = get.list (reldens)
colnames (reldens) = c("metro_name", "tech", "rel")
df = merge (df, reldens, by = c("metro_name", "tech"))
# add top assignees
setwd(paste0(dir, "/2-analysis"))
write.csv2 (df, "reg-tech-metro-4d.csv", row.names = F)
df$nbdig = nchar(gsub("[^0-9]+", "", df$tech))
df = subset (df, df$nbdig==0)
df$nbdig = NULL
setwd(paste0(dir, "/3-outputs"))
library (DT)
dtdata1 <- datatable (df, filter = 'top')
DT::saveWidget(dtdata1, "metro-prio.html")
setwd(web)
DT::saveWidget(dtdata1, "metro-prio.html")
options(stringsAsFactors=FALSE)
library (jsonlite)
library (EconGeo)
library (RColorBrewer)
library (data.table)
library (dplyr)
dir  = "D:/Dropbox/2-private/1-asg/1-production/2-continental" # for analysis
dir.regpat = "D:/Dropbox/2-private/1-asg/1-production/_DATA/PATENTS/REGPAT" # for latest regpat version
web = "D:/Dropbox/2-private/PABalland.github.io/asg/continental"
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/1-production/_SOURCE/maps/metro/europe")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# read geography of prio
setwd(paste0(dir, "/2-analysis"))
df = read.csv2 ("reg-tech-metro-4d.csv", sep = ";", header = T)
# remove non prio
df$nbdig = nchar(gsub("[^0-9]+", "", df$tech))
df = subset (df, df$nbdig==0)
df$nbdig = NULL
# define regional level
setwd(dir.regpat)
reg.att = read.csv2 ("reg-att.csv")[, c("metro_code", "metro_name")] %>% distinct()
df = merge(df, reg.att, by = "metro_name") #
df$id = df$metro_code
df$metro_code=NULL
for (i in unique (df$tech)) {
#i = "Head-up displays"
sub = subset (df, df$tech == i)
sub$population = sub$count
sub$rel = sub$rel
sub$name = sub$metro_name
p2 = toJSON(sub)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "/3-outputs/maps"))
i = iconv(i, to = 'ASCII//TRANSLIT')
i = gsub(" ", "-", i, fixed = TRUE)
i = gsub("/", "-", i, fixed = TRUE)
i = gsub(",", "-", i, fixed = TRUE)
i = gsub("(", "-", i, fixed = TRUE)
i = gsub(")", "", i, fixed = TRUE)
i = gsub("--", "-", i, fixed = TRUE)
i = gsub("-.", ".", i, fixed = TRUE)
i = tolower (i)
writeLines(all, paste0(i, ".html"))
setwd(paste0(web, "/maps"))
writeLines(all, paste0(i, ".html"))
}
options(stringsAsFactors=FALSE)
library (jsonlite)
library (EconGeo)
library (RColorBrewer)
library (data.table)
library (dplyr)
dir  = "D:/Dropbox/2-private/1-asg/1-production/2-continental" # for analysis
dir.regpat = "D:/Dropbox/2-private/1-asg/1-production/_DATA/PATENTS/REGPAT" # for latest regpat version
web = "D:/Dropbox/2-private/PABalland.github.io/asg/continental"
# load different parts of html
setwd("D:/Dropbox/2-private/1-asg/1-production/_SOURCE/maps/metro/europe")
p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
# read geography of prio
setwd(paste0(dir, "/2-analysis"))
df = read.csv2 ("reg-tech-metro-4d.csv", sep = ";", header = T)
# remove non prio
df$nbdig = nchar(gsub("[^0-9]+", "", df$tech))
df = subset (df, df$nbdig==0)
df$nbdig = NULL
# define regional level
setwd(dir.regpat)
reg.att = read.csv2 ("reg-att.csv")[, c("metro_code", "metro_name")] %>% distinct()
df = merge(df, reg.att, by = "metro_name") #
df$id = df$metro_code
df$metro_code=NULL
for (i in unique (df$tech)) {
#i = "Head-up displays"
sub = subset (df, df$tech == i)
sub$population = sub$rel
sub$rel = sub$rel
sub$name = sub$metro_name
p2 = toJSON(sub)
all = paste (p1, p2, p3, collapse="\n")
setwd(paste0(dir, "/3-outputs/maps"))
i = iconv(i, to = 'ASCII//TRANSLIT')
i = gsub(" ", "-", i, fixed = TRUE)
i = gsub("/", "-", i, fixed = TRUE)
i = gsub(",", "-", i, fixed = TRUE)
i = gsub("(", "-", i, fixed = TRUE)
i = gsub(")", "", i, fixed = TRUE)
i = gsub("--", "-", i, fixed = TRUE)
i = gsub("-.", ".", i, fixed = TRUE)
i = tolower (i)
writeLines(all, paste0(i, ".html"))
setwd(paste0(web, "/maps"))
writeLines(all, paste0(i, ".html"))
}
