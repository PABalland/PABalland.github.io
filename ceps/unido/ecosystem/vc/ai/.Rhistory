stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,4])) %>%
select(-comma_count)
# remove manufacturing and chemical
df = subset (df, !df$prio == "1-manufacturing")
df = subset (df, !df$prio == "13-chemical")
df$prio <- sapply(strsplit(df$prio, "-"), function(x) x[2]) #split
df$prio <- sapply(df$prio, function(x) paste0(toupper(substring(x, 1, 1)), substring(x, 2)))#capitalize
# NOW PREPARE THE AI STARTUPS PER PRIO SECTORS
dfai <- dfai %>%
rowwise() %>%
mutate(comma_count = stringr::str_count(Headquarters.Location, ",")) %>%
ungroup() %>%
mutate(city = ifelse(comma_count == 2, stringr::str_split_fixed(Headquarters.Location, ", ", 3)[,1],
stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,1]),
region = ifelse(comma_count == 2, stringr::str_split_fixed(Headquarters.Location, ", ", 3)[,2],
paste(stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,2],
stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,3])),
country = ifelse(comma_count == 2, stringr::str_split_fixed(Headquarters.Location, ", ", 3)[,3],
stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,4])) %>%
select(-comma_count)
# remove manufacturing and chemical
dfai = subset (dfai, !dfai$prio == "1-manufacturing")
dfai = subset (dfai, !dfai$prio == "13-chemical")
dfai$prio <- sapply(strsplit(dfai$prio, "-"), function(x) x[2]) #split
dfai$prio <- sapply(dfai$prio, function(x) paste0(toupper(substring(x, 1, 1)), substring(x, 2)))#capitalize
head(df)
head(dfai)
i = "Medicine"
aiversion = F # activate this
aiversion = T # activate this
for (i in unique (df$prio)){
if (aiversion == F) {
df2 = subset (df, df$prio == i) # use the top 1000 per prio
}
if (aiversion == T) {
df2 = subset (dfai, dfai$prio == i) # uses the top 1000 AI startups per prio
#df2 = subset (df, df$prio == i)
}
df2$id = df2$Organization.Name
df2$value = df2$Total.Funding.Amount.Currency..in.USD.
df2$value2 = 1
if (aiversion == F) {
#df2$parent = df2$ai
#df2$parent[df2$parent==1]="Artificial Intelligence Industry Tag"
#df2$parent[df2$parent==0]="No Artificial Intelligence Industry Tag"
df2$parent = df2$country
df2$parent[df2$country %in% East_Asia_and_Pacific] = "East Asia and Pacific"
df2$parent[df2$country %in% Europe_and_Central_Asia] = "Europe and Central Asia"
df2$parent[df2$country %in% Latin_America_and_Caribbean] = "Latin America and Caribbean"
df2$parent[df2$country %in% Middle_East_and_North_Africa] = "Middle East and North Africa"
df2$parent[df2$country %in% North_America] = "North America"
df2$parent[df2$country %in% South_Asia] = "South Asia"
df2$parent[df2$country %in% Sub_Saharan_Africa] = "Sub Saharan Africa"
df2$color[df2$country %in% East_Asia_and_Pacific] = "#365a94"
df2$color[df2$country %in% Europe_and_Central_Asia] = "#8cab79"
df2$color[df2$country %in% Latin_America_and_Caribbean] = "#e28f26"
df2$color[df2$country %in% Middle_East_and_North_Africa]= "#8B4513"
df2$color[df2$country %in% North_America] = "#800020"
df2$color[df2$country %in% South_Asia] = "#CDA817"
df2$color[df2$country %in% Sub_Saharan_Africa] = "#D3D3D3"
df2$color[df2$ai == 1] = "black"
#df2$color[df2$parent == "No Artificial Intelligence Industry Tag"] = "#8cab79"
#df2$color[df2$parent == "A: HUMAN NECESSITIES"] = "#800020"
}
if (aiversion == T) {
df2$parent = df2$country
df2$parent[df2$country %in% East_Asia_and_Pacific] = "East Asia and Pacific"
df2$parent[df2$country %in% Europe_and_Central_Asia] = "Europe and Central Asia"
df2$parent[df2$country %in% Latin_America_and_Caribbean] = "Latin America and Caribbean"
df2$parent[df2$country %in% Middle_East_and_North_Africa] = "Middle East and North Africa"
df2$parent[df2$country %in% North_America] = "North America"
df2$parent[df2$country %in% South_Asia] = "South Asia"
df2$parent[df2$country %in% Sub_Saharan_Africa] = "Sub Saharan Africa"
df2$color[df2$country %in% East_Asia_and_Pacific] = "#365a94"
df2$color[df2$country %in% Europe_and_Central_Asia] = "#8cab79"
df2$color[df2$country %in% Latin_America_and_Caribbean] = "#e28f26"
df2$color[df2$country %in% Middle_East_and_North_Africa]= "#8B4513"
df2$color[df2$country %in% North_America] = "#800020"
df2$color[df2$country %in% South_Asia] = "#CDA817"
df2$color[df2$country %in% Sub_Saharan_Africa] = "#D3D3D3"
df2$color[df2$ai == 1] = "black"
#df2$color[df2$parent == "United States"] = "#365a94"
#df2$color[df2$parent == "China"] = "#8cab79"
#df2$color[df2$parent == "A: HUMAN NECESSITIES"] = "#800020"
}
df2$HeadquartersLocation = df2$Headquarters.Location
df2$FullDescription = df2$Full.Description
df2$IPqweryMostPopularPatentClass = df2$IPqwery...Most.Popular.Patent.Class
df2$IPqweryMostPopularTrademarkClass = df2$IPqwery...Most.Popular.Trademark.Class
df2 = unique(df2[,  c("id", "value", "value2", "parent", "color",
"Industries", "HeadquartersLocation", "FullDescription",
"IPqweryMostPopularPatentClass",
"IPqweryMostPopularTrademarkClass",
#"sharen",
#"shareusd",
"country", "region", "city")])
#df2 = df2[complete.cases(df2),]
# json
p2 = toJSON(df2)
if (aiversion == F) {
setwd("/Users/pierre-alex/Dropbox/PABalland.github.io/ceps/unido/ecosystem/vc/prio")
write(p2, paste0(tolower(i), ".json"))
#all = paste (p1, p2, p3, collapse="\n")
#writeLines(all, paste0(i, ".html"))
}
if (aiversion == T) {
# create html - top 1000 usd
setwd("/Users/pierre-alex/Dropbox/PABalland.github.io/ceps/unido/ecosystem/vc/prio/ai")
#all = paste (p1, p2, p3.usd, collapse="\n")
write(p2, paste0(tolower(i), ".json"))
}
}
warnings()
i
if (aiversion == F) {
df2 = subset (df, df$prio == i) # use the top 1000 per prio
}
if (aiversion == T) {
df2 = subset (dfai, dfai$prio == i) # uses the top 1000 AI startups per prio
#df2 = subset (df, df$prio == i)
}
df2$id = df2$Organization.Name
df2$value = df2$Total.Funding.Amount.Currency..in.USD.
df2$value2 = 1
if (aiversion == F) {
#df2$parent = df2$ai
#df2$parent[df2$parent==1]="Artificial Intelligence Industry Tag"
#df2$parent[df2$parent==0]="No Artificial Intelligence Industry Tag"
df2$parent = df2$country
df2$parent[df2$country %in% East_Asia_and_Pacific] = "East Asia and Pacific"
df2$parent[df2$country %in% Europe_and_Central_Asia] = "Europe and Central Asia"
df2$parent[df2$country %in% Latin_America_and_Caribbean] = "Latin America and Caribbean"
df2$parent[df2$country %in% Middle_East_and_North_Africa] = "Middle East and North Africa"
df2$parent[df2$country %in% North_America] = "North America"
df2$parent[df2$country %in% South_Asia] = "South Asia"
df2$parent[df2$country %in% Sub_Saharan_Africa] = "Sub Saharan Africa"
df2$color[df2$country %in% East_Asia_and_Pacific] = "#365a94"
df2$color[df2$country %in% Europe_and_Central_Asia] = "#8cab79"
df2$color[df2$country %in% Latin_America_and_Caribbean] = "#e28f26"
df2$color[df2$country %in% Middle_East_and_North_Africa]= "#8B4513"
df2$color[df2$country %in% North_America] = "#800020"
df2$color[df2$country %in% South_Asia] = "#CDA817"
df2$color[df2$country %in% Sub_Saharan_Africa] = "#D3D3D3"
df2$color[df2$ai == 1] = "black"
#df2$color[df2$parent == "No Artificial Intelligence Industry Tag"] = "#8cab79"
#df2$color[df2$parent == "A: HUMAN NECESSITIES"] = "#800020"
}
if (aiversion == T) {
df2$parent = df2$country
df2$parent[df2$country %in% East_Asia_and_Pacific] = "East Asia and Pacific"
df2$parent[df2$country %in% Europe_and_Central_Asia] = "Europe and Central Asia"
df2$parent[df2$country %in% Latin_America_and_Caribbean] = "Latin America and Caribbean"
df2$parent[df2$country %in% Middle_East_and_North_Africa] = "Middle East and North Africa"
df2$parent[df2$country %in% North_America] = "North America"
df2$parent[df2$country %in% South_Asia] = "South Asia"
df2$parent[df2$country %in% Sub_Saharan_Africa] = "Sub Saharan Africa"
df2$color[df2$country %in% East_Asia_and_Pacific] = "#365a94"
df2$color[df2$country %in% Europe_and_Central_Asia] = "#8cab79"
df2$color[df2$country %in% Latin_America_and_Caribbean] = "#e28f26"
df2$color[df2$country %in% Middle_East_and_North_Africa]= "#8B4513"
df2$color[df2$country %in% North_America] = "#800020"
df2$color[df2$country %in% South_Asia] = "#CDA817"
df2$color[df2$country %in% Sub_Saharan_Africa] = "#D3D3D3"
df2$color[df2$ai == 1] = "black"
#df2$color[df2$parent == "United States"] = "#365a94"
#df2$color[df2$parent == "China"] = "#8cab79"
#df2$color[df2$parent == "A: HUMAN NECESSITIES"] = "#800020"
}
if (aiversion == T) {
df2$parent = df2$country
df2$parent[df2$country %in% East_Asia_and_Pacific] = "East Asia and Pacific"
df2$parent[df2$country %in% Europe_and_Central_Asia] = "Europe and Central Asia"
df2$parent[df2$country %in% Latin_America_and_Caribbean] = "Latin America and Caribbean"
df2$parent[df2$country %in% Middle_East_and_North_Africa] = "Middle East and North Africa"
df2$parent[df2$country %in% North_America] = "North America"
df2$parent[df2$country %in% South_Asia] = "South Asia"
df2$parent[df2$country %in% Sub_Saharan_Africa] = "Sub Saharan Africa"
df2$color[df2$country %in% East_Asia_and_Pacific] = "#365a94"
df2$color[df2$country %in% Europe_and_Central_Asia] = "#8cab79"
df2$color[df2$country %in% Latin_America_and_Caribbean] = "#e28f26"
df2$color[df2$country %in% Middle_East_and_North_Africa]= "#8B4513"
df2$color[df2$country %in% North_America] = "#800020"
df2$color[df2$country %in% South_Asia] = "#CDA817"
df2$color[df2$country %in% Sub_Saharan_Africa] = "#D3D3D3"
#df2$color[df2$ai == 1] = "black"
#df2$color[df2$parent == "United States"] = "#365a94"
#df2$color[df2$parent == "China"] = "#8cab79"
#df2$color[df2$parent == "A: HUMAN NECESSITIES"] = "#800020"
}
df2$HeadquartersLocation = df2$Headquarters.Location
df2$FullDescription = df2$Full.Description
df2$IPqweryMostPopularPatentClass = df2$IPqwery...Most.Popular.Patent.Class
df2$IPqweryMostPopularTrademarkClass = df2$IPqwery...Most.Popular.Trademark.Class
df2 = unique(df2[,  c("id", "value", "value2", "parent", "color",
"Industries", "HeadquartersLocation", "FullDescription",
"IPqweryMostPopularPatentClass",
"IPqweryMostPopularTrademarkClass",
#"sharen",
#"shareusd",
"country", "region", "city")])
#df2 = df2[complete.cases(df2),]
# json
p2 = toJSON(df2)
if (aiversion == F) {
setwd("/Users/pierre-alex/Dropbox/PABalland.github.io/ceps/unido/ecosystem/vc/prio")
write(p2, paste0(tolower(i), ".json"))
#all = paste (p1, p2, p3, collapse="\n")
#writeLines(all, paste0(i, ".html"))
}
if (aiversion == T) {
# create html - top 1000 usd
setwd("/Users/pierre-alex/Dropbox/PABalland.github.io/ceps/unido/ecosystem/vc/prio/ai")
#all = paste (p1, p2, p3.usd, collapse="\n")
write(p2, paste0(tolower(i), ".json"))
}
# packages & codes
library(jsonlite)
library(dplyr)
library(tidyverse)
source ("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/rescale.R")
# country classification
North_America = c("United States", "Canada", "Mexico", "Bahamas", "Puerto Rico", "Bermuda", "Cayman Islands")
Latin_America_and_Caribbean = c("Chile", "El Salvador", "Barbados", "Costa Rica", "Peru", "Brazil", "Colombia", "Dominican Republic", "Argentina", "Ecuador", "Venezuela", "Uruguay", "Panama", "Guatemala", "Trinidad and Tobago")
Europe_and_Central_Asia = c("Spain", "United Kingdom", "Ireland", "The Netherlands", "Switzerland", "Russian Federation", "Slovakia (Slovak Republic)", "France", "Serbia", "Germany", "Sweden", "Belgium", "Luxembourg", "Italy", "Finland", "Estonia", "Denmark", "Hungary", "Poland", "Latvia", "Czech Republic", "Iceland", "Austria", "Greece", "Turkey", "Cyprus", "Bulgaria", "Ukraine", "Lithuania", "Georgia", "Romania", "Slovenia", "Macedonia", "Albania", "Moldova", "Malta", "Armenia", "Azerbaijan", "Belarus", "Bosnia and Herzegovina", "Croatia", "Kazakhstan")
South_Asia = c("India", "Pakistan", "Sri Lanka", "Bangladesh")
Sub_Saharan_Africa = c("Namibia", "Djibouti", "South Africa", "Mauritania", "Tanzania", "Kenya", "Nigeria", "Ghana", "Côte d'Ivoire", "Swaziland", "Niger", "Senegal", "Zambia", "Madagascar", "Guinea", "Eritrea", "Zimbabwe", "Cameroon", "Uganda", "Gabon", "Ethiopia", "Mauritius", "Mozambique", "Togo", "Botswana", "Benin", "Rwanda", "Democratic Republic of the Congo")
East_Asia_and_Pacific = c("Singapore", "Australia", "South Korea", "China", "Philippines", "Indonesia", "Hong Kong", "Japan", "Taiwan", "New Zealand", "Malaysia", "Mongolia", "Vietnam", "Thailand", "Lao People's Democratic Republic")
Middle_East_and_North_Africa = c("Bahrain", "Israel", "Saudi Arabia", "United Arab Emirates", "Jordan", "Oman", "Qatar", "Tunisia", "Egypt", "Lebanon", "Iran", "Kuwait", "Jersey", "Isle of Man")
# html source location - usd amount
#setwd("~/Dropbox/1-asg/1-production/3-projects/3-unido/3-outputs/priority-sectors/crunchbase/treemaps/_source")
#p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
#p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
#p3.usd = paste(readLines("part-3-usd.html"), collapse="\n") #after json data
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/vc")
df = read.csv ("prio-companies.csv")
dfai = read.csv ("prio-companies-ai-only.csv")
stats = read.csv ("first-stats.csv")
# prepare the top 1000 startups per prio sectors
df <- df %>%
rowwise() %>%
mutate(comma_count = stringr::str_count(Headquarters.Location, ",")) %>%
ungroup() %>%
mutate(city = ifelse(comma_count == 2, stringr::str_split_fixed(Headquarters.Location, ", ", 3)[,1],
stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,1]),
region = ifelse(comma_count == 2, stringr::str_split_fixed(Headquarters.Location, ", ", 3)[,2],
paste(stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,2],
stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,3])),
country = ifelse(comma_count == 2, stringr::str_split_fixed(Headquarters.Location, ", ", 3)[,3],
stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,4])) %>%
select(-comma_count)
# remove manufacturing and chemical
df = subset (df, !df$prio == "1-manufacturing")
df = subset (df, !df$prio == "13-chemical")
df$prio <- sapply(strsplit(df$prio, "-"), function(x) x[2]) #split
df$prio <- sapply(df$prio, function(x) paste0(toupper(substring(x, 1, 1)), substring(x, 2)))#capitalize
# NOW PREPARE THE AI STARTUPS PER PRIO SECTORS
dfai <- dfai %>%
rowwise() %>%
mutate(comma_count = stringr::str_count(Headquarters.Location, ",")) %>%
ungroup() %>%
mutate(city = ifelse(comma_count == 2, stringr::str_split_fixed(Headquarters.Location, ", ", 3)[,1],
stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,1]),
region = ifelse(comma_count == 2, stringr::str_split_fixed(Headquarters.Location, ", ", 3)[,2],
paste(stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,2],
stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,3])),
country = ifelse(comma_count == 2, stringr::str_split_fixed(Headquarters.Location, ", ", 3)[,3],
stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,4])) %>%
select(-comma_count)
# remove manufacturing and chemical
dfai = subset (dfai, !dfai$prio == "1-manufacturing")
dfai = subset (dfai, !dfai$prio == "13-chemical")
dfai$prio <- sapply(strsplit(dfai$prio, "-"), function(x) x[2]) #split
dfai$prio <- sapply(dfai$prio, function(x) paste0(toupper(substring(x, 1, 1)), substring(x, 2)))#capitalize
head(df)
head(dfai)
i = "Medicine"
aiversion = F # activate this
aiversion = T # activate this
for (i in unique (df$prio)){
if (aiversion == F) {
df2 = subset (df, df$prio == i) # use the top 1000 per prio
}
if (aiversion == T) {
df2 = subset (dfai, dfai$prio == i) # uses the top 1000 AI startups per prio
#df2 = subset (df, df$prio == i)
}
df2$id = df2$Organization.Name
df2$value = df2$Total.Funding.Amount.Currency..in.USD.
df2$value2 = 1
if (aiversion == F) {
#df2$parent = df2$ai
#df2$parent[df2$parent==1]="Artificial Intelligence Industry Tag"
#df2$parent[df2$parent==0]="No Artificial Intelligence Industry Tag"
df2$parent = df2$country
df2$parent[df2$country %in% East_Asia_and_Pacific] = "East Asia and Pacific"
df2$parent[df2$country %in% Europe_and_Central_Asia] = "Europe and Central Asia"
df2$parent[df2$country %in% Latin_America_and_Caribbean] = "Latin America and Caribbean"
df2$parent[df2$country %in% Middle_East_and_North_Africa] = "Middle East and North Africa"
df2$parent[df2$country %in% North_America] = "North America"
df2$parent[df2$country %in% South_Asia] = "South Asia"
df2$parent[df2$country %in% Sub_Saharan_Africa] = "Sub Saharan Africa"
df2$color[df2$country %in% East_Asia_and_Pacific] = "#365a94"
df2$color[df2$country %in% Europe_and_Central_Asia] = "#8cab79"
df2$color[df2$country %in% Latin_America_and_Caribbean] = "#e28f26"
df2$color[df2$country %in% Middle_East_and_North_Africa]= "#8B4513"
df2$color[df2$country %in% North_America] = "#800020"
df2$color[df2$country %in% South_Asia] = "#CDA817"
df2$color[df2$country %in% Sub_Saharan_Africa] = "#D3D3D3"
df2$color[df2$ai == 1] = "black"
#df2$color[df2$parent == "No Artificial Intelligence Industry Tag"] = "#8cab79"
#df2$color[df2$parent == "A: HUMAN NECESSITIES"] = "#800020"
}
if (aiversion == T) {
df2$parent = df2$country
df2$parent[df2$country %in% East_Asia_and_Pacific] = "East Asia and Pacific"
df2$parent[df2$country %in% Europe_and_Central_Asia] = "Europe and Central Asia"
df2$parent[df2$country %in% Latin_America_and_Caribbean] = "Latin America and Caribbean"
df2$parent[df2$country %in% Middle_East_and_North_Africa] = "Middle East and North Africa"
df2$parent[df2$country %in% North_America] = "North America"
df2$parent[df2$country %in% South_Asia] = "South Asia"
df2$parent[df2$country %in% Sub_Saharan_Africa] = "Sub Saharan Africa"
df2$color[df2$country %in% East_Asia_and_Pacific] = "#365a94"
df2$color[df2$country %in% Europe_and_Central_Asia] = "#8cab79"
df2$color[df2$country %in% Latin_America_and_Caribbean] = "#e28f26"
df2$color[df2$country %in% Middle_East_and_North_Africa]= "#8B4513"
df2$color[df2$country %in% North_America] = "#800020"
df2$color[df2$country %in% South_Asia] = "#CDA817"
df2$color[df2$country %in% Sub_Saharan_Africa] = "#D3D3D3"
#df2$color[df2$ai == 1] = "black"
#df2$color[df2$parent == "United States"] = "#365a94"
#df2$color[df2$parent == "China"] = "#8cab79"
#df2$color[df2$parent == "A: HUMAN NECESSITIES"] = "#800020"
}
df2$HeadquartersLocation = df2$Headquarters.Location
df2$FullDescription = df2$Full.Description
df2$IPqweryMostPopularPatentClass = df2$IPqwery...Most.Popular.Patent.Class
df2$IPqweryMostPopularTrademarkClass = df2$IPqwery...Most.Popular.Trademark.Class
df2 = unique(df2[,  c("id", "value", "value2", "parent", "color",
"Industries", "HeadquartersLocation", "FullDescription",
"IPqweryMostPopularPatentClass",
"IPqweryMostPopularTrademarkClass",
#"sharen",
#"shareusd",
"country", "region", "city")])
#df2 = df2[complete.cases(df2),]
# json
p2 = toJSON(df2)
if (aiversion == F) {
setwd("/Users/pierre-alex/Dropbox/PABalland.github.io/ceps/unido/ecosystem/vc/prio")
write(p2, paste0(tolower(i), ".json"))
#all = paste (p1, p2, p3, collapse="\n")
#writeLines(all, paste0(i, ".html"))
}
if (aiversion == T) {
# create html - top 1000 usd
setwd("/Users/pierre-alex/Dropbox/PABalland.github.io/ceps/unido/ecosystem/vc/prio/ai")
#all = paste (p1, p2, p3.usd, collapse="\n")
write(p2, paste0(tolower(i), ".json"))
}
}
warnings()
i
# packages & codes
library(jsonlite)
library(dplyr)
library(tidyverse)
source ("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/rescale.R")
# country classification
# using the The World Bank regional classification
North_America = c("United States", "Canada", "Mexico", "Bahamas", "Puerto Rico", "Bermuda", "Cayman Islands")
Latin_America_and_Caribbean = c("Chile", "El Salvador", "Barbados", "Costa Rica", "Peru", "Brazil", "Colombia", "Dominican Republic", "Argentina", "Ecuador", "Venezuela", "Uruguay", "Panama", "Guatemala", "Trinidad and Tobago")
Europe_and_Central_Asia = c("Spain", "United Kingdom", "Ireland", "The Netherlands", "Switzerland", "Russian Federation", "Slovakia (Slovak Republic)", "France", "Serbia", "Germany", "Sweden", "Belgium", "Luxembourg", "Italy", "Finland", "Estonia", "Denmark", "Hungary", "Poland", "Latvia", "Czech Republic", "Iceland", "Austria", "Greece", "Turkey", "Cyprus", "Bulgaria", "Ukraine", "Lithuania", "Georgia", "Romania", "Slovenia", "Macedonia", "Albania", "Moldova", "Malta", "Armenia", "Azerbaijan", "Belarus", "Bosnia and Herzegovina", "Croatia", "Kazakhstan")
South_Asia = c("India", "Pakistan", "Sri Lanka", "Bangladesh")
Sub_Saharan_Africa = c("Namibia", "Djibouti", "South Africa", "Mauritania", "Tanzania", "Kenya", "Nigeria", "Ghana", "Côte d'Ivoire", "Swaziland", "Niger", "Senegal", "Zambia", "Madagascar", "Guinea", "Eritrea", "Zimbabwe", "Cameroon", "Uganda", "Gabon", "Ethiopia", "Mauritius", "Mozambique", "Togo", "Botswana", "Benin", "Rwanda", "Democratic Republic of the Congo")
East_Asia_and_Pacific = c("Singapore", "Australia", "South Korea", "China", "Philippines", "Indonesia", "Hong Kong", "Japan", "Taiwan", "New Zealand", "Malaysia", "Mongolia", "Vietnam", "Thailand", "Lao People's Democratic Republic")
Middle_East_and_North_Africa = c("Bahrain", "Israel", "Saudi Arabia", "United Arab Emirates", "Jordan", "Oman", "Qatar", "Tunisia", "Egypt", "Lebanon", "Iran", "Kuwait", "Jersey", "Isle of Man")
# html source location - usd amount
#setwd("~/Dropbox/1-asg/1-production/3-projects/3-unido/3-outputs/priority-sectors/crunchbase/treemaps/_source")
#p1 = paste(readLines("part-1.html"), collapse="\n") #before json data
#p3 = paste(readLines("part-3.html"), collapse="\n") #after json data
#p3.usd = paste(readLines("part-3-usd.html"), collapse="\n") #after json data
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/vc")
df = read.csv ("prio-companies.csv")
dfai = read.csv ("prio-companies-ai-only.csv")
stats = read.csv ("first-stats.csv")
# prepare the top 1000 startups per prio sectors
df <- df %>%
rowwise() %>%
mutate(comma_count = stringr::str_count(Headquarters.Location, ",")) %>%
ungroup() %>%
mutate(city = ifelse(comma_count == 2, stringr::str_split_fixed(Headquarters.Location, ", ", 3)[,1],
stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,1]),
region = ifelse(comma_count == 2, stringr::str_split_fixed(Headquarters.Location, ", ", 3)[,2],
paste(stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,2],
stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,3])),
country = ifelse(comma_count == 2, stringr::str_split_fixed(Headquarters.Location, ", ", 3)[,3],
stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,4])) %>%
select(-comma_count)
# remove manufacturing and chemical
df = subset (df, !df$prio == "1-manufacturing")
df = subset (df, !df$prio == "13-chemical")
df$prio <- sapply(strsplit(df$prio, "-"), function(x) x[2]) #split
df$prio <- sapply(df$prio, function(x) paste0(toupper(substring(x, 1, 1)), substring(x, 2)))#capitalize
# NOW PREPARE THE AI STARTUPS PER PRIO SECTORS
dfai <- dfai %>%
rowwise() %>%
mutate(comma_count = stringr::str_count(Headquarters.Location, ",")) %>%
ungroup() %>%
mutate(city = ifelse(comma_count == 2, stringr::str_split_fixed(Headquarters.Location, ", ", 3)[,1],
stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,1]),
region = ifelse(comma_count == 2, stringr::str_split_fixed(Headquarters.Location, ", ", 3)[,2],
paste(stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,2],
stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,3])),
country = ifelse(comma_count == 2, stringr::str_split_fixed(Headquarters.Location, ", ", 3)[,3],
stringr::str_split_fixed(Headquarters.Location, ", ", 4)[,4])) %>%
select(-comma_count)
# remove manufacturing and chemical
dfai = subset (dfai, !dfai$prio == "1-manufacturing")
dfai = subset (dfai, !dfai$prio == "13-chemical")
dfai$prio <- sapply(strsplit(dfai$prio, "-"), function(x) x[2]) #split
dfai$prio <- sapply(dfai$prio, function(x) paste0(toupper(substring(x, 1, 1)), substring(x, 2)))#capitalize
head(df)
head(dfai)
i = "Medicine"
aiversion = F # activate this
aiversion = T # activate this
for (i in unique (df$prio)){
if (aiversion == F) {
df2 = subset (df, df$prio == i) # use the top 1000 per prio
}
if (aiversion == T) {
df2 = subset (dfai, dfai$prio == i) # uses the top 1000 AI startups per prio
#df2 = subset (df, df$prio == i)
}
df2$id = df2$Organization.Name
df2$value = df2$Total.Funding.Amount.Currency..in.USD.
df2$value2 = 1
if (aiversion == F) {
#df2$parent = df2$ai
#df2$parent[df2$parent==1]="Artificial Intelligence Industry Tag"
#df2$parent[df2$parent==0]="No Artificial Intelligence Industry Tag"
df2$parent = df2$country
df2$parent[df2$country %in% East_Asia_and_Pacific] = "East Asia and Pacific"
df2$parent[df2$country %in% Europe_and_Central_Asia] = "Europe and Central Asia"
df2$parent[df2$country %in% Latin_America_and_Caribbean] = "Latin America and Caribbean"
df2$parent[df2$country %in% Middle_East_and_North_Africa] = "Middle East and North Africa"
df2$parent[df2$country %in% North_America] = "North America"
df2$parent[df2$country %in% South_Asia] = "South Asia"
df2$parent[df2$country %in% Sub_Saharan_Africa] = "Sub Saharan Africa"
df2$color = "black"
df2$color[df2$country %in% East_Asia_and_Pacific] = "#365a94"
df2$color[df2$country %in% Europe_and_Central_Asia] = "#8cab79"
df2$color[df2$country %in% Latin_America_and_Caribbean] = "#e28f26"
df2$color[df2$country %in% Middle_East_and_North_Africa]= "#8B4513"
df2$color[df2$country %in% North_America] = "#800020"
df2$color[df2$country %in% South_Asia] = "#CDA817"
df2$color[df2$country %in% Sub_Saharan_Africa] = "#D3D3D3"
df2$color[df2$ai == 1] = "black"
#df2$color[df2$parent == "No Artificial Intelligence Industry Tag"] = "#8cab79"
#df2$color[df2$parent == "A: HUMAN NECESSITIES"] = "#800020"
}
if (aiversion == T) {
df2$parent = df2$country
df2$parent[df2$country %in% East_Asia_and_Pacific] = "East Asia and Pacific"
df2$parent[df2$country %in% Europe_and_Central_Asia] = "Europe and Central Asia"
df2$parent[df2$country %in% Latin_America_and_Caribbean] = "Latin America and Caribbean"
df2$parent[df2$country %in% Middle_East_and_North_Africa] = "Middle East and North Africa"
df2$parent[df2$country %in% North_America] = "North America"
df2$parent[df2$country %in% South_Asia] = "South Asia"
df2$parent[df2$country %in% Sub_Saharan_Africa] = "Sub Saharan Africa"
df2$color = "black"
df2$color[df2$country %in% East_Asia_and_Pacific] = "#365a94"
df2$color[df2$country %in% Europe_and_Central_Asia] = "#8cab79"
df2$color[df2$country %in% Latin_America_and_Caribbean] = "#e28f26"
df2$color[df2$country %in% Middle_East_and_North_Africa]= "#8B4513"
df2$color[df2$country %in% North_America] = "#800020"
df2$color[df2$country %in% South_Asia] = "#CDA817"
df2$color[df2$country %in% Sub_Saharan_Africa] = "#D3D3D3"
#df2$color[df2$ai == 1] = "black"
#df2$color[df2$parent == "United States"] = "#365a94"
#df2$color[df2$parent == "China"] = "#8cab79"
#df2$color[df2$parent == "A: HUMAN NECESSITIES"] = "#800020"
}
df2$HeadquartersLocation = df2$Headquarters.Location
df2$FullDescription = df2$Full.Description
df2$IPqweryMostPopularPatentClass = df2$IPqwery...Most.Popular.Patent.Class
df2$IPqweryMostPopularTrademarkClass = df2$IPqwery...Most.Popular.Trademark.Class
df2 = unique(df2[,  c("id", "value", "value2", "parent", "color",
"Industries", "HeadquartersLocation", "FullDescription",
"IPqweryMostPopularPatentClass",
"IPqweryMostPopularTrademarkClass",
#"sharen",
#"shareusd",
"country", "region", "city")])
#df2 = df2[complete.cases(df2),]
# json
p2 = toJSON(df2)
if (aiversion == F) {
setwd("/Users/pierre-alex/Dropbox/PABalland.github.io/ceps/unido/ecosystem/vc/prio")
write(p2, paste0(tolower(i), ".json"))
#all = paste (p1, p2, p3, collapse="\n")
#writeLines(all, paste0(i, ".html"))
}
if (aiversion == T) {
# create html - top 1000 usd
setwd("/Users/pierre-alex/Dropbox/PABalland.github.io/ceps/unido/ecosystem/vc/prio/ai")
#all = paste (p1, p2, p3.usd, collapse="\n")
write(p2, paste0(tolower(i), ".json"))
}
}
