# Getting sample data.
library(foreign)
mydata = read.dta("http://dss.princeton.edu/training/Panel101.dta")
View(mydata)
# Create a dummy variable to indicate the time when the treatment started. Lets
#assume that treatment started in 1994. In this case, years before 1994 will have a
#value of 0 and 1994+ a 1. If you already have this skip this step.
mydata$time = ifelse(mydata$year >= 1994, 1, 0)
mydata$treated = ifelse(mydata$country == "E" |
mydata$country == "F" |
mydata$country == "G", 1, 0)
# Create an interaction between time and treated. We will call this interaction‘did’.
mydata$did = mydata$time * mydata$treated
didreg = lm(y ~ treated + time + did, data = mydata)
summary(didreg)
7+9
9+9
8.5+9
5985.60*0.35
6836/5
1+1
options(stringsAsFactors=FALSE)
library (data.table)
#library (EconGeo)
#library (dplyr)
#setwd("C:/Dropbox/2-private/1-asg/1-production/2-code")
#source ("fast.co.occurrence.R")
#source ("rescale.R")
#install.packages("arrow")
library(arrow)
wd = "/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/PATENTS/GOOGLEPAT/GOOGLEPAT_202402"
folders = c(
"assignee", #1
"assignee_harmonized", #2: country code
"country_code", #3
"cpc", #4
"family_id", #5
"filing_date", #6
"grant_date", #7
"inventor", #8
"inventor_harmonized", #9
"kind_code", #10
"priority_date" #11
)
i = "2023"
df = NULL
# read family id
setwd(paste0(wd, "/", folders[5]))
df.fam = read_parquet(paste0("df_", i, ".parquet"))
# merge with applicants/inventors
setwd(paste0(wd, "/", folders[2]))
df.app = read_parquet(paste0("df_", i, ".parquet"))
df.app = subset (df.app, df.app$country_code=="UA")
df2 = merge (df.fam, df.app, by = "publication_number")
df2$year = i
df = rbind (df, df2)
View(df)
savedf = df
# ASSIGN CPC TO UKRAINIAN PATENTS
pat2 = NULL
setwd(paste0(wd, "/", folders[4]))
pat = read_parquet(paste0("df_", i, ".parquet"))
pat = unique (pat[, c("publication_number", "code")])
colnames (pat) = c("patnb", "cpc")
total.pat = length(unique(pat$patnb))
pat = read_parquet(paste0("df_", i, ".parquet"))
pat = unique (pat[, c("publication_number", "code")])
head(pat)
pat = read_parquet(paste0("df_", i, ".parquet"))
head(pat)
pat = read_parquet(paste0("df_", i, ".parquet"))
pat = pat[, c("publication_number", "code")]
setDT(pat)
library (dplyr)
pat <- pat %>% distinct ()
colnames (pat) = c("patnb", "cpc")
total.pat = length(unique(pat$patnb))
pat = merge (pat, df, by.x = "patnb", by.y = "publication_number")
head(pat)
head(df)
View(pat)
options(stringsAsFactors=FALSE)
library (data.table)
library (dplyr)
#setwd("C:/Dropbox/2-private/1-asg/1-production/2-code")
#source ("fast.co.occurrence.R")
#source ("rescale.R")
#install.packages("arrow")
library(arrow)
wd = "/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/PATENTS/GOOGLEPAT/GOOGLEPAT_202402"
folders = c(
"assignee", #1
"assignee_harmonized", #2: country code
"country_code", #3
"cpc", #4
"family_id", #5
"filing_date", #6
"grant_date", #7
"inventor", #8
"inventor_harmonized", #9
"kind_code", #10
"priority_date" #11
)
i = "2023"
df = NULL
#for (i in c(2023, 2022, 2021, 2020, 2019, 2018)) {
for (i in c(2023, 2022)) {
# read family id
setwd(paste0(wd, "/", folders[5]))
df.fam = read_parquet(paste0("df_", i, ".parquet"))
# merge with applicants/inventors
setwd(paste0(wd, "/", folders[2]))
df.app = read_parquet(paste0("df_", i, ".parquet"))
df.app = subset (df.app, df.app$country_code=="UA")
df2 = merge (df.fam, df.app, by = "publication_number")
df2$year = i
df = rbind (df, df2)
}
savedf = df
# ASSIGN CPC TO UKRAINIAN PATENTS
pat2 = NULL
df2 = unique(df[, c("publication_number", "family_id")])
#for (i in c(2023, 2022, 2021, 2020, 2019, 2018)) {
for (i in c(2023, 2022)) {
setwd(paste0(wd, "/", folders[4]))
pat = read_parquet(paste0("df_", i, ".parquet"))
pat = pat[, c("publication_number", "code")]
setDT(pat)
pat <- pat %>% distinct ()
colnames (pat) = c("patnb", "cpc")
total.pat = length(unique(pat$patnb))
pat = merge (pat, df2, by.x = "patnb", by.y = "publication_number")
pat2 = rbind (pat, pat2)
}
View(pat2)
head(prio)
# read crosswalk (priorities)
setwd("~/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/patents")
prio = read.csv("prio.csv", sep = ",", check.names = F)[, c("parent",	"cpc")] # in this case in parent
prio$priority = prio$parent
prio = prio[, c("priority",	"cpc")]
head(prio)
head(pat2)
pat2 = unique(pat2[, c("patnb", "cpc")])
# merge with prio & add info
df2 = priority.classification (prio, pat2)
#setwd("C:/Dropbox/2-private/1-asg/1-production/2-code")
#source ("fast.co.occurrence.R")
#source ("rescale.R")
source ("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/priority.classification.R")
# merge with prio & add info
df2 = priority.classification (prio, pat2)
View(df2)
head(df2)
head(df)
# merge back
df = merge (df, df2, by = "publication_number")
# merge back
df = merge (df, df2, by.x = "publication_number", by.y = "patnb")
options(stringsAsFactors=FALSE)
library (data.table)
library (dplyr)
#setwd("C:/Dropbox/2-private/1-asg/1-production/2-code")
#source ("fast.co.occurrence.R")
#source ("rescale.R")
source ("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/priority.classification.R")
#install.packages("arrow")
library(arrow)
wd = "/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/PATENTS/GOOGLEPAT/GOOGLEPAT_202402"
folders = c(
"assignee", #1
"assignee_harmonized", #2: country code
"country_code", #3
"cpc", #4
"family_id", #5
"filing_date", #6
"grant_date", #7
"inventor", #8
"inventor_harmonized", #9
"kind_code", #10
"priority_date" #11
)
i = "2023"
df = NULL
#for (i in c(2023, 2022, 2021, 2020, 2019, 2018)) {
for (i in c(2023, 2022)) {
# read family id
setwd(paste0(wd, "/", folders[5]))
df.fam = read_parquet(paste0("df_", i, ".parquet"))
# merge with applicants/inventors
setwd(paste0(wd, "/", folders[2]))
df.app = read_parquet(paste0("df_", i, ".parquet"))
df.app = subset (df.app, df.app$country_code=="UA")
df2 = merge (df.fam, df.app, by = "publication_number")
df2$year = i
df = rbind (df, df2)
}
savedf = df
# ASSIGN CPC TO UKRAINIAN PATENTS
pat2 = NULL
df2 = unique(df[, c("publication_number", "family_id")])
#for (i in c(2023, 2022, 2021, 2020, 2019, 2018)) {
for (i in c(2023, 2022)) {
setwd(paste0(wd, "/", folders[4]))
pat = read_parquet(paste0("df_", i, ".parquet"))
pat = pat[, c("publication_number", "code")]
setDT(pat)
pat <- pat %>% distinct ()
colnames (pat) = c("patnb", "cpc")
total.pat = length(unique(pat$patnb))
pat = merge (pat, df2, by.x = "patnb", by.y = "publication_number")
pat2 = rbind (pat, pat2)
}
# read crosswalk (priorities)
setwd("~/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/patents")
prio = read.csv("prio.csv", sep = ",", check.names = F)[, c("parent",	"cpc")] # in this case in parent
prio$priority = prio$parent
prio = prio[, c("priority",	"cpc")]
pat2 = unique(pat2[, c("patnb", "cpc")])
# merge with prio & add info
df2 = priority.classification (prio, pat2)
# merge back
df = merge (df, df2, by.x = "publication_number", by.y = "patnb", all = T)
View(df)
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/patents")
df = read.csv ("patmb-prio-epo.csv")
df = read.csv ("patnb-prio-epo.csv")
head(df)
# count per sector
df$freq = 1
df$count = ave (df$freq, df$priority, FUN = sum)
View(df)
df = unique (df)
View(df)
df$freq = NULL
df = unique (df)
head(df)
df = unique (df[, c("priority", "count")])
View(df)
# packages & codes
library(jsonlite)
library(dplyr)
library(tidyverse)
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/patents")
df = unique(read.csv ("patnb-prio-epo.csv"))
df.ai = subset (df, df$priority == "Artificial intelligence")
View(df.ai)
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/crunchbase")
df = read.csv ("first-stats.csv")
View(df)
dfvc = df
View(dfvc)
# packages & codes
library(jsonlite)
library(dplyr)
library(tidyverse)
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/patents")
df = unique(read.csv ("patnb-prio-epo.csv"))
df.ai = subset (df, df$priority == "Artificial intelligence")
View(df.ai)
df = merge (df, df.ai, by = "patnb", all = T)
head(df)
colnames (df) = c("patnb", "priority", "ai")
df$ai[df$ai == "NA"] = 0
df$ai[df$ai == "Artificial intelligence"] = 1
head(df)
df$ai[is.na(df$ai) == T] = 0
head(df)
sum(df$ai)
View(df.ai)
View(df)
df$ai[is.na(df$ai) == T] = 0
df$ai[df$ai == "Artificial intelligence"] = 1
sum(df$ai)
View(df.ai)
df$test = df$ai * 10
df$ai2[is.na(df$ai) == T] = 0
df$ai2[df$ai == "Artificial intelligence"] = 1
df$test = df$ai2 * 10
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/patents")
df = unique(read.csv ("patnb-prio-epo.csv"))
df.ai = subset (df, df$priority == "Artificial intelligence")
df = merge (df, df.ai, by = "patnb", all = T)
View(df)
df$priority = df$priority.x
df$ai[is.na(df$priority.y) == T] = 0
df$ai[df$priority.y == "Artificial intelligence"] = 1
sum(df$ai)
df = df[, c("patnb", "priority", "ai")]
View(df)
# count per sector
df$freq = 1
df$count = ave (df$freq, df$priority, FUN = sum)
df$coun.ai = df$count * df$ai
# count per sector
df$freq = 1
df$count = ave (df$freq, df$priority, FUN = sum)
df$count.ai = df$count * df$ai
View(df)
# count per sector
df$freq = 1
df$count = ave (df$freq, df$priority, FUN = sum)
df$count.ai = df$freq * df$ai
df$count.ai = ave (df$count.ai, df$priority, FUN = sum)
View(df)
# packages & codes
library(jsonlite)
library(dplyr)
library(tidyverse)
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/patents")
df = unique(read.csv ("patnb-prio-epo.csv"))
df.ai = subset (df, df$priority == "Artificial intelligence")
df = merge (df, df.ai, by = "patnb", all = T)
df = subset (df, !df$priority == "Artificial intelligence")
df$priority = df$priority.x
df$ai[is.na(df$priority.y) == T] = 0
df$ai[df$priority.y == "Artificial intelligence"] = 1
sum(df$ai)
df = df[, c("patnb", "priority", "ai")]
# count per sector
df$freq = 1
# packages & codes
library(jsonlite)
library(dplyr)
library(tidyverse)
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/patents")
df = unique(read.csv ("patnb-prio-epo.csv"))
df.ai = subset (df, df$priority == "Artificial intelligence")
df = merge (df, df.ai, by = "patnb", all = T)
df$priority = df$priority.x
df$ai[is.na(df$priority.y) == T] = 0
df$ai[df$priority.y == "Artificial intelligence"] = 1
sum(df$ai)
df = df[, c("patnb", "priority", "ai")]
# count per sector
df$freq = 1
df$count = ave (df$freq, df$priority, FUN = sum)
df$count.ai = df$freq * df$ai
df$count.ai = ave (df$count.ai, df$priority, FUN = sum)
df = unique (df[, c("priority", "count", "count.ai")])
View(df)
df$share = df$count/df$count.ai
df$share = round(df$count/df$count.ai, 3)
View(df)
df$share = round(df$count.ai/df$count, 3)
View(df)
df$share = round(df$count.ai*100/df$count, 3)
View(df)
# count per sector
df$freq = 1
df$count = ave (df$freq, df$priority, FUN = sum)
df$count.ai = df$freq * df$ai
# packages & codes
library(jsonlite)
library(dplyr)
library(tidyverse)
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/patents")
df = unique(read.csv ("patnb-prio-epo.csv"))
df.ai = subset (df, df$priority == "Artificial intelligence")
df = merge (df, df.ai, by = "patnb", all = T)
df$priority = df$priority.x
df$ai[is.na(df$priority.y) == T] = 0
df$ai[df$priority.y == "Artificial intelligence"] = 1
sum(df$ai)
df = df[, c("patnb", "priority", "ai")]
# count per sector
df$freq = 1
df$count = ave (df$freq, df$priority, FUN = sum)
df$count.ai = df$freq * df$ai
df$count.ai = ave (df$count.ai, df$priority, FUN = sum)
df = unique (df[, c("priority", "count", "count.ai")])
df$share = round(df$count.ai*100/df$count, 3)
df$prio = df$priority
df$n = df$share
df$parent = "Artificial intelligence"
df$color = "#365a94"
ex <- toJSON(df)
#setwd("~/Dropbox/1-asg/1-production/3-projects/3-unido/3-outputs/crunchbase/bar-chart")
setwd("/Users/pierre-alex/Dropbox/PABalland.github.io/ceps/unido/json")
write(ex, "bar-chart-pat.json")
View(df)
df = subset (df, !df$priority == "Artificial intelligence")
ex <- toJSON(df)
#setwd("~/Dropbox/1-asg/1-production/3-projects/3-unido/3-outputs/crunchbase/bar-chart")
setwd("/Users/pierre-alex/Dropbox/PABalland.github.io/ceps/unido/json")
write(ex, "bar-chart-pat.json")
# packages & codes
library(jsonlite)
library(dplyr)
library(tidyverse)
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/patents")
df = unique(read.csv ("patnb-prio-epo.csv"))
df.ai = subset (df, df$priority == "Artificial intelligence")
df = merge (df, df.ai, by = "patnb", all = T)
df$priority = df$priority.x
df$ai[is.na(df$priority.y) == T] = 0
df$ai[df$priority.y == "Artificial intelligence"] = 1
sum(df$ai)
df = df[, c("patnb", "priority", "ai")]
# count per sector
df$freq = 1
df$count = ave (df$freq, df$priority, FUN = sum)
df$count.ai = df$freq * df$ai
df$count.ai = ave (df$count.ai, df$priority, FUN = sum)
df = unique (df[, c("priority", "count", "count.ai")])
df$share = round(df$count.ai*100/df$count, 3)
df$prio = df$priority
df$n = df$share
df$parent = "Artificial intelligence"
df$color = "#365a94"
df = df[, c("prio", "n", "parent", "color")]
df = subset (df, !df$prio == "Artificial intelligence")
ex <- toJSON(df)
#setwd("~/Dropbox/1-asg/1-production/3-projects/3-unido/3-outputs/crunchbase/bar-chart")
setwd("/Users/pierre-alex/Dropbox/PABalland.github.io/ceps/unido/json")
write(ex, "bar-chart-pat.json")
# packages & codes
library(jsonlite)
library(dplyr)
library(tidyverse)
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/patents")
df = unique(read.csv ("patnb-prio-epo.csv"))
df.ai = subset (df, df$priority == "Artificial intelligence")
df = merge (df, df.ai, by = "patnb", all = T)
df$priority = df$priority.x
df$ai[is.na(df$priority.y) == T] = 0
df$ai[df$priority.y == "Artificial intelligence"] = 1
sum(df$ai)
df = df[, c("patnb", "priority", "ai")]
# count per sector
df$freq = 1
df$count = ave (df$freq, df$priority, FUN = sum)
df$count.ai = df$freq * df$ai
df$count.ai = ave (df$count.ai, df$priority, FUN = sum)
df = unique (df[, c("priority", "count", "count.ai")])
df$share = round(df$count.ai*100/df$count, 2)
df$prio = df$priority
df$n = df$share
df$parent = "Artificial intelligence"
df$color = "#365a94"
df$color = "#8cab79"
df = df[, c("prio", "n", "parent", "color")]
df = subset (df, !df$prio == "Artificial intelligence")
ex <- toJSON(df)
#setwd("~/Dropbox/1-asg/1-production/3-projects/3-unido/3-outputs/crunchbase/bar-chart")
setwd("/Users/pierre-alex/Dropbox/PABalland.github.io/ceps/unido/json")
write(ex, "bar-chart-pat.json")
