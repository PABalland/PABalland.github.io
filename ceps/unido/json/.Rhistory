# packages & codes
library(jsonlite)
library(dplyr)
library(tidyverse)
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/crunchbase")
df = read.csv ("first-stats.csv")
df = subset (df, !df$prio == "1-manufacturing")
df = subset (df, !df$prio == "13-chemical")
View(df)
df$prio <- sapply(strsplit(df$prio, "-"), function(x) x[2]) #split
df$prio <- sapply(df$prio, function(x) paste0(toupper(substring(x, 1, 1)), substring(x, 2)))#capitalize
View(df)
# packages & codes
library(jsonlite)
library(dplyr)
library(tidyverse)
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/crunchbase")
df = read.csv ("first-stats.csv")
df = subset (df, !df$prio == "1-manufacturing")
df = subset (df, !df$prio == "13-chemical")
df$prio <- sapply(strsplit(df$prio, "-"), function(x) x[2]) #split
df$prio <- sapply(df$prio, function(x) paste0(toupper(substring(x, 1, 1)), substring(x, 2)))#capitalize
df$share.n2 = round(100-df$share.n,2)
df$share.usd2 = round(100-df$share.usd,2)
df$ai = df$share.n
df$non.ai = df$share.n2
df$ai = df$share.usd
df$non.ai = df$share.usd2
ex1 = df[, c("prio", "ai")]
colnames(ex1)=c("prio", "n")
ex2 = df[, c("prio", "non.ai")]
colnames(ex2)=c("prio", "n")
ex1$parent = "Artificial Intelligence"
ex2$parent = "Other"
ex1$color = "#365a94"
ex2$color = "#8cab79"
ex = rbind (ex1,ex2)
ex = subset (ex, ex$parent == "Artificial Intelligence")
ex <- toJSON(ex)
#setwd("~/Dropbox/1-asg/1-production/3-projects/3-unido/3-outputs/crunchbase/bar-chart")
setwd("/Users/pierre-alex/Dropbox/PABalland.github.io/ceps/unido/json")
write(ex, "bar-chart-n.json")
write(ex, "bar-chart-usd.json")
### 1. CONCEPTS CROSSWALK
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/SCIENCE/OPENALEX/concepts_crosswalk")
# select the AI fields & create full tree
df = read.csv ("concepts.csv")
df = df[, c("id", "display_name", "works_count", "description", "level")]
View(df)
names = df[, c("id", "display_name")]
# add first parent
df2 = read.csv ("concepts_to_level0.csv")
df2$X = NULL
colnames (df2) = c("id", "parent")
df2 = merge (df2, names, by.x = "parent", by.y = "id") # name parent 1
df2$parent = NULL
colnames (df2) = c("id", "parent")
df = merge (df, df2, by = "id", all = T)
View(df)
### 1. CONCEPTS CROSSWALK
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/SCIENCE/OPENALEX/concepts_crosswalk")
# select the AI fields & create full tree
df = read.csv ("concepts.csv")
df = df[, c("id", "display_name", "works_count", "description", "level")]
# find parent
names = df[, c("id", "display_name")]
# add first parent
df2 = read.csv ("concepts_to_level0.csv")
df2$X = NULL
colnames (df2) = c("id", "parent")
df2 = merge (df2, names, by.x = "parent", by.y = "id") # name parent 1
df2$parent = NULL
colnames (df2) = c("id", "parent")
df = merge (df, df2, by = "id", all = T)
# add second parent
df2 = read.csv ("concepts_to_level1.csv")
df2$X = NULL
colnames (df2) = c("id", "parent1")
df2 = merge (df2, names, by.x = "parent1", by.y = "id") # name parent 1
df2$parent1 = NULL
colnames (df2) = c("id", "parent1")
df = merge (df, df2, by = "id", all = T)
# add third parent
df2 = read.csv ("concepts_to_level2.csv")
df2$X = NULL
colnames (df2) = c("id", "parent2")
df2 = merge (df2, names, by.x = "parent2", by.y = "id") # name parent 1
df2$parent2 = NULL
colnames (df2) = c("id", "parent2")
df = merge (df, df2, by = "id", all = T)
# add fourth parent
df2 = read.csv ("concepts_to_level3.csv")
df2$X = NULL
colnames (df2) = c("id", "parent3")
df2 = merge (df2, names, by.x = "parent3", by.y = "id") # name parent 1
df2$parent3 = NULL
colnames (df2) = c("id", "parent3")
df = merge (df, df2, by = "id", all = T)
# add fifth parent
df2 = read.csv ("concepts_to_level4.csv")
df2$X = NULL
colnames (df2) = c("id", "parent4")
df2 = merge (df2, names, by.x = "parent4", by.y = "id") # name parent 1
df2$parent4 = NULL
colnames (df2) = c("id", "parent4")
df = merge (df, df2, by = "id", all = T)
# add si parent
df2 = read.csv ("concepts_to_level5.csv")
df2$X = NULL
colnames (df2) = c("id", "parent5")
df2 = merge (df2, names, by.x = "parent5", by.y = "id") # name parent 1
df2$parent5 = NULL
colnames (df2) = c("id", "parent5")
df = merge (df, df2, by = "id", all = T)
View(df)
### 1. CONCEPTS CROSSWALK
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/SCIENCE/OPENALEX/concepts_crosswalk")
# select the AI fields & create full tree
df = read.csv ("concepts.csv")
df = df[, c("id", "display_name", "works_count", "description", "level")]
# find parent
names = df[, c("id", "display_name")]
# add first parent
df2 = read.csv ("concepts_to_level0.csv")
df2$X = NULL
colnames (df2) = c("id", "parent")
df2 = merge (df2, names, by.x = "parent", by.y = "id") # name parent 1
df2$parent = NULL
colnames (df2) = c("id", "parent")
df = merge (df, df2, by = "id", all = T)
# add second parent
df2 = read.csv ("concepts_to_level1.csv")
df2$X = NULL
colnames (df2) = c("id", "parent1")
df2 = merge (df2, names, by.x = "parent1", by.y = "id") # name parent 1
df2$parent1 = NULL
colnames (df2) = c("id", "parent1")
df = merge (df, df2, by = "id", all = T)
# add third parent
df2 = read.csv ("concepts_to_level2.csv")
df2$X = NULL
colnames (df2) = c("id", "parent2")
df2 = merge (df2, names, by.x = "parent2", by.y = "id") # name parent 1
df2$parent2 = NULL
colnames (df2) = c("id", "parent2")
df = merge (df, df2, by = "id", all = T)
# select the AI fields & create full tree
df = read.csv ("concepts.csv")
df = df[, c("id", "display_name", "works_count", "description", "level")]
concepts = df
# find parent
names = df[, c("id", "display_name")]
# add first parent
df2 = read.csv ("concepts_to_level0.csv")
df2$X = NULL
colnames (df2) = c("id", "parent")
df2 = merge (df2, names, by.x = "parent", by.y = "id") # name parent 1
df2$parent = NULL
colnames (df2) = c("id", "parent")
df = merge (df, df2, by = "id", all = T)
# add second parent
df2 = read.csv ("concepts_to_level1.csv")
df2$X = NULL
colnames (df2) = c("id", "parent1")
df2 = merge (df2, names, by.x = "parent1", by.y = "id") # name parent 1
df2$parent1 = NULL
colnames (df2) = c("id", "parent1")
df = merge (df, df2, by = "id", all = T)
# add third parent
df2 = read.csv ("concepts_to_level2.csv")
df2$X = NULL
colnames (df2) = c("id", "parent2")
df2 = merge (df2, names, by.x = "parent2", by.y = "id") # name parent 1
df2$parent2 = NULL
colnames (df2) = c("id", "parent2")
df = merge (df, df2, by = "id", all = T)
### STOP TO 3
# add fourth parent
df2 = read.csv ("concepts_to_level3.csv")
df2$X = NULL
colnames (df2) = c("id", "parent3")
df2 = merge (df2, names, by.x = "parent3", by.y = "id") # name parent 1
df2$parent3 = NULL
colnames (df2) = c("id", "parent3")
df = merge (df, df2, by = "id", all = T)
View(concepts)
### THIS CODE TAKES CPC-PRIO AS AN INPUT
### AND GENERATES A PATNB-PRIO AS AN OUTPUT
### 1. SELECTORS
office = "epo" # patent office: "epo" or "pct"
### 2. READ INPUT FILES
# load packages and codes
library(data.table)
source ("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/priority.classification.R")
# read cpc-prio from regpat
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/PATENTS/REGPAT")
pat = fread(paste0("patnb-cpc-", office, ".csv"))
# select time frame
pat <- pat[as.integer(substr(pat$patnb, 3, 6)) >= 2018 & #2018/22
as.integer(substr(pat$patnb, 3, 6)) <= 2024, ]
# read crosswalk (priorities)
setwd("~/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/patents")
# read crosswalk (priorities)
setwd("~/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/pat")
prio = read.csv("prio.csv", sep = ",", check.names = F)[, c("parent",	"cpc")] # in this case in parent
prio$priority = prio$parent
prio = prio[, c("priority",	"cpc")]
### 3. AGGREGATE CPC INTO CUSTOMIZED PRIORITIES
colnames (prio) = c("priority", "cpc")
head(prio)
head(pat)
## first modif
patcpc = pat[, "cpc"]
## first modif
patcpc = unique(pat[, "cpc"])
## first modif
patcpc = pat
patcpc$patnb = patcpc$cpc
patcpc = unique (patcpc)
### THIS CODE TAKES CPC-PRIO AS AN INPUT
### AND GENERATES A PATNB-PRIO AS AN OUTPUT
### 1. SELECTORS
office = "epo" # patent office: "epo" or "pct"
### 2. READ INPUT FILES
# load packages and codes
library(data.table)
source ("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/priority.classification.R")
# read cpc-prio from regpat
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/1-data/PATENTS/REGPAT")
pat = fread(paste0("patnb-cpc-", office, ".csv"))
# select time frame
pat <- pat[as.integer(substr(pat$patnb, 3, 6)) >= 2021 & #SHOULD BE 2018
as.integer(substr(pat$patnb, 3, 6)) <= 2024, ]
# read crosswalk (priorities)
setwd("~/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/pat")
prio = read.csv("prio.csv", sep = ",", check.names = F)[, c("parent",	"cpc")] # in this case in parent
prio$priority = prio$parent
prio = prio[, c("priority",	"cpc")]
### 3. AGGREGATE CPC INTO CUSTOMIZED PRIORITIES
colnames (prio) = c("priority", "cpc")
## first modif
patcpc = pat
patcpc$patnb = patcpc$cpc
patcpc = unique (patcpc)
prio = priority.classification (prio, patcpc)
# read crosswalk (priorities)
setwd("~/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/pat")
prio = read.csv("prio.csv", sep = ",", check.names = F)[, c("parent",	"cpc")] # in this case in parent
prio$priority = prio$parent
prio = prio[, c("priority",	"cpc")]
### 3. AGGREGATE CPC INTO CUSTOMIZED PRIORITIES
colnames (prio) = c("priority", "cpc")
## first modif
patcpc = pat
patcpc$patnb = patcpc$cpc
patcpc = unique (patcpc)
prio2 = priority.classification (prio, patcpc)
prio3 = priority.classification (prio, pat)
head(prio2)
head(pat)
head(prio)
head(prio3)
prio1 = merge (pat, prio2, by = "cpc")
prio1 = merge (pat, prio2, by.x = "cpc", by.y = "patnb")
View(prio)
View(prio1)
prio1 = unique (prio1[, c("patnb", "priority")])
source ("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/priority.classification.fast.R")
prio3fast = priority.classification.fast (prio, pat)
View(prio)
source ("/Users/pierre-alex/Dropbox/1-asg/1-production/2-code/priority.classification.fast.R")
prio3fast = priority.classification.fast (prio, pat)
# packages & codes
library(jsonlite)
library(dplyr)
library(tidyverse)
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/patents")
# packages & codes
library(jsonlite)
library(dplyr)
library(tidyverse)
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/pat")
df = unique(read.csv ("patnb-prio-epo.csv"))
df.ai = subset (df, df$priority == "Artificial intelligence")
df = merge (df, df.ai, by = "patnb", all = T)
df$priority = df$priority.x
df$ai[is.na(df$priority.y) == T] = 0
df$ai[df$priority.y == "Artificial intelligence"] = 1
sum(df$ai)
df = df[, c("patnb", "priority", "ai")]
# count per sector
df$freq = 1
df$count = ave (df$freq, df$priority, FUN = sum)
df$count.ai = df$freq * df$ai
df$count.ai = ave (df$count.ai, df$priority, FUN = sum)
df = unique (df[, c("priority", "count", "count.ai")])
df$share = round(df$count.ai*100/df$count, 2)
df$prio = df$priority
df$n = df$share
df$parent = "Artificial intelligence"
df$color = "#365a94"
df$color = "#8cab79"
df = df[, c("prio", "n", "parent", "color")]
df = subset (df, !df$prio == "Artificial intelligence")
ex <- toJSON(df)
#setwd("~/Dropbox/1-asg/1-production/3-projects/3-unido/3-outputs/crunchbase/bar-chart")
setwd("/Users/pierre-alex/Dropbox/PABalland.github.io/ceps/unido/json")
write(ex, "penetration-rate-pat.json")
View(df)
View(df)
# packages & codes
library(jsonlite)
library(dplyr)
library(tidyverse)
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/pat")
df = unique(read.csv ("patnb-prio-epo.csv"))
df.ai = subset (df, df$priority == "Artificial intelligence")
df = merge (df, df.ai, by = "patnb", all = T)
df$priority = df$priority.x
df$ai[is.na(df$priority.y) == T] = 0
df$ai[df$priority.y == "Artificial intelligence"] = 1
sum(df$ai)
df = df[, c("patnb", "priority", "ai")]
# count per sector
df$freq = 1
df$count = ave (df$freq, df$priority, FUN = sum)
df$count.ai = df$freq * df$ai
df$count.ai = ave (df$count.ai, df$priority, FUN = sum)
df = unique (df[, c("priority", "count", "count.ai")])
df$share = round(df$count.ai*100/df$count, 2)
df$prio = df$priority
df$n = df$share
df$parent = "Artificial intelligence"
df$color = "#365a94"
df$color = "#8cab79"
df$color = "#237266"
df = df[, c("prio", "n", "parent", "color")]
df = subset (df, !df$prio == "Artificial intelligence")
ex <- toJSON(df)
#setwd("~/Dropbox/1-asg/1-production/3-projects/3-unido/3-outputs/crunchbase/bar-chart")
setwd("/Users/pierre-alex/Dropbox/PABalland.github.io/ceps/unido/json")
write(ex, "penetration-rate-pat.json")
View(df)
# packages & codes
library(jsonlite)
library(dplyr)
library(tidyverse)
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/pat")
df = unique(read.csv ("patnb-prio-epo.csv"))
head(df)
# packages & codes
library(jsonlite)
library(dplyr)
library(tidyverse)
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/pat")
df = unique(read.csv ("patnb-prio-epo.csv"))
df.ai = subset (df, df$priority == "Artificial intelligence")
df = merge (df, df.ai, by = "patnb", all = T)
df$priority = df$priority.x
df$ai[is.na(df$priority.y) == T] = 0
df$ai[df$priority.y == "Artificial intelligence"] = 1
sum(df$ai)
df = df[, c("patnb", "priority", "ai")]
# count per sector
df$freq = 1
df$count = ave (df$freq, df$priority, FUN = sum)
df$count.ai = df$freq * df$ai
df$count.ai = ave (df$count.ai, df$priority, FUN = sum)
df = unique (df[, c("priority", "count", "count.ai")])
df$share = round(df$count.ai*100/df$count, 2)
df$prio = df$priority
df$n = df$share
df$parent = "Artificial intelligence"
df$color = "#365a94"
df$color = "#8cab79"
df$color = "#237266"
df = df[, c("prio", "n", "parent", "color")]
df = subset (df, !df$prio == "Artificial intelligence")
View(df)
# packages & codes
library(jsonlite)
library(dplyr)
library(tidyverse)
# read
setwd("/Users/pierre-alex/Dropbox/1-asg/1-production/3-projects/3-unido/1-data/pat")
df = unique(read.csv ("patnb-prio-epo.csv"))
df.ai = subset (df, df$priority == "Artificial intelligence")
df = merge (df, df.ai, by = "patnb", all = T)
df$priority = df$priority.x
df$ai[is.na(df$priority.y) == T] = 0
df$ai[df$priority.y == "Artificial intelligence"] = 1
sum(df$ai)
df = df[, c("patnb", "priority", "ai")]
# count per sector
df$freq = 1
df$count = ave (df$freq, df$priority, FUN = sum)
df$count.ai = df$freq * df$ai
df$count.ai = ave (df$count.ai, df$priority, FUN = sum)
df = unique (df[, c("priority", "count", "count.ai")])
df$share = round(df$count.ai*100/df$count, 2)
df$prio = df$priority
df$n = df$share
df$parent = "Artificial intelligence"
df$color = "#365a94"
df$color = "#8cab79"
df$color = "#237266"
df = df[, c("prio", "n", "parent", "color")]
df = subset (df, !df$prio == "Artificial intelligence")
# do per year
ex <- toJSON(df)
#setwd("~/Dropbox/1-asg/1-production/3-projects/3-unido/3-outputs/crunchbase/bar-chart")
setwd("/Users/pierre-alex/Dropbox/PABalland.github.io/ceps/unido/json")
write(ex, "penetration-rate-pat.json")
View(df)
