df$sum = ave(df$count, df$nuts2, FUN = sum)
df$count = ave(df$count, df$id, FUN = sum)
df$value = round(100*df$count/df$sum,2)
dfrca = get.list(RCA(get.matrix(unique(df[, c("nuts2", "parent", "count")]))))
colnames(dfrca) = c("nuts2", "parent", "rca")
dfrca1 = subset (dfrca, dfrca$parent == "Digital transition")
colnames(dfrca1) = c("nuts2", "parent", "rcadigital")
dfrca2 = subset (dfrca, dfrca$parent == "Green transition")
colnames(dfrca2) = c("nuts2", "parent", "rcagreen")
dfrca = merge (dfrca1, dfrca2, by = c("nuts2"))
dfrca$parent.x=NULL
dfrca$parent.y=NULL
dfcount = unique(df[, c("nuts2", "parent", "count")])
dfcount1 = subset (dfcount, dfcount$parent == "Digital transition")
colnames(dfcount1) = c("nuts2", "parent", "countdigital")
dfcount2 = subset (dfcount, dfcount$parent == "Green transition")
colnames(dfcount2) = c("nuts2", "parent", "countgreen")
dfcount = merge (dfcount1, dfcount2, by = c("nuts2"))
dfcount$parent.x=NULL
dfcount$parent.y=NULL
df = subset (df, df$parent=="Digital transition")
df = unique (df)
df$id = df$nuts2
df$name = df$nuts2_name
df = merge (df, dfrca, by.x = "id", by.y = "nuts2")
df = merge (df, dfcount, by.x = "id", by.y = "nuts2")
df2 = unique (df[, c("id", "name", "value", "rcagreen", "rcadigital", "countdigital", "countgreen")])
df2 = toJSON(df2)
setwd("C:/Dropbox/2-private/PABalland.github.io/asg/bertelsmann-stiftung/json")
write(df2, paste0("map-digital-share.json"))
values = paste0("https://www.paballand.com/asg/bertelsmann-stiftung/json/", paste0("map-digital-share.json"))
topo = "https://www.paballand.com/json/topojson/NUTS_RG_20M_2010_4326-nuts-2-regpat.json"
dir2 = paste0(dir, "/3-outputs")
as = paste0("4-map-digital-green")
d3plus.geomap(sourcehtml = "C:/Dropbox/2-private/1-asg/1-production/2-code/d3plus-geomap/_source",
topo, values,
dir = dir2,
as = as)
setwd("C:/Dropbox/2-private/1-asg/1-production/2-code/d3plus-geomap")
source ("d3plus.geomap.R")
library(EconGeo)
library(Hmisc)
library(dplyr)
library(jsonlite)
dir = "C:/Dropbox/2-private/1-asg/1-production/3-projects/6-bertelsmann-stiftung"
# read data
setwd(paste0(dir, "/2-analysis"))
df = read.csv ("2-reg-tech.csv", sep = ";", header = T)
# add names
nuts2 = fromJSON("https://www.paballand.com/json/topojson/NUTS_RG_20M_2010_4326-nuts-2-regpat.json")
nuts2 = data.frame(
id = nuts2$objects$NUTS_RG_20M_2010_4326$geometries$id,
name = nuts2$objects$NUTS_RG_20M_2010_4326$geometries$properties$NAME_LATN)
df = merge (df, nuts2, by.x = "nuts2", by.y = "id")
# get parent
setwd(paste0(dir, "/1-data"))
par = read.csv("crosswalk.csv", sep = ";", check.names = F)[, c("parent", "priority")] %>% distinct ()
df = merge (df, par, by.x = "tech", by.y = "priority")
df = df[, c("nuts2", "parent", "nuts2_name", "count")]
df$id = paste0(df$nuts2, df$parent)
df$sum = ave(df$count, df$nuts2, FUN = sum)
df$count = ave(df$count, df$id, FUN = sum)
df$value = round(100*df$count/df$sum,2)
dfrca = get.list(RCA(get.matrix(unique(df[, c("nuts2", "parent", "count")]))))
colnames(dfrca) = c("nuts2", "parent", "rca")
dfrca1 = subset (dfrca, dfrca$parent == "Digital transition")
colnames(dfrca1) = c("nuts2", "parent", "rcadigital")
dfrca2 = subset (dfrca, dfrca$parent == "Green transition")
colnames(dfrca2) = c("nuts2", "parent", "rcagreen")
dfrca = merge (dfrca1, dfrca2, by = c("nuts2"))
dfrca$parent.x=NULL
dfrca$parent.y=NULL
dfcount = unique(df[, c("nuts2", "parent", "count")])
dfcount1 = subset (dfcount, dfcount$parent == "Digital transition")
colnames(dfcount1) = c("nuts2", "parent", "countdigital")
dfcount2 = subset (dfcount, dfcount$parent == "Green transition")
colnames(dfcount2) = c("nuts2", "parent", "countgreen")
dfcount = merge (dfcount1, dfcount2, by = c("nuts2"))
dfcount$parent.x=NULL
dfcount$parent.y=NULL
df = subset (df, df$parent=="Digital transition")
df = unique (df)
df$id = df$nuts2
df$name = df$nuts2_name
df = merge (df, dfrca, by.x = "id", by.y = "nuts2")
df = merge (df, dfcount, by.x = "id", by.y = "nuts2")
df2 = unique (df[, c("id", "name", "value", "rcagreen", "rcadigital", "countdigital", "countgreen")])
df2 = toJSON(df2)
setwd("C:/Dropbox/2-private/PABalland.github.io/asg/bertelsmann-stiftung/json")
write(df2, paste0("map-digital-share.json"))
values = paste0("https://www.paballand.com/asg/bertelsmann-stiftung/json/", paste0("map-digital-share.json"))
topo = "https://www.paballand.com/json/topojson/NUTS_RG_20M_2010_4326-nuts-2-regpat.json"
dir2 = paste0(dir, "/3-outputs")
as = paste0("4-map-digital-green")
d3plus.geomap(sourcehtml = "C:/Dropbox/2-private/1-asg/1-production/2-code/d3plus-geomap/_source",
topo, values,
dir = dir2,
as = as)
head(df2)
head(df)
setwd("C:/Dropbox/2-private/PABalland.github.io/asg/bertelsmann-stiftung/json")
write(df2, paste0("map-digital-share.json"))
values = paste0("https://www.paballand.com/asg/bertelsmann-stiftung/json/", paste0("map-digital-share.json"))
topo = "https://www.paballand.com/json/topojson/NUTS_RG_20M_2010_4326-nuts-2-regpat.json"
dir2 = paste0(dir, "/3-outputs")
as = paste0("4-map-digital-green")
d3plus.geomap(sourcehtml = "C:/Dropbox/2-private/1-asg/1-production/2-code/d3plus-geomap/_source",
topo, values,
dir = dir2,
as = as)
head(df)
df2$value2 = log(df2$value + 0.001)
head(df)
setwd("C:/Dropbox/2-private/1-asg/1-production/2-code/d3plus-geomap")
source ("d3plus.geomap.R")
library(EconGeo)
library(Hmisc)
library(dplyr)
library(jsonlite)
dir = "C:/Dropbox/2-private/1-asg/1-production/3-projects/6-bertelsmann-stiftung"
# read data
setwd(paste0(dir, "/2-analysis"))
df = read.csv ("2-reg-tech.csv", sep = ";", header = T)
# add names
nuts2 = fromJSON("https://www.paballand.com/json/topojson/NUTS_RG_20M_2010_4326-nuts-2-regpat.json")
nuts2 = data.frame(
id = nuts2$objects$NUTS_RG_20M_2010_4326$geometries$id,
name = nuts2$objects$NUTS_RG_20M_2010_4326$geometries$properties$NAME_LATN)
df = merge (df, nuts2, by.x = "nuts2", by.y = "id")
# get parent
setwd(paste0(dir, "/1-data"))
par = read.csv("crosswalk.csv", sep = ";", check.names = F)[, c("parent", "priority")] %>% distinct ()
df = merge (df, par, by.x = "tech", by.y = "priority")
df = df[, c("nuts2", "parent", "nuts2_name", "count")]
df$id = paste0(df$nuts2, df$parent)
#df$sum = ave(df$count, df$nuts2, FUN = sum)
df$count = ave(df$count, df$id, FUN = sum)
df$value = df$count
dfrca = get.list(RCA(get.matrix(unique(df[, c("nuts2", "parent", "count")]))))
colnames(dfrca) = c("nuts2", "parent", "rca")
dfrca1 = subset (dfrca, dfrca$parent == "Digital transition")
colnames(dfrca1) = c("nuts2", "parent", "rcadigital")
dfrca2 = subset (dfrca, dfrca$parent == "Green transition")
colnames(dfrca2) = c("nuts2", "parent", "rcagreen")
dfrca = merge (dfrca1, dfrca2, by = c("nuts2"))
dfrca$parent.x=NULL
dfrca$parent.y=NULL
dfcount = unique(df[, c("nuts2", "parent", "count")])
dfcount1 = subset (dfcount, dfcount$parent == "Digital transition")
colnames(dfcount1) = c("nuts2", "parent", "countdigital")
dfcount2 = subset (dfcount, dfcount$parent == "Green transition")
colnames(dfcount2) = c("nuts2", "parent", "countgreen")
dfcount = merge (dfcount1, dfcount2, by = c("nuts2"))
dfcount$parent.x=NULL
dfcount$parent.y=NULL
df = subset (df, df$parent=="Green transition")
df = unique (df)
df$id = df$nuts2
df$name = df$nuts2_name
df = merge (df, dfrca, by.x = "id", by.y = "nuts2")
df = merge (df, dfcount, by.x = "id", by.y = "nuts2")
df2 = unique (df[, c("id", "name", "value", "rcagreen", "rcadigital", "countdigital", "countgreen")])
df2$value2 = log(df2$value + 0.001)
df2 = toJSON(df2)
setwd("C:/Dropbox/2-private/PABalland.github.io/asg/bertelsmann-stiftung/json")
write(df2, paste0("map-green.json"))
values = paste0("https://www.paballand.com/asg/bertelsmann-stiftung/json/", paste0("map-green.json"))
topo = "https://www.paballand.com/json/topojson/NUTS_RG_20M_2010_4326-nuts-2-regpat.json"
dir2 = paste0(dir, "/3-outputs")
as = paste0("4-map-green")
d3plus.geomap(sourcehtml = "C:/Dropbox/2-private/1-asg/1-production/2-code/d3plus-geomap/_source",
topo, values,
dir = dir2,
as = as)
setwd("C:/Dropbox/2-private/1-asg/1-production/2-code/d3plus-geomap")
source ("d3plus.geomap.R")
library(EconGeo)
library(Hmisc)
library(dplyr)
library(jsonlite)
dir = "C:/Dropbox/2-private/1-asg/1-production/3-projects/6-bertelsmann-stiftung"
# read data
setwd(paste0(dir, "/2-analysis"))
df = read.csv ("2-reg-tech.csv", sep = ";", header = T)
# add names
nuts2 = fromJSON("https://www.paballand.com/json/topojson/NUTS_RG_20M_2010_4326-nuts-2-regpat.json")
nuts2 = data.frame(
id = nuts2$objects$NUTS_RG_20M_2010_4326$geometries$id,
name = nuts2$objects$NUTS_RG_20M_2010_4326$geometries$properties$NAME_LATN)
df = merge (df, nuts2, by.x = "nuts2", by.y = "id")
# get parent
setwd(paste0(dir, "/1-data"))
par = read.csv("crosswalk.csv", sep = ";", check.names = F)[, c("parent", "priority")] %>% distinct ()
df = merge (df, par, by.x = "tech", by.y = "priority")
df = df[, c("nuts2", "parent", "nuts2_name", "count")]
df$id = paste0(df$nuts2, df$parent)
#df$sum = ave(df$count, df$nuts2, FUN = sum)
df$count = ave(df$count, df$id, FUN = sum)
df$value = df$count
dfrca = get.list(RCA(get.matrix(unique(df[, c("nuts2", "parent", "count")]))))
colnames(dfrca) = c("nuts2", "parent", "rca")
dfrca1 = subset (dfrca, dfrca$parent == "Digital transition")
colnames(dfrca1) = c("nuts2", "parent", "rcadigital")
dfrca2 = subset (dfrca, dfrca$parent == "Green transition")
colnames(dfrca2) = c("nuts2", "parent", "rcagreen")
dfrca = merge (dfrca1, dfrca2, by = c("nuts2"))
dfrca$parent.x=NULL
dfrca$parent.y=NULL
dfcount = unique(df[, c("nuts2", "parent", "count")])
dfcount1 = subset (dfcount, dfcount$parent == "Digital transition")
colnames(dfcount1) = c("nuts2", "parent", "countdigital")
dfcount2 = subset (dfcount, dfcount$parent == "Green transition")
colnames(dfcount2) = c("nuts2", "parent", "countgreen")
dfcount = merge (dfcount1, dfcount2, by = c("nuts2"))
dfcount$parent.x=NULL
dfcount$parent.y=NULL
df = subset (df, df$parent=="Digital transition")
df = unique (df)
df$id = df$nuts2
df$name = df$nuts2_name
df = merge (df, dfrca, by.x = "id", by.y = "nuts2")
df = merge (df, dfcount, by.x = "id", by.y = "nuts2")
df2 = unique (df[, c("id", "name", "value", "rcagreen", "rcadigital", "countdigital", "countgreen")])
df2$value2 = log(df2$value + 0.001)
df2 = toJSON(df2)
setwd("C:/Dropbox/2-private/PABalland.github.io/asg/bertelsmann-stiftung/json")
write(df2, paste0("map-digital.json"))
values = paste0("https://www.paballand.com/asg/bertelsmann-stiftung/json/", paste0("map-digital.json"))
topo = "https://www.paballand.com/json/topojson/NUTS_RG_20M_2010_4326-nuts-2-regpat.json"
dir2 = paste0(dir, "/3-outputs")
as = paste0("4-map-digital")
d3plus.geomap(sourcehtml = "C:/Dropbox/2-private/1-asg/1-production/2-code/d3plus-geomap/_source",
topo, values,
dir = dir2,
as = as)
head(df)
library(EconGeo)
library(Hmisc)
library(dplyr)
library (jsonlite)
setwd("C:/Dropbox/2-private/1-asg/1-production/2-code")
source ("rescale.R")
dir = "C:/Dropbox/2-private/1-asg/1-production/3-projects/6-bertelsmann-stiftung"
### LOAD CODE
setwd("C:/Dropbox/2-private/1-asg/1-production/3-projects/6-bertelsmann-stiftung/3-outputs/_source")
source ("d3plus.network.R")
### PREPARE DATA
# regions names
nuts2url = fromJSON("https://www.paballand.com/json/topojson/NUTS_RG_20M_2010_4326-nuts-2-regpat.json")
nuts2 = data.frame(
id = nuts2url$objects$NUTS_RG_20M_2010_4326$geometries$id,
name = nuts2url$objects$NUTS_RG_20M_2010_4326$geometries$properties$NAME_LATN)
### NET AT THE TRANSITION LEVEL
setwd(paste0(dir, "/2-analysis"))
dff2 = read.csv2("4-reg-reg.csv")
head(dff2)
setwd(paste0(dir, "/1-data"))
par = read.csv("crosswalk.csv", sep = ";", check.names = F)[, c("parent", "priority")] %>% distinct ()
dff2 = merge (dff2, par, by.x = "tech", by.y = "priority")
head(dff2)
subset(dff2, dff2$reg1==dff2$reg2)
head(dff2)
write.csv(dff2, "reg-reg-julia.csv", row.names = F)
setwd("C:/Dropbox/2-private/1-asg/1-production/2-code/d3plus-geomap")
source ("d3plus.geomap.R")
library(EconGeo)
library(Hmisc)
library(dplyr)
library(jsonlite)
dir = "C:/Dropbox/2-private/1-asg/1-production/3-projects/6-bertelsmann-stiftung"
# read data
setwd(paste0(dir, "/2-analysis"))
df = read.csv ("2-reg-tech.csv", sep = ";", header = T)
# add names
nuts2 = fromJSON("https://www.paballand.com/json/topojson/NUTS_RG_20M_2010_4326-nuts-2-regpat.json")
nuts2 = data.frame(
id = nuts2$objects$NUTS_RG_20M_2010_4326$geometries$id,
name = nuts2$objects$NUTS_RG_20M_2010_4326$geometries$properties$NAME_LATN)
df = merge (df, nuts2, by.x = "nuts2", by.y = "id")
# get parent
setwd(paste0(dir, "/1-data"))
par = read.csv("crosswalk.csv", sep = ";", check.names = F)[, c("parent", "priority")] %>% distinct ()
df = merge (df, par, by.x = "tech", by.y = "priority")
df = df[, c("nuts2", "parent", "nuts2_name", "count")]
df$id = paste0(df$nuts2, df$parent)
df$sum = ave(df$count, df$nuts2, FUN = sum)
df$count = ave(df$count, df$id, FUN = sum)
df$value = round(100*df$count/df$sum,2)
dfrca = get.list(RCA(get.matrix(unique(df[, c("nuts2", "parent", "count")]))))
colnames(dfrca) = c("nuts2", "parent", "rca")
dfrca1 = subset (dfrca, dfrca$parent == "Digital transition")
colnames(dfrca1) = c("nuts2", "parent", "rcadigital")
dfrca2 = subset (dfrca, dfrca$parent == "Green transition")
colnames(dfrca2) = c("nuts2", "parent", "rcagreen")
dfrca = merge (dfrca1, dfrca2, by = c("nuts2"))
dfrca$parent.x=NULL
dfrca$parent.y=NULL
dfcount = unique(df[, c("nuts2", "parent", "count")])
dfcount1 = subset (dfcount, dfcount$parent == "Digital transition")
colnames(dfcount1) = c("nuts2", "parent", "countdigital")
dfcount2 = subset (dfcount, dfcount$parent == "Green transition")
colnames(dfcount2) = c("nuts2", "parent", "countgreen")
dfcount = merge (dfcount1, dfcount2, by = c("nuts2"))
dfcount$parent.x=NULL
dfcount$parent.y=NULL
df = subset (df, df$parent=="Digital transition")
df = unique (df)
df$id = df$nuts2
df$name = df$nuts2_name
df = merge (df, dfrca, by.x = "id", by.y = "nuts2")
df = merge (df, dfcount, by.x = "id", by.y = "nuts2")
df2 = unique (df[, c("id", "name", "value", "rcagreen", "rcadigital", "countdigital", "countgreen")])
df2 = toJSON(df2)
setwd("C:/Dropbox/2-private/PABalland.github.io/asg/bertelsmann-stiftung/json")
write(df2, paste0("map-digital-share.json"))
values = paste0("https://www.paballand.com/asg/bertelsmann-stiftung/json/", paste0("map-digital-share.json"))
topo = "https://www.paballand.com/json/topojson/NUTS_RG_20M_2010_4326-nuts-2-regpat.json"
dir2 = paste0(dir, "/3-outputs")
as = paste0("4-map-digital-green-2")
d3plus.geomap(sourcehtml = "C:/Dropbox/2-private/1-asg/1-production/2-code/d3plus-geomap/_source",
topo, values,
dir = dir2,
as = as)
head(df2)
setwd("C:/Dropbox/2-private/1-asg/1-production/2-code/d3plus-geomap")
source ("d3plus.geomap.R")
library(EconGeo)
library(Hmisc)
library(dplyr)
library(jsonlite)
dir = "C:/Dropbox/2-private/1-asg/1-production/3-projects/6-bertelsmann-stiftung"
# read data
setwd(paste0(dir, "/2-analysis"))
df = read.csv ("2-reg-tech.csv", sep = ";", header = T)
# add names
nuts2 = fromJSON("https://www.paballand.com/json/topojson/NUTS_RG_20M_2010_4326-nuts-2-regpat.json")
nuts2 = data.frame(
id = nuts2$objects$NUTS_RG_20M_2010_4326$geometries$id,
name = nuts2$objects$NUTS_RG_20M_2010_4326$geometries$properties$NAME_LATN)
df = merge (df, nuts2, by.x = "nuts2", by.y = "id")
# get parent
setwd(paste0(dir, "/1-data"))
par = read.csv("crosswalk.csv", sep = ";", check.names = F)[, c("parent", "priority")] %>% distinct ()
df = merge (df, par, by.x = "tech", by.y = "priority")
df = df[, c("nuts2", "parent", "nuts2_name", "count")]
df$id = paste0(df$nuts2, df$parent)
df$sum = ave(df$count, df$nuts2, FUN = sum)
df$count = ave(df$count, df$id, FUN = sum)
df$value = round(100*df$count/df$sum,2)
dfrca = get.list(RCA(get.matrix(unique(df[, c("nuts2", "parent", "count")]))))
colnames(dfrca) = c("nuts2", "parent", "rca")
dfrca1 = subset (dfrca, dfrca$parent == "Digital transition")
colnames(dfrca1) = c("nuts2", "parent", "rcadigital")
dfrca2 = subset (dfrca, dfrca$parent == "Green transition")
colnames(dfrca2) = c("nuts2", "parent", "rcagreen")
dfrca = merge (dfrca1, dfrca2, by = c("nuts2"))
dfrca$parent.x=NULL
dfrca$parent.y=NULL
dfcount = unique(df[, c("nuts2", "parent", "count")])
dfcount1 = subset (dfcount, dfcount$parent == "Digital transition")
colnames(dfcount1) = c("nuts2", "parent", "countdigital")
dfcount2 = subset (dfcount, dfcount$parent == "Green transition")
colnames(dfcount2) = c("nuts2", "parent", "countgreen")
dfcount = merge (dfcount1, dfcount2, by = c("nuts2"))
dfcount$parent.x=NULL
dfcount$parent.y=NULL
df = subset (df, df$parent=="Digital transition")
df = unique (df)
df$id = df$nuts2
df$name = df$nuts2_name
df = merge (df, dfrca, by.x = "id", by.y = "nuts2")
df = merge (df, dfcount, by.x = "id", by.y = "nuts2")
df2 = unique (df[, c("id", "name", "value", "rcagreen", "rcadigital", "countdigital", "countgreen")])
View(df2)
df2$sumdig = sum(df2$countdigital)
df2$sumgreen = sum(df2$countgreen)
View(dff2)
View(df2)
df2$shdig = df2$sumdig/(df2$sumgreen+df2$sumdig)
View(df2)
df2$shdig = round((100*df2$sumdig)/(df2$sumgreen+df2$sumdig), 2)
View(df2)
mean(df2$value)
df2 = unique (df[, c("id", "name", "value", "rcagreen", "rcadigital", "countdigital", "countgreen")])
df2 = subset (df2, df2$id != "EL62")
df2 = subset (df2, df2$id != "ES64")
df2$sumdig = sum(df2$countdigital)
df2$sumgreen = sum(df2$countgreen)
df2$shdig = round((100*df2$sumdig)/(df2$sumgreen+df2$sumdig), 2)
mean(df2$value)
df2$dev = df2$value-df2$shdig
df2$value = df2$dev
df2 = toJSON(df2)
setwd("C:/Dropbox/2-private/PABalland.github.io/asg/bertelsmann-stiftung/json")
write(df2, paste0("map-digital-share.json"))
values = paste0("https://www.paballand.com/asg/bertelsmann-stiftung/json/", paste0("map-digital-share.json"))
topo = "https://www.paballand.com/json/topojson/NUTS_RG_20M_2010_4326-nuts-2-regpat.json"
dir2 = paste0(dir, "/3-outputs")
as = paste0("4-map-digital-green-dev")
d3plus.geomap(sourcehtml = "C:/Dropbox/2-private/1-asg/1-production/2-code/d3plus-geomap/_source",
topo, values,
dir = dir2,
as = as)
# select countries
nuts2 = fromJSON("https://www.paballand.com/json/data/world-urban-areas.json")
# select countries
sub = fromJSON("https://www.paballand.com/json/data/world-urban-areas.json")
View(sub)
sub = subset (sub, sub$country %in% ctries)
# select countries
sub = fromJSON("https://www.paballand.com/json/data/world-urban-areas.json")
ctries <- c("Austria",
"Belgium",
"Bulgaria",
"Croatia",
"Republic of Cyprus",
"Czech Republic",
"Denmark",
"Estonia",
"Finland",
"France",
"Germany",
"Greece",
"Hungary",
"Ireland",
"Italy",
"Latvia",
"Lithuania",
"Luxembourg",
"Malta",
"Netherlands",
"Poland",
"Portugal",
"Romania",
"Slovakia",
"Slovenia",
"Spain",
"Sweden")
sub = subset (sub, sub$country %in% ctries)
View(sub)
length(unique(sub$country))
(unique(sub$country))
# select countries
sub = fromJSON("https://www.paballand.com/json/data/world-urban-areas.json")
View(sub)
ctries <- c("Austria",
"Belgium",
"Bulgaria",
"Croatia",
"Republic of Cyprus",
"Czechia",
"Denmark",
"Estonia",
"Finland",
"France",
"Germany",
"Greece",
"Hungary",
"Ireland",
"Italy",
"Latvia",
"Lithuania",
"Luxembourg",
"Malta",
"Netherlands",
"Poland",
"Portugal",
"Romania",
"Slovakia",
"Slovenia",
"Spain",
"Sweden")
sub2 = subset (sub, sub$country %in% ctries)
length(unique(sub2$country))
unique(sub2$country)
View(sub2)
27-3
!ctries %in% sub2$country
setwd("C:/Dropbox/2-private/PABalland.github.io/json/data")
# select countries
sub = fromJSON("https://www.paballand.com/json/data/world-urban-areas.json")
ctries <- c("Austria",
"Belgium",
"Bulgaria",
"Croatia",
"Republic of Cyprus",
"Czechia",
"Denmark",
"Estonia",
"Finland",
"France",
"Germany",
"Greece",
"Hungary",
"Ireland",
"Italy",
"Latvia",
"Lithuania",
"Luxembourg",
"Malta",
"Netherlands",
"Poland",
"Portugal",
"Romania",
"Slovakia",
"Slovenia",
"Spain",
"Sweden")
sub2 = subset (sub, sub$country %in% ctries)
sub2 = toJSON(sub2)
setwd("C:/Dropbox/2-private/PABalland.github.io/json/data")
write(sub2, paste0("eu-27.json"))
